[
    {
        "filename": "AMQ-6548.json",
        "creation_time": "2016-12-21T12:04:12.000+0000",
        "bug_report": {
            "Title": "EJB Invocation Failure Due to Component Shutdown",
            "Description": "An error occurs when attempting to invoke the 'onMessage' method of a message-driven bean (MDB) while the EJB component is shutting down. This results in an EJBComponentUnavailableException, indicating that the invocation cannot proceed.",
            "StackTrace": [
                "2016-12-15 16:12:58,831 ERROR [org.jboss.as.ejb3.invocation.processInvocation] (default-threads - 23) WFLYEJB0034: EJB Invocation failed on component test.test.mdb for method public void test.test.onMessage(javax.jms.Message): org.jboss.as.ejb3.component.EJBComponentUnavailableException: WFLYEJB0421: Invocation cannot proceed as component is shutting down",
                "at org.jboss.as.ejb3.component.interceptors.ShutDownInterceptorFactory$1.processInvocation(ShutDownInterceptorFactory.java:59)",
                "at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)",
                "at org.jboss.as.ejb3.deployment.processors.EjbSuspendInterceptor.processInvocation(EjbSuspendInterceptor.java:53)",
                "at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)",
                "at org.jboss.as.ejb3.component.interceptors.LoggingInterceptor.processInvocation(LoggingInterceptor.java:66)",
                "at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)",
                "at org.jboss.as.ee.component.NamespaceContextInterceptor.processInvocation(NamespaceContextInterceptor.java:50)",
                "at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)",
                "at org.jboss.as.ejb3.component.interceptors.AdditionalSetupInterceptor.processInvocation(AdditionalSetupInterceptor.java:54)",
                "at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)",
                "at org.jboss.as.ejb3.component.messagedriven.MessageDrivenComponentDescription$5$1.processInvocation(MessageDrivenComponentDescription.java:213)",
                "at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)",
                "at org.jboss.invocation.ContextClassLoaderInterceptor.processInvocation(ContextClassLoaderInterceptor.java:64)",
                "at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)",
                "at org.jboss.invocation.InterceptorContext.run(InterceptorContext.java:356)",
                "at org.wildfly.security.manager.WildFlySecurityManager.doChecked(WildFlySecurityManager.java:634)",
                "at org.jboss.invocation.AccessCheckingInterceptor.processInvocation(AccessCheckingInterceptor.java:61)",
                "at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)",
                "at org.jboss.invocation.InterceptorContext.run(InterceptorContext.java:356)",
                "at org.jboss.invocation.PrivilegedWithCombinerInterceptor.processInvocation(PrivilegedWithCombinerInterceptor.java:80)",
                "at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)",
                "at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61)",
                "at org.jboss.as.ee.component.ViewService$View.invoke(ViewService.java:195)",
                "at org.jboss.as.ee.component.ViewDescription$1.processInvocation(ViewDescription.java:185)",
                "at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)",
                "at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61)",
                "at org.jboss.as.ee.component.ProxyInvocationHandler.invoke(ProxyInvocationHandler.java:73)",
                "at test.test$$$view19.onMessage(Unknown Source)",
                "at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                "at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                "at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                "at java.lang.reflect.Method.invoke(Method.java:498)",
                "at org.jboss.as.ejb3.inflow.MessageEndpointInvocationHandler.doInvoke(MessageEndpointInvocationHandler.java:139)",
                "at org.jboss.as.ejb3.inflow.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:73)",
                "at test.test$$$endpoint12.onMessage(Unknown Source)",
                "at org.apache.activemq.ra.MessageEndpointProxy$MessageEndpointAlive.onMessage(MessageEndpointProxy.java:123)",
                "at org.apache.activemq.ra.MessageEndpointProxy.onMessage(MessageEndpointProxy.java:64)",
                "at org.apache.activemq.ActiveMQSession.run(ActiveMQSession.java:1041)",
                "at org.apache.activemq.ra.ServerSessionImpl.run(ServerSessionImpl.java:169)",
                "at org.jboss.jca.core.workmanager.WorkWrapper.run(WorkWrapper.java:226)",
                "at org.jboss.threads.SimpleDirectExecutor.execute(SimpleDirectExecutor.java:33)",
                "at org.jboss.threads.QueueExecutor.runTask(QueueExecutor.java:808)",
                "at org.jboss.threads.QueueExecutor.access$100(QueueExecutor.java:45)",
                "at org.jboss.threads.QueueExecutor$Worker.run(QueueExecutor.java:828)",
                "at java.lang.Thread.run(Thread.java:745)",
                "at org.jboss.threads.JBossThread.run(JBossThread.java:320)"
            ],
            "StepsToReproduce": [
                "Deploy the EJB component that includes the message-driven bean (MDB).",
                "Trigger a message to be sent to the MDB while the EJB component is in the process of shutting down."
            ],
            "ExpectedBehavior": "The 'onMessage' method should be invoked successfully without any exceptions, even during component shutdown.",
            "ObservedBehavior": "An EJBComponentUnavailableException is thrown, indicating that the invocation cannot proceed as the component is shutting down.",
            "AdditionalDetails": "The issue may be related to the timing of the shutdown process and message delivery. The 'run()' method in the source code suggests that there are conditions under which message dispatching occurs, which may not be handled correctly during shutdown."
        }
    },
    {
        "filename": "AMQ-3434.json",
        "creation_time": "2011-08-03T09:15:05.000+0000",
        "bug_report": {
            "Title": "NullPointerException in ListIndex.loadNode",
            "Description": "A NullPointerException occurs in the ListIndex class when attempting to load a node. This issue arises during the execution of a transaction in the PListStore, specifically when trying to retrieve a persistent list from the store.",
            "StackTrace": [
                "java.lang.NullPointerException",
                "at org.apache.kahadb.index.ListIndex.loadNode(ListIndex.java:203)",
                "at org.apache.kahadb.index.ListIndex.load(ListIndex.java:75)",
                "at org.apache.activemq.store.kahadb.plist.PListStore$1.execute(PListStore.java:219)",
                "at org.apache.kahadb.page.Transaction.execute(Transaction.java:729)",
                "at org.apache.activemq.store.kahadb.plist.PListStore.getPList(PListStore.java:216)",
                "at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.getDiskList(FilePendingMessageCursor.java:454)",
                "at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.flushToDisk(FilePendingMessageCursor.java:432)",
                "at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.tryAddMessageLast(FilePendingMessageCursor.java:217)",
                "at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.addMessageLast(FilePendingMessageCursor.java:193)",
                "at org.apache.activemq.broker.region.Queue.sendMessage(Queue.java:1629)",
                "at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:720)",
                "at org.apache.activemq.broker.region.Queue.send(Queue.java:652)",
                "at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:379)",
                "at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:523)",
                "at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)",
                "at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)",
                "at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:304)",
                "at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)",
                "at org.apache.activemq.broker.UserIDBroker.send(UserIDBroker.java:56)",
                "at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)",
                "at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:468)",
                "at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:681)",
                "at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:316)",
                "at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:180)",
                "at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)",
                "at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:81)",
                "at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:140)",
                "at org.apache.activemq.transport.stomp.ProtocolConverter.onStompSend(ProtocolConverter.java:257)",
                "at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:178)",
                "at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:70)",
                "at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)",
                "at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:221)",
                "at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:203)",
                "at java.lang.Thread.run(Thread.java:662)"
            ],
            "StepsToReproduce": [
                "1. Start the ActiveMQ broker.",
                "2. Send a message to a queue that triggers the PListStore to execute a transaction.",
                "3. Observe the logs for a NullPointerException in the ListIndex.loadNode method."
            ],
            "ExpectedBehavior": "The system should successfully load the node from the ListIndex without throwing a NullPointerException.",
            "ObservedBehavior": "A NullPointerException is thrown, indicating that an attempt was made to access a method or property of a null object reference in the ListIndex.loadNode method.",
            "AdditionalDetails": "The issue seems to stem from the getPList method in the PListStore class, which may not be properly initializing or retrieving the persistent lists, leading to a null reference when attempting to load a node."
        }
    },
    {
        "filename": "AMQ-3443.json",
        "creation_time": "2011-08-09T17:46:14.000+0000",
        "bug_report": {
            "Title": "FileNotFoundException during KahaDB checkpoint cleanup",
            "Description": "A FileNotFoundException is thrown when attempting to perform a checkpoint cleanup in KahaDB. The error indicates that a temporary file required for the operation cannot be found, which suggests that the file may not have been created or was deleted unexpectedly.",
            "StackTrace": [
                "java.io.FileNotFoundException: target/testQueueTransactionalOrderWithRestart/testQueueTransactionalOrderWithRestart/KahaDB/tx-7648-1312867516460.tmp (No such file or directory)",
                "at org.apache.kahadb.util.IOExceptionSupport.create(IOExceptionSupport.java:27)",
                "at org.apache.kahadb.page.PageFile.writeBatch(PageFile.java:1002)",
                "at org.apache.kahadb.page.PageFile.flush(PageFile.java:482)",
                "at org.apache.activemq.store.kahadb.MessageDatabase.checkpointUpdate(MessageDatabase.java:1167)",
                "at org.apache.activemq.store.kahadb.MessageDatabase$10.execute(MessageDatabase.java:728)",
                "at org.apache.kahadb.page.Transaction.execute(Transaction.java:762)",
                "at org.apache.activemq.store.kahadb.MessageDatabase.checkpointCleanup(MessageDatabase.java:726)",
                "at org.apache.activemq.store.kahadb.MessageDatabase.checkpointCleanup(MessageDatabase.java:714)",
                "at org.apache.activemq.store.kahadb.MessageDatabase$3.run(MessageDatabase.java:279)",
                "Caused by: java.io.FileNotFoundException: target/testQueueTransactionalOrderWithRestart/testQueueTransactionalOrderWithRestart/KahaDB/tx-7648-1312867516460.tmp (No such file or directory)",
                "at java.io.RandomAccessFile.open(Native Method)",
                "at java.io.RandomAccessFile.<init>(RandomAccessFile.java:212)",
                "at org.apache.kahadb.page.PageFile$PageWrite.getDiskBound(PageFile.java:185)",
                "at org.apache.kahadb.page.PageFile.writeBatch(PageFile.java:1000)"
            ],
            "StepsToReproduce": [
                "1. Set up a KahaDB instance with the specified directory structure.",
                "2. Trigger a checkpoint cleanup operation in the KahaDB.",
                "3. Observe the logs for any FileNotFoundException related to temporary files."
            ],
            "ExpectedBehavior": "The checkpoint cleanup operation should complete successfully without throwing a FileNotFoundException, and the necessary temporary files should be created and accessible.",
            "ObservedBehavior": "A FileNotFoundException is thrown indicating that a required temporary file does not exist, preventing the checkpoint cleanup from completing.",
            "AdditionalDetails": "The issue may be related to the lifecycle of temporary files in KahaDB. It is important to ensure that the directory structure is correctly set up and that the application has the necessary permissions to create and access files in the specified directory."
        }
    },
    {
        "filename": "AMQ-4369.json",
        "creation_time": "2013-03-13T13:51:31.000+0000",
        "bug_report": {
            "Title": "IOException during Message Acknowledgment in ActiveMQ KahaDB",
            "Description": "An IOException is thrown when attempting to read from a RandomAccessFile during the acknowledgment of a message in the ActiveMQ KahaDB storage. This issue appears to occur when the system is trying to update the index after a message has been acknowledged, leading to a failure in reading the necessary data from the file.",
            "StackTrace": [
                "java.io.IOException: Input/output error",
                "at java.io.RandomAccessFile.readBytes(Native Method)",
                "at java.io.RandomAccessFile.read(RandomAccessFile.java:355)",
                "at java.io.RandomAccessFile.readFully(RandomAccessFile.java:414)",
                "at java.io.RandomAccessFile.readFully(RandomAccessFile.java:394)",
                "at org.apache.kahadb.page.PageFile.readPage(PageFile.java:833)",
                "at org.apache.kahadb.page.Transaction$2.readPage(Transaction.java:447)",
                "at org.apache.kahadb.page.Transaction$2.<init>(Transaction.java:438)",
                "at org.apache.kahadb.page.Transaction.openInputStream(Transaction.java:435)",
                "at org.apache.kahadb.page.Transaction.load(Transaction.java:411)",
                "at org.apache.kahadb.page.Transaction.load(Transaction.java:368)",
                "at org.apache.kahadb.index.BTreeIndex.loadNode(BTreeIndex.java:262)",
                "at org.apache.kahadb.index.BTreeIndex.getRoot(BTreeIndex.java:174)",
                "at org.apache.kahadb.index.BTreeIndex.remove(BTreeIndex.java:194)",
                "at org.apache.activemq.store.kahadb.MessageDatabase.updateIndex(MessageDatabase.java:1212)",
                "at org.apache.activemq.store.kahadb.MessageDatabase$15.execute(MessageDatabase.java:1028)",
                "at org.apache.kahadb.page.Transaction.execute(Transaction.java:771)",
                "at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:1026)",
                "at org.apache.activemq.store.kahadb.MessageDatabase$13.visit(MessageDatabase.java:961)",
                "at org.apache.activemq.store.kahadb.data.KahaRemoveMessageCommand.visit(KahaRemoveMessageCommand.java:220)",
                "at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:953)",
                "at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:865)",
                "at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.removeMessage(KahaDBStore.java:439)",
                "at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.removeAsyncMessage(KahaDBStore.java:411)",
                "at org.apache.activemq.store.kahadb.KahaDBTransactionStore.removeAsyncMessage(KahaDBTransactionStore.java:468)",
                "at org.apache.activemq.store.kahadb.KahaDBTransactionStore$1.removeAsyncMessage(KahaDBTransactionStore.java:171)",
                "at org.apache.activemq.broker.region.Queue.acknowledge(Queue.java:830)",
                "at org.apache.activemq.broker.region.Queue.removeMessage(Queue.java:1584)",
                "at org.apache.activemq.broker.region.QueueSubscription.acknowledge(QueueSubscription.java:59)",
                "at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:294)",
                "at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:426)",
                "at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:537)",
                "at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:77)",
                "at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:77)",
                "at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:287)",
                "at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:77)",
                "at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:77)",
                "at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:87)",
                "at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:461)",
                "at org.apache.activemq.command.MessageAck.visit(MessageAck.java:236)",
                "at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:292)",
                "at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:150)",
                "at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)",
                "at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)",
                "at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:268)",
                "at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)",
                "at org.apache.activemq.transport.tcp.SslTransport.doConsume(SslTransport.java:91)",
                "at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:215)",
                "at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:197)",
                "at java.lang.Thread.run(Thread.java:679)"
            ],
            "StepsToReproduce": [
                "1. Set up an ActiveMQ broker with KahaDB as the message store.",
                "2. Send a message to a queue.",
                "3. Acknowledge the message from a consumer.",
                "4. Observe the logs for any IOException related to file access."
            ],
            "ExpectedBehavior": "The message should be acknowledged successfully without any IOException, and the index should be updated accordingly.",
            "ObservedBehavior": "An IOException is thrown indicating an input/output error when attempting to read from the RandomAccessFile, preventing the acknowledgment process from completing successfully.",
            "AdditionalDetails": "This issue may be related to file system permissions, disk space, or corruption in the KahaDB storage files. Further investigation into the state of the KahaDB files and the environment may be necessary."
        }
    },
    {
        "filename": "AMQ-5016.json",
        "creation_time": "2014-02-03T16:40:26.000+0000",
        "bug_report": {
            "Title": "Concurrent Modification Exception in ActiveMQ Message Dispatching",
            "Description": "A bug has been identified in the ActiveMQ message dispatching mechanism, specifically related to the handling of duplicate messages. The issue arises when the system attempts to access or modify a linked list while it is concurrently being modified, leading to potential inconsistencies and runtime exceptions.",
            "StackTrace": [
                "java.lang.Thread.State: RUNNABLE",
                "at java.util.LinkedList.linkLast(LinkedList.java:140)",
                "at java.util.LinkedList.add(LinkedList.java:336)",
                "at org.apache.activemq.util.BitArrayBin.getBitArray(BitArrayBin.java:123)",
                "at org.apache.activemq.util.BitArrayBin.setBit(BitArrayBin.java:59)",
                "at org.apache.activemq.ActiveMQMessageAuditNoSync.isDuplicate(ActiveMQMessageAuditNoSync.java:160)",
                "at org.apache.activemq.ActiveMQMessageAudit.isDuplicate(ActiveMQMessageAudit.java:59)",
                "at org.apache.activemq.ActiveMQMessageAuditNoSync.isDuplicate(ActiveMQMessageAuditNoSync.java:140)",
                "at org.apache.activemq.ConnectionAudit.isDuplicate(ConnectionAudit.java:52)",
                "at org.apache.activemq.ActiveMQConnection.isDuplicate(ActiveMQConnection.java:2291)",
                "at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1223)",
                "at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:134)",
                "at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:205)",
                "at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:127)",
                "at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)",
                "at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)",
                "at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)",
                "at java.lang.Thread.run(Thread.java:722)"
            ],
            "StepsToReproduce": [
                "1. Start the ActiveMQ server with multiple consumers.",
                "2. Send a series of messages that may be processed concurrently by different consumers.",
                "3. Monitor the logs for any exceptions related to message dispatching."
            ],
            "ExpectedBehavior": "The system should handle message dispatching without throwing exceptions, ensuring that duplicate messages are correctly identified and processed.",
            "ObservedBehavior": "The system throws a concurrent modification exception when attempting to access or modify the linked list used for tracking message duplicates, leading to potential message loss or incorrect processing.",
            "AdditionalDetails": "The issue seems to stem from the use of a linked list in the BitArrayBin class, which is not thread-safe. The method getBitArray(long index) retrieves a BitArray from the list, and if the list is modified concurrently (e.g., by another thread adding or removing elements), it can lead to inconsistent states."
        }
    },
    {
        "filename": "AMQ-4407.json",
        "creation_time": "2013-03-26T15:41:15.000+0000",
        "bug_report": {
            "Title": "IllegalStateException: PageFile is not loaded in KahaDBStore",
            "Description": "An IllegalStateException is thrown when attempting to access the message count in the KahaDBStore, indicating that the PageFile is not loaded. This issue arises during the initialization of a destination in the ActiveMQ broker, which relies on the KahaDBStore to retrieve message counts.",
            "StackTrace": [
                "java.lang.IllegalStateException: PageFile is not loaded",
                "at org.apache.activemq.store.kahadb.disk.page.PageFile.assertLoaded(PageFile.java:809)",
                "at org.apache.activemq.store.kahadb.disk.page.PageFile.tx(PageFile.java:303)",
                "at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.getMessageCount(KahaDBStore.java:478)",
                "at org.apache.activemq.store.ProxyMessageStore.getMessageCount(ProxyMessageStore.java:101)",
                "at org.apache.activemq.store.ProxyMessageStore.getMessageCount(ProxyMessageStore.java:101)",
                "at org.apache.activemq.broker.region.Queue.initialize(Queue.java:376)",
                "at org.apache.activemq.broker.region.DestinationFactoryImpl.createDestination(DestinationFactoryImpl.java:87)",
                "at org.apache.activemq.broker.region.AbstractRegion.createDestination(AbstractRegion.java:526)",
                "at org.apache.activemq.broker.jmx.ManagedQueueRegion.createDestination(ManagedQueueRegion.java:56)",
                "at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:136)",
                "at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:277)",
                "at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)",
                "at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)",
                "at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:151)",
                "at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:387)",
                "at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:282)",
                "at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)",
                "at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:317)",
                "at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)",
                "at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:499)",
                "at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:749)",
                "at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)",
                "at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)",
                "at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:45)",
                "at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)",
                "at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:84)",
                "at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:195)",
                "at org.apache.activemq.transport.stomp.ProtocolConverter.onStompSend(ProtocolConverter.java:321)",
                "at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:233)",
                "at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:73)",
                "at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)",
                "at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)",
                "at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)",
                "at java.lang.Thread.run(Thread.java:680)"
            ],
            "StepsToReproduce": [
                "1. Start the ActiveMQ broker with KahaDB as the message store.",
                "2. Attempt to send a message to a queue that has not been properly initialized.",
                "3. Observe the logs for the IllegalStateException indicating that the PageFile is not loaded."
            ],
            "ExpectedBehavior": "The message count should be retrieved successfully without any exceptions, indicating that the PageFile is loaded and the destination is properly initialized.",
            "ObservedBehavior": "An IllegalStateException is thrown, indicating that the PageFile is not loaded when attempting to retrieve the message count.",
            "AdditionalDetails": "The issue likely occurs because the KahaDBStore's initialization process does not complete successfully, leading to the PageFile not being loaded before the getMessageCount method is called."
        }
    },
    {
        "filename": "AMQ-4221.json",
        "creation_time": "2012-12-13T16:15:04.000+0000",
        "bug_report": {
            "Title": "NullPointerException in ListNode during message removal",
            "Description": "A NullPointerException occurs in the ListNode class when attempting to remove a message from the queue. The exception is triggered during the execution of the remove method in the ListNode class, specifically when trying to access a property of a null object.",
            "StackTrace": [
                "java.lang.NullPointerException",
                "at org.apache.kahadb.index.ListNode.access$200(ListNode.java:37)",
                "at org.apache.kahadb.index.ListNode$NodeMarshaller.writePayload(ListNode.java:265)",
                "at org.apache.kahadb.index.ListNode$NodeMarshaller.writePayload(ListNode.java:255)",
                "at org.apache.kahadb.page.Transaction.store(Transaction.java:248)",
                "at org.apache.kahadb.index.ListIndex.storeNode(ListIndex.java:326)",
                "at org.apache.kahadb.index.ListNode.store(ListNode.java:332)",
                "at org.apache.kahadb.index.ListNode.access$500(ListNode.java:37)",
                "at org.apache.kahadb.index.ListNode$ListIterator.remove(ListNode.java:227)",
                "at org.apache.activemq.store.kahadb.plist.PList$PListIterator$1.execute(PList.java:229)",
                "at org.apache.kahadb.page.Transaction.execute(Transaction.java:771)",
                "at org.apache.activemq.store.kahadb.plist.PList$PListIterator.remove(PList.java:226)",
                "at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor$DiskIterator.remove(FilePendingMessageCursor.java:517)",
                "at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.remove(FilePendingMessageCursor.java:321)",
                "at org.apache.activemq.broker.region.Queue.doPageInForDispatch(Queue.java:1735)",
                "at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1948)",
                "at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1465)",
                "at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)",
                "at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)",
                "at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)",
                "at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)",
                "at java.lang.Thread.run(Thread.java:680)"
            ],
            "StepsToReproduce": [
                "1. Attempt to remove a message from the queue using the remove() method.",
                "2. Ensure that the message being removed is not properly initialized or is null.",
                "3. Observe the NullPointerException being thrown."
            ],
            "ExpectedBehavior": "The message should be removed from the queue without throwing an exception, even if the message is null or improperly initialized.",
            "ObservedBehavior": "A NullPointerException is thrown when attempting to remove a message from the queue, indicating that a null reference is being accessed.",
            "AdditionalDetails": "The issue seems to stem from the ListNode class where the access to a property of a null object occurs. The method 'remove(MessageReference node)' should handle cases where the node is null to prevent this exception."
        }
    },
    {
        "filename": "AMQ-3622.json",
        "creation_time": "2011-12-06T15:16:49.000+0000",
        "bug_report": {
            "Title": "NullPointerException in LastImageSubscriptionRecoveryPolicy.browse()",
            "Description": "A NullPointerException is thrown when attempting to browse messages in the LastImageSubscriptionRecoveryPolicy class. This occurs when the method tries to access a method or property of a null object reference.",
            "StackTrace": [
                "java.lang.NullPointerException",
                "at org.apache.activemq.broker.region.policy.LastImageSubscriptionRecoveryPolicy.browse(LastImageSubscriptionRecoveryPolicy.java:63)",
                "at org.apache.activemq.broker.region.Topic.browse(Topic.java:564)",
                "at org.apache.activemq.broker.region.Topic$6.run(Topic.java:659)",
                "at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)",
                "at java.util.TimerThread.mainLoop(Timer.java:512)",
                "at java.util.TimerThread.run(Timer.java:462)"
            ],
            "StepsToReproduce": [
                "1. Start the ActiveMQ broker.",
                "2. Attempt to browse messages in a topic that has not been properly initialized or has no messages.",
                "3. Observe the NullPointerException in the logs."
            ],
            "ExpectedBehavior": "The system should handle the case where there are no messages or the topic is not initialized without throwing a NullPointerException.",
            "ObservedBehavior": "A NullPointerException is thrown, causing the browsing operation to fail.",
            "AdditionalDetails": "The issue likely arises from the 'subscriptionRecoveryPolicy' being null when the 'browse' method is called in the LastImageSubscriptionRecoveryPolicy class. This can be confirmed by checking the initialization of the subscriptionRecoveryPolicy before it is used."
        }
    },
    {
        "filename": "AMQ-6016.json",
        "creation_time": "2015-10-21T12:55:55.000+0000",
        "bug_report": {
            "Title": "IllegalArgumentException in Queue Consumer List Sorting",
            "Description": "An IllegalArgumentException is thrown when attempting to sort the consumer list in the Queue class. This occurs due to a violation of the comparison method's contract, likely caused by the comparator used in the Collections.sort method.",
            "StackTrace": [
                "java.lang.IllegalArgumentException: Comparison method violates its general contract!",
                "at java.util.TimSort.mergeHi(TimSort.java:868)[:1.7.0_65]",
                "at java.util.TimSort.mergeAt(TimSort.java:485)[:1.7.0_65]",
                "at java.util.TimSort.mergeCollapse(TimSort.java:410)[:1.7.0_65]",
                "at java.util.TimSort.sort(TimSort.java:214)[:1.7.0_65]",
                "at java.util.TimSort.sort(TimSort.java:173)[:1.7.0_65]",
                "at java.util.Arrays.sort(Arrays.java:659)[:1.7.0_65]",
                "at java.util.Collections.sort(Collections.java:217)[:1.7.0_65]",
                "at org.apache.activemq.broker.region.Queue.addToConsumerList(Queue.java:2131)[121:org.apache.activemq.activemq-osgi:5.9.0]",
                "at org.apache.activemq.broker.region.Queue.doActualDispatch(Queue.java:2067)[121:org.apache.activemq.activemq-osgi:5.9.0]",
                "at org.apache.activemq.broker.region.Queue.doDispatch(Queue.java:1972)[121:org.apache.activemq.activemq-osgi:5.9.0]",
                "at org.apache.activemq.broker.region.Queue.removeSubscription(Queue.java:587)[121:org.apache.activemq.activemq-osgi:5.9.0]",
                "at ....",
                "at java.lang.Thread.run(Thread.java:745)"
            ],
            "StepsToReproduce": [
                "1. Create a Queue instance and add multiple subscriptions with varying priorities.",
                "2. Call the removeSubscription method on the Queue instance.",
                "3. Observe the IllegalArgumentException thrown during the sorting of the consumer list."
            ],
            "ExpectedBehavior": "The consumer list should be sorted without throwing an exception, allowing for proper dispatching of messages to consumers.",
            "ObservedBehavior": "An IllegalArgumentException is thrown indicating that the comparison method violates its general contract, preventing the sorting of the consumer list.",
            "AdditionalDetails": "The issue likely stems from the comparator used in the Collections.sort method within the addToConsumerList method. It is essential to ensure that the comparator is consistent with the equals method to avoid violating the sorting contract."
        }
    },
    {
        "filename": "AMQ-3490.json",
        "creation_time": "2011-09-08T20:31:57.000+0000",
        "bug_report": {
            "Title": "NullPointerException in PListStore Initialization",
            "Description": "A NullPointerException occurs during the initialization of the PListStore when attempting to store metadata. This issue arises from a failure to properly initialize the directory or related components before invoking methods that depend on them.",
            "StackTrace": [
                "java.lang.NullPointerException",
                "    at java.io.Writer.write(Writer.java:140)",
                "    at java.io.BufferedWriter.newLine(BufferedWriter.java:225)",
                "    at java.util.Properties.writeComments(Properties.java:671)",
                "    at java.util.Properties.store0(Properties.java:805)",
                "    at java.util.Properties.store(Properties.java:796)",
                "    at org.apache.kahadb.page.PageFile.storeMetaData(PageFile.java:570)",
                "    at org.apache.kahadb.page.PageFile.load(PageFile.java:361)",
                "    at org.apache.activemq.store.kahadb.plist.PListStore.intialize(PListStore.java:285)",
                "    at org.apache.activemq.store.kahadb.plist.PListStore.getPList(PListStore.java:218)",
                "    at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.getDiskList(FilePendingMessageCursor.java:457)",
                "    at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.flushToDisk(FilePendingMessageCursor.java:435)",
                "    at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.onUsageChanged(FilePendingMessageCursor.java:388)",
                "    at org.apache.activemq.usage.Usage$1.run(Usage.java:268)",
                "    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)",
                "    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)",
                "    at java.lang.Thread.run(Thread.java:619)"
            ],
            "StepsToReproduce": [
                "Start the application that initializes the PListStore.",
                "Ensure that the directory for the PListStore is not set or is set to null.",
                "Trigger the initialization process that leads to the call of getPList."
            ],
            "ExpectedBehavior": "The PListStore should initialize correctly without throwing a NullPointerException, and the metadata should be stored successfully.",
            "ObservedBehavior": "A NullPointerException is thrown during the initialization of the PListStore, preventing the application from starting correctly.",
            "AdditionalDetails": "The issue likely stems from the 'intialize()' method in the PListStore class, where the directory is expected to be initialized before it is used. If the directory is null, subsequent calls to methods that rely on it will fail."
        }
    },
    {
        "filename": "AMQ-6831.json",
        "creation_time": "2017-10-09T10:35:53.000+0000",
        "bug_report": {
            "Title": "IOException due to Missing/Corrupt Journal Files in ActiveMQ",
            "Description": "The application encounters an IOException indicating that there are missing or corrupt journal files when attempting to recover the message database. This issue arises during the recovery process of the KahaDB persistence adapter in ActiveMQ, specifically when the system tries to access journal files that are not present or are corrupted.",
            "StackTrace": [
                "java.lang.Error: java.io.IOException: Detected missing/corrupt journal files referenced by:[0:ActiveMQ.DLQ] 3 messages affected.",
                "at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1148) ~[na:1.8.0_131]",
                "at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) ~[na:1.8.0_131]",
                "at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_131]",
                "Caused by: java.io.IOException: Detected missing/corrupt journal files referenced by:[0:ActiveMQ.DLQ] 3 messages affected.",
                "at org.apache.activemq.store.kahadb.MessageDatabase.recoverIndex(MessageDatabase.java:965) ~[activemq-kahadb-store-5.15.1.jar:5.15.1]",
                "at org.apache.activemq.store.kahadb.MessageDatabase$5.execute(MessageDatabase.java:717) ~[activemq-kahadb-store-5.15.1.jar:5.15.1]",
                "at org.apache.activemq.store.kahadb.disk.page.Transaction.execute(Transaction.java:779) ~[activemq-kahadb-store-5.15.1.jar:5.15.1]",
                "at org.apache.activemq.store.kahadb.MessageDatabase.recover(MessageDatabase.java:714) ~[activemq-kahadb-store-5.15.1.jar:5.15.1]",
                "at org.apache.activemq.store.kahadb.MessageDatabase.open(MessageDatabase.java:473) ~[activemq-kahadb-store-5.15.1.jar:5.15.1]",
                "at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:493) ~[activemq-kahadb-store-5.15.1.jar:5.15.1]",
                "at org.apache.activemq.store.kahadb.MessageDatabase.doStart(MessageDatabase.java:297) ~[activemq-kahadb-store-5.15.1.jar:5.15.1]",
                "at org.apache.activemq.store.kahadb.KahaDBStore.doStart(KahaDBStore.java:219) ~[activemq-kahadb-store-5.15.1.jar:5.15.1]",
                "at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55) ~[activemq-client-5.15.1.jar:5.15.1]"
            ],
            "StepsToReproduce": [
                "Start the ActiveMQ broker with a KahaDB persistence adapter.",
                "Ensure that some journal files are deleted or corrupted.",
                "Attempt to start the broker and observe the logs for errors related to missing or corrupt journal files."
            ],
            "ExpectedBehavior": "The ActiveMQ broker should start successfully and recover from the journal without errors, even if some messages are missing or corrupt.",
            "ObservedBehavior": "The ActiveMQ broker fails to start and throws an IOException indicating that there are missing or corrupt journal files, preventing recovery of the message database.",
            "AdditionalDetails": "The issue is likely related to the recovery process in the `recoverIndex` method of the `MessageDatabase` class, which checks for the existence of journal files and throws an IOException if any are missing or corrupt. The log message indicates that 3 messages are affected, which suggests that the system is unable to recover these messages due to the missing files."
        }
    },
    {
        "filename": "AMQ-5525.json",
        "creation_time": "2015-01-19T13:47:50.000+0000",
        "bug_report": {
            "Title": "Conversion Error in ActiveMQ Command Execution",
            "Description": "An exception occurs when attempting to convert command line arguments into a collection of strings in the ActiveMQ command execution context. The error indicates that the conversion from the provided arguments to an ArrayList<String> fails due to an issue with the collection entry.",
            "StackTrace": [
                "java.lang.Exception: Unable to convert from [--amqurl, tcp://localhost:61616, --user, karaf, --password, karaf, -Vbody, 1421674680492] to java.util.ArrayList<java.lang.String>(error converting collection entry)",
                "at org.apache.aries.blueprint.container.AggregateConverter.convertToCollection(AggregateConverter.java:342)",
                "at org.apache.aries.blueprint.container.AggregateConverter.convert(AggregateConverter.java:182)",
                "at org.apache.activemq.karaf.commands.ActiveMQCommand$ActiveMQActionPreparator.convert(ActiveMQCommand.java:143)",
                "at org.apache.activemq.karaf.commands.ActiveMQCommand$ActiveMQActionPreparator.prepare(ActiveMQCommand.java:134)",
                "at org.apache.felix.gogo.commands.basic.AbstractCommand.execute(AbstractCommand.java:34)",
                "at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                "at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)",
                "at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                "at java.lang.reflect.Method.invoke(Method.java:606)",
                "at org.apache.aries.proxy.impl.ProxyHandler$1.invoke(ProxyHandler.java:54)",
                "at org.apache.aries.proxy.impl.ProxyHandler.invoke(ProxyHandler.java:119)",
                "at org.apache.activemq.karaf.commands.$ActiveMQCommand695030723.execute(Unknown Source)",
                "at org.apache.felix.gogo.runtime.CommandProxy.execute(CommandProxy.java:78)",
                "at org.apache.felix.gogo.runtime.Closure.executeCmd(Closure.java:477)",
                "at org.apache.felix.gogo.runtime.Closure.executeStatement(Closure.java:403)",
                "at org.apache.felix.gogo.runtime.Pipe.run(Pipe.java:108)",
                "at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:183)",
                "at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:120)",
                "at org.apache.felix.gogo.runtime.CommandSessionImpl.execute(CommandSessionImpl.java:92)",
                "at org.apache.activemq.karaf.itest.AbstractFeatureTest$1$1.run(AbstractFeatureTest.java:125)",
                "at org.apache.activemq.karaf.itest.AbstractFeatureTest$1$1.run(AbstractFeatureTest.java:117)",
                "at java.security.AccessController.doPrivileged(Native Method)",
                "at javax.security.auth.Subject.doAs(Subject.java:356)",
                "at org.apache.activemq.karaf.itest.AbstractFeatureTest$1.call(AbstractFeatureTest.java:117)",
                "at org.apache.activemq.karaf.itest.AbstractFeatureTest$1.call(AbstractFeatureTest.java:109)",
                "at java.util.concurrent.FutureTask.run(FutureTask.java:262)",
                "at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)",
                "at java.util.concurrent.FutureTask.run(FutureTask.java:262)",
                "at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)",
                "at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)",
                "at java.lang.Thread.run(Thread.java:745)"
            ],
            "StepsToReproduce": [
                "Execute the ActiveMQ command with the following parameters: --amqurl tcp://localhost:61616 --user karaf --password karaf -Vbody 1421674680492",
                "Observe the exception thrown during the command execution."
            ],
            "ExpectedBehavior": "The command should successfully convert the provided parameters into a collection of strings and execute without errors.",
            "ObservedBehavior": "An exception is thrown indicating an inability to convert the provided command line arguments into an ArrayList<String> due to an error in converting a collection entry.",
            "AdditionalDetails": "The issue seems to stem from the conversion logic in the AggregateConverter class, specifically in the convertToCollection method. Further investigation into the types of the parameters being passed and their compatibility with the expected collection type is needed."
        }
    },
    {
        "filename": "AMQ-4118.json",
        "creation_time": "2012-10-19T22:14:13.000+0000",
        "bug_report": {
            "Title": "EOFException and ClassCastException in KahaDB Transaction Processing",
            "Description": "The application encounters an EOFException indicating that a chunk stream does not exist, followed by a ClassCastException when attempting to cast a Long to a String during index updates in KahaDB. This issue arises during message acknowledgment and transaction processing, leading to potential data integrity problems.",
            "StackTrace": [
                "java.io.EOFException: Chunk stream does not exist, page: 1344 is marked free",
                "at org.apache.kahadb.page.Transaction$2.readPage(Transaction.java:481)",
                "at org.apache.kahadb.page.Transaction$2.<init>(Transaction.java:458)",
                "at org.apache.kahadb.page.Transaction.openInputStream(Transaction.java:455)",
                "at org.apache.kahadb.page.Transaction.load(Transaction.java:431)",
                "at org.apache.kahadb.page.Transaction.load(Transaction.java:388)",
                "at org.apache.kahadb.index.BTreeIndex.loadNode(BTreeIndex.java:262)",
                "at org.apache.kahadb.index.BTreeNode.getChild(BTreeNode.java:225)",
                "at org.apache.kahadb.index.BTreeNode.getLeafNode(BTreeNode.java:680)",
                "at org.apache.kahadb.index.BTreeNode.get(BTreeNode.java:562)",
                "at org.apache.kahadb.index.BTreeIndex.get(BTreeIndex.java:184)",
                "at org.apache.activemq.store.kahadb.MessageDatabase$MessageOrderIndex.get(MessageDatabase.java:2616)",
                "at org.apache.activemq.store.kahadb.MessageDatabase.updateIndex(MessageDatabase.java:1210)",
                "at org.apache.activemq.store.kahadb.MessageDatabase$15.execute(MessageDatabase.java:1002)",
                "at org.apache.kahadb.page.Transaction.execute(Transaction.java:790)",
                "at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:1000)",
                "at org.apache.activemq.store.kahadb.MessageDatabase$13.visit(MessageDatabase.java:933)",
                "at org.apache.activemq.store.kahadb.data.KahaRemoveMessageCommand.visit(KahaRemoveMessageCommand.java:220)",
                "at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:925)",
                "at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:837)",
                "at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBTopicMessageStore.doAcknowledge(KahaDBStore.java:723)",
                "at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBTopicMessageStore.acknowledge(KahaDBStore.java:706)",
                "at org.apache.activemq.store.kahadb.KahaDBTransactionStore.acknowledge(KahaDBTransactionStore.java:519)",
                "at org.apache.activemq.store.kahadb.KahaDBTransactionStore$2.acknowledge(KahaDBTransactionStore.java:222)",
                "at org.apache.activemq.broker.region.Topic.acknowledge(Topic.java:528)",
                "at org.apache.activemq.broker.region.DurableTopicSubscription.acknowledge(DurableTopicSubscription.java:279)",
                "java.lang.ClassCastException: java.lang.Long cannot be cast to java.lang.String",
                "at java.lang.String.compareTo(String.java:92)",
                "at java.util.Arrays.binarySearch0(Arrays.java:2001)",
                "at java.util.Arrays.binarySearch(Arrays.java:1943)",
                "at org.apache.kahadb.index.BTreeNode.put(BTreeNode.java:371)",
                "at org.apache.kahadb.index.BTreeNode.put(BTreeNode.java:369)",
                "at org.apache.kahadb.index.BTreeIndex.put(BTreeIndex.java:189)",
                "at org.apache.activemq.store.kahadb.MessageDatabase$MessageOrderIndex.put(MessageDatabase.java:2592)",
                "at org.apache.activemq.store.kahadb.MessageDatabase.upadateIndex(MessageDatabase.java:1168)",
                "at org.apache.activemq.store.kahadb.MessageDatabase$AddOpperation.execute(MessageDatabase.java:2082)",
                "at org.apache.activemq.store.kahadb.MessageDatabase$18.execute(MessageDatabase.java:1095)",
                "at org.apache.kahadb.page.Transaction.execute(Transaction.java:768)",
                "at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:1092)",
                "at org.apache.activemq.store.kahadb.MessageDatabase$13.visit(MessageDatabase.java:961)",
                "at org.apache.activemq.store.kahadb.data.KahaCommitCommand.visit(KahaCommitCommand.java:130)",
                "at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:943)",
                "at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:855)",
                "at org.apache.activemq.store.kahadb.KahaDBTransactionStore.commit(KahaDBTransactionStore.java:267)",
                "java.lang.NullPointerException",
                "at org.apache.kahadb.index.BTreeIndex.loadNode(BTreeIndex.java:264)",
                "at org.apache.kahadb.index.BTreeNode.getChild(BTreeNode.java:225)",
                "at org.apache.kahadb.index.BTreeNode.getLeafNode(BTreeNode.java:676)",
                "at org.apache.kahadb.index.BTreeNode.put(BTreeNode.java:369)",
                "at org.apache.kahadb.index.BTreeIndex.put(BTreeIndex.java:189)",
                "at org.apache.activemq.store.kahadb.MessageDatabase$MessageOrderIndex.put(MessageDatabase.java:2592)",
                "at org.apache.activemq.store.kahadb.MessageDatabase.upadateIndex(MessageDatabase.java:1168)",
                "at org.apache.activemq.store.kahadb.MessageDatabase$AddOpperation.execute(MessageDatabase.java:2082)",
                "at org.apache.activemq.store.kahadb.MessageDatabase$18.execute(MessageDatabase.java:1095)",
                "at org.apache.kahadb.page.Transaction.execute(Transaction.java:768)",
                "at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:1092)",
                "at org.apache.activemq.store.kahadb.MessageDatabase$13.visit(MessageDatabase.java:961)",
                "at org.apache.activemq.store.kahadb.data.KahaCommitCommand.visit(KahaCommitCommand.java:130)",
                "at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:943)",
                "at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:855)",
                "at org.apache.activemq.store.kahadb.KahaDBTransactionStore.commit(KahaDBTransactionStore.java:267)"
            ],
            "StepsToReproduce": [
                "1. Attempt to acknowledge a message in a KahaDB-backed ActiveMQ broker.",
                "2. Ensure that the message acknowledgment involves a transaction that may reference a free page.",
                "3. Observe the logs for exceptions thrown during the acknowledgment process."
            ],
            "ExpectedBehavior": "The message acknowledgment should complete successfully without throwing exceptions, and the transaction should be processed correctly.",
            "ObservedBehavior": "The application throws an EOFException followed by a ClassCastException, indicating issues with the transaction processing and data integrity.",
            "AdditionalDetails": "The issue may stem from improper handling of transaction states or corrupted data in the KahaDB store. Further investigation into the transaction lifecycle and data integrity checks is recommended."
        }
    },
    {
        "filename": "AMQ-4092.json",
        "creation_time": "2012-10-04T02:56:44.000+0000",
        "bug_report": {
            "Title": "ConcurrentModificationException during Message Processing in ActiveMQ",
            "Description": "A ConcurrentModificationException is thrown when attempting to send a message in ActiveMQ. This occurs during the processing of messages, specifically when the message is being marshalled for transmission. The issue arises from concurrent modifications to a HashMap while iterating over its entries.",
            "StackTrace": [
                "java.util.concurrent.ExecutionException: java.util.ConcurrentModificationException",
                "at java.util.concurrent.FutureTask$Sync.innerGet(FutureTask.java:222)",
                "at java.util.concurrent.FutureTask.get(FutureTask.java:83)",
                "at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:785)",
                "at org.apache.activemq.broker.region.Queue.send(Queue.java:707)",
                "at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:407)",
                "at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:503)",
                "at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:305)",
                "at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)",
                "at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)",
                "at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:306)",
                "at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)",
                "at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:453)",
                "at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:681)",
                "at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:292)",
                "at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:150)",
                "at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)",
                "at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)",
                "at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:231)",
                "at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)",
                "at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)",
                "at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)",
                "at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)",
                "at java.lang.Thread.run(Thread.java:680)",
                "Caused by: java.util.ConcurrentModificationException",
                "at java.util.HashMap$HashIterator.nextEntry(HashMap.java:793)",
                "at java.util.HashMap$KeyIterator.next(HashMap.java:828)",
                "at org.apache.activemq.util.MarshallingSupport.marshalPrimitiveMap(MarshallingSupport.java:64)",
                "at org.apache.activemq.command.Message.beforeMarshall(Message.java:210)",
                "at org.apache.activemq.command.ActiveMQObjectMessage.beforeMarshall(ActiveMQObjectMessage.java:199)",
                "at org.apache.activemq.openwire.v6.MessageMarshaller.looseMarshal(MessageMarshaller.java:277)",
                "at org.apache.activemq.openwire.v6.ActiveMQMessageMarshaller.looseMarshal(ActiveMQMessageMarshaller.java:111)",
                "at org.apache.activemq.openwire.v6.ActiveMQObjectMessageMarshaller.looseMarshal(ActiveMQObjectMessageMarshaller.java:111)",
                "at org.apache.activemq.openwire.OpenWireFormat.marshal(OpenWireFormat.java:168)",
                "at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.addMessage(KahaDBStore.java:429)",
                "at org.apache.activemq.store.kahadb.KahaDBStore$StoreQueueTask.run(KahaDBStore.java:1177)"
            ],
            "StepsToReproduce": [
                "1. Set up an ActiveMQ broker and create a producer that sends messages to a queue.",
                "2. Ensure that multiple threads are sending messages concurrently to the same queue.",
                "3. Monitor the logs for any ConcurrentModificationException during message processing."
            ],
            "ExpectedBehavior": "Messages should be sent and processed without any exceptions, ensuring that the message queue operates smoothly even under concurrent load.",
            "ObservedBehavior": "A ConcurrentModificationException is thrown, causing message processing to fail intermittently, which may lead to message loss or delays in processing.",
            "AdditionalDetails": "The issue seems to stem from the use of a HashMap in the marshalling process, which is not properly synchronized for concurrent access. This can be addressed by using a ConcurrentHashMap or implementing proper synchronization mechanisms when accessing shared resources."
        }
    },
    {
        "filename": "AMQ-3887.json",
        "creation_time": "2012-06-18T16:02:55.000+0000",
        "bug_report": {
            "Title": "NullPointerException in DemandForwardingBridgeSupport.configureMessage",
            "Description": "A NullPointerException is thrown in the configureMessage method of the DemandForwardingBridgeSupport class when processing a message dispatch. This occurs when the message associated with the MessageDispatch object is null, leading to an attempt to call methods on a null reference.",
            "StackTrace": [
                "java.lang.NullPointerException: null",
                "at org.apache.activemq.network.DemandForwardingBridgeSupport.configureMessage(DemandForwardingBridgeSupport.java:644) ~[activemq-core-5.6.0.jar:5.6.0]",
                "at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceLocalCommand(DemandForwardingBridgeSupport.java:675) ~[activemq-core-5.6.0.jar:5.6.0]",
                "at org.apache.activemq.network.DemandForwardingBridgeSupport$1.onCommand(DemandForwardingBridgeSupport.java:139) [activemq-core-5.6.0.jar:5.6.0]",
                "at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116) [activemq-core-5.6.0.jar:5.6.0]",
                "at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50) [activemq-core-5.6.0.jar:5.6.0]",
                "at org.apache.activemq.transport.vm.VMTransport.doDispatch(VMTransport.java:135) [activemq-core-5.6.0.jar:5.6.0]",
                "at org.apache.activemq.transport.vm.VMTransport.dispatch(VMTransport.java:124) [activemq-core-5.6.0.jar:5.6.0]",
                "at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:103) [activemq-core-5.6.0.jar:5.6.0]",
                "at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68) [activemq-core-5.6.0.jar:5.6.0]",
                "at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60) [activemq-core-5.6.0.jar:5.6.0]",
                "at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1307) [activemq-core-5.6.0.jar:5.6.0]",
                "at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:837) [activemq-core-5.6.0.jar:5.6.0]",
                "at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:872) [activemq-core-5.6.0.jar:5.6.0]",
                "at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122) [activemq-core-5.6.0.jar:5.6.0]",
                "at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)"
            ],
            "StepsToReproduce": [
                "1. Send a MessageDispatch command with a null message to the DemandForwardingBridgeSupport instance.",
                "2. Ensure that the serviceLocalCommand method is invoked with the MessageDispatch command.",
                "3. Observe the NullPointerException being thrown in the configureMessage method."
            ],
            "ExpectedBehavior": "The configureMessage method should handle null messages gracefully, either by returning a default message or by logging an error without throwing an exception.",
            "ObservedBehavior": "A NullPointerException is thrown when the configureMessage method attempts to access methods on a null message object, causing the application to crash.",
            "AdditionalDetails": "The issue arises specifically in the configureMessage method where it attempts to call md.getMessage().copy() without checking if md.getMessage() is null. This can be mitigated by adding a null check before accessing the message."
        }
    },
    {
        "filename": "AMQ-6451.json",
        "creation_time": "2016-10-03T17:09:00.000+0000",
        "bug_report": {
            "Title": "OutOfMemoryError in ActiveMQ KahaDB Journal Preallocation",
            "Description": "The application encounters an OutOfMemoryError due to excessive direct buffer memory allocation when attempting to preallocate journal files in the KahaDB storage mechanism of ActiveMQ. This issue arises during the process of writing data to the journal, particularly when the system is under heavy load or when the maximum file length is set too high.",
            "StackTrace": [
                "java.lang.OutOfMemoryError: Direct buffer memory",
                "at java.nio.Bits.reserveMemory(Bits.java:693)[:1.8.0_101]",
                "at java.nio.DirectByteBuffer.<init>(DirectByteBuffer.java:123)[:1.8.0_101]",
                "at java.nio.ByteBuffer.allocateDirect(ByteBuffer.java:311)[:1.8.0_101]",
                "at sun.nio.ch.Util.getTemporaryDirectBuffer(Util.java:174)[:1.8.0_101]",
                "at sun.nio.ch.IOUtil.write(IOUtil.java:58)[:1.8.0_101]",
                "at sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:211)[:1.8.0_101]",
                "at org.apache.activemq.store.kahadb.disk.journal.Journal.doPreallocationZeros(Journal.java:366)[activemq-kahadb-store-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.store.kahadb.disk.journal.Journal.preallocateEntireJournalDataFile(Journal.java:333)[activemq-kahadb-store-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.store.kahadb.disk.journal.Journal.newDataFile(Journal.java:631)[activemq-kahadb-store-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.store.kahadb.disk.journal.Journal.rotateWriteFile(Journal.java:595)[activemq-kahadb-store-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.store.kahadb.disk.journal.Journal.getCurrentDataFile(Journal.java:984)[activemq-kahadb-store-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.store.kahadb.disk.journal.DataFileAppender.enqueue(DataFileAppender.java:189)[activemq-kahadb-store-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.store.kahadb.disk.journal.DataFileAppender.storeItem(DataFileAppender.java:128)[activemq-kahadb-store-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.store.kahadb.disk.journal.Journal.write(Journal.java:890)[activemq-kahadb-store-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:1108)[activemq-kahadb-store-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:1090)[activemq-kahadb-store-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.store.kahadb.KahaDBTransactionStore.commit(KahaDBTransactionStore.java:301)[activemq-kahadb-store-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:70)[activemq-broker-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:252)[activemq-broker-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.broker.BrokerFilter.commitTransaction(BrokerFilter.java:113)[activemq-broker-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.broker.BrokerFilter.commitTransaction(BrokerFilter.java:113)[activemq-broker-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:118)[activemq-broker-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:535)[activemq-broker-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)[activemq-client-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:333)[activemq-broker-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:197)[activemq-broker-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)[activemq-client-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:125)[activemq-client-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:300)[activemq-client-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)[activemq-client-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.transport.tcp.SslTransport.doConsume(SslTransport.java:108)[activemq-client-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:233)[activemq-client-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:215)[activemq-client-5.14.0.jar:5.14.0]",
                "at java.lang.Thread.run(Thread.java:745)"
            ],
            "StepsToReproduce": [
                "Configure ActiveMQ with a high maxFileLength for KahaDB.",
                "Start the ActiveMQ broker and send a large volume of messages to the broker.",
                "Monitor the memory usage of the application until it reaches the limit."
            ],
            "ExpectedBehavior": "The application should handle journal file preallocation without running out of direct buffer memory, allowing for smooth operation even under heavy load.",
            "ObservedBehavior": "The application throws an OutOfMemoryError, causing the broker to fail and potentially lose messages.",
            "AdditionalDetails": "The issue is likely related to the allocation of direct byte buffers in the doPreallocationZeros method, which is called during the preallocation of journal files. The maxFileLength setting may need to be adjusted based on the available memory and expected load."
        }
    },
    {
        "filename": "AMQ-3393.json",
        "creation_time": "2011-07-05T14:31:31.000+0000",
        "bug_report": {
            "Title": "InstanceAlreadyExistsException when registering MBean for ActiveMQ Connection",
            "Description": "An InstanceAlreadyExistsException is thrown when attempting to register an MBean for an ActiveMQ connection. This indicates that an MBean with the same ObjectName already exists in the MBean server, which prevents the registration of a new MBean.",
            "StackTrace": [
                "javax.management.InstanceAlreadyExistsException: org.apache.activemq:BrokerName=xx,Type=Connection,ConnectorName=stomp,ViewType=address,Name=/xx_52170",
                "at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:453)",
                "at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.internal_addObject(DefaultMBeanServerInterceptor.java:1484)",
                "at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:963)",
                "at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:917)",
                "at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:312)",
                "at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:482)",
                "at org.apache.activemq.broker.jmx.ManagementContext.registerMBean(ManagementContext.java:299)",
                "at org.apache.activemq.broker.jmx.AnnotatedMBean.registerMBean(AnnotatedMBean.java:65)",
                "at org.apache.activemq.broker.jmx.ManagedTransportConnection.registerMBean(ManagedTransportConnection.java:99)",
                "at org.apache.activemq.broker.jmx.ManagedTransportConnection.<init>(ManagedTransportConnection.java:57)",
                "at org.apache.activemq.broker.jmx.ManagedTransportConnector.createConnection(ManagedTransportConnector.java:52)",
                "at org.apache.activemq.broker.TransportConnector$1$1.run(TransportConnector.java:216)"
            ],
            "StepsToReproduce": [
                "1. Start the ActiveMQ broker with a configuration that includes a STOMP connector.",
                "2. Attempt to create a new connection to the broker using the same connector name and address as an existing connection.",
                "3. Observe the logs for the InstanceAlreadyExistsException."
            ],
            "ExpectedBehavior": "The MBean for the new connection should be registered successfully without any exceptions.",
            "ObservedBehavior": "An InstanceAlreadyExistsException is thrown, indicating that an MBean with the same ObjectName already exists.",
            "AdditionalDetails": "This issue may occur if multiple connections are attempted to be registered with the same ObjectName. It is advisable to ensure unique ObjectNames for each connection or handle the exception gracefully."
        }
    },
    {
        "filename": "AMQ-5815.json",
        "creation_time": "2015-06-01T12:21:13.000+0000",
        "bug_report": {
            "Title": "IOException during write operation in ActiveMQ KahaDB",
            "Description": "An IOException is thrown when attempting to write data to the KahaDB storage. The error occurs during the execution of the writeLong method in the RecoverableRandomAccessFile class, indicating an input/output error.",
            "StackTrace": [
                "java.io.IOException: Input/output error",
                "    at java.io.RandomAccessFile.write(Native Method)[:1.6.0_30]",
                "    at java.io.RandomAccessFile.writeLong(RandomAccessFile.java:1001)[:1.6.0_30]",
                "    at org.apache.activemq.util.RecoverableRandomAccessFile.writeLong(RecoverableRandomAccessFile.java:305)[activemq-kahadb-store-5.10.0.jar:5.10.0]",
                "    at org.apache.activemq.store.kahadb.disk.page.PageFile.writeBatch(PageFile.java:1062)[activemq-kahadb-store-5.10.0.jar:5.10.0]",
                "    at org.apache.activemq.store.kahadb.disk.page.PageFile.flush(PageFile.java:516)[activemq-kahadb-store-5.10.0.jar:5.10.0]",
                "    at org.apache.activemq.store.kahadb.MessageDatabase.checkpointUpdate(MessageDatabase.java:1512)[activemq-kahadb-store-5.10.0.jar:5.10.0]",
                "    at org.apache.activemq.store.kahadb.MessageDatabase$17.execute(MessageDatabase.java:1484)[activemq-kahadb-store-5.10.0.jar:5.10.0]",
                "    at org.apache.activemq.store.kahadb.disk.page.Transaction.execute(Transaction.java:779)[activemq-kahadb-store-5.10.0.jar:5.10.0]",
                "    at org.apache.activemq.store.kahadb.MessageDatabase.checkpointUpdate(MessageDatabase.java:1481)[activemq-kahadb-store-5.10.0.jar:5.10.0]",
                "    at org.apache.activemq.store.kahadb.MessageDatabase.checkpointCleanup(MessageDatabase.java:929)[activemq-kahadb-store-5.10.0.jar:5.10.0]",
                "    at org.apache.activemq.store.kahadb.MessageDatabase$3.run(MessageDatabase.java:357)[activemq-kahadb-store-5.10.0.jar:5.10.0]"
            ],
            "StepsToReproduce": [
                "1. Initialize the KahaDB storage in ActiveMQ.",
                "2. Attempt to write a batch of messages to the database.",
                "3. Observe the IOException being thrown during the write operation."
            ],
            "ExpectedBehavior": "The write operation should complete successfully without throwing an IOException.",
            "ObservedBehavior": "An IOException is thrown indicating an input/output error during the write operation.",
            "AdditionalDetails": "The issue may be related to the state of the RandomAccessFile or the underlying file system. The handleException method attempts to close the RandomAccessFile, but if the file is already in an error state, it may not recover properly."
        }
    },
    {
        "filename": "AMQ-5141.json",
        "creation_time": "2014-04-11T11:31:51.000+0000",
        "bug_report": {
            "Title": "SecurityException when writing to Dead Letter Queue",
            "Description": "A SecurityException is thrown when the user 'Test' attempts to write to the Dead Letter Queue (DLQ) in ActiveMQ. This indicates that the user does not have the necessary permissions to perform this action, which is critical for message handling in the broker.",
            "StackTrace": [
                "java.lang.SecurityException: User Test is not authorized to write to: queue://ActiveMQ.DLQ",
                "at org.apache.activemq.security.AuthorizationBroker.send(AuthorizationBroker.java:197)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]",
                "at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]",
                "at org.apache.activemq.util.BrokerSupport.doResend(BrokerSupport.java:68)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]",
                "at org.apache.activemq.util.BrokerSupport.resendNoCopy(BrokerSupport.java:38)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]",
                "at org.apache.activemq.broker.region.RegionBroker.sendToDeadLetterQueue(RegionBroker.java:691)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]",
                "at org.apache.activemq.broker.BrokerFilter.sendToDeadLetterQueue(BrokerFilter.java:262)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]",
                "at org.apache.activemq.broker.MutableBrokerFilter.sendToDeadLetterQueue(MutableBrokerFilter.java:274)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]",
                "at org.apache.activemq.broker.region.Queue.messageExpired(Queue.java:1671)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]",
                "at org.apache.activemq.broker.region.PrefetchSubscription.dispatchPending(PrefetchSubscription.java:648)[105:org.apache.activemq.activemq-osgi:5.8.0.redhat-60024]"
            ],
            "StepsToReproduce": [
                "1. Configure a user 'Test' with insufficient permissions.",
                "2. Send a message that will expire or be undeliverable, triggering the broker to attempt to write to the Dead Letter Queue.",
                "3. Observe the SecurityException in the logs."
            ],
            "ExpectedBehavior": "The user 'Test' should be able to write to the Dead Letter Queue if they have the appropriate permissions.",
            "ObservedBehavior": "The user 'Test' receives a SecurityException indicating they are not authorized to write to the Dead Letter Queue.",
            "AdditionalDetails": "The issue arises from the authorization checks in the AuthorizationBroker class, which prevents users without the necessary permissions from writing to the DLQ. To resolve this, ensure that the user 'Test' has the correct permissions configured in the ActiveMQ security settings."
        }
    },
    {
        "filename": "AMQ-5854.json",
        "creation_time": "2015-06-19T15:36:33.000+0000",
        "bug_report": {
            "Title": "InactivityIOException Thrown During Acknowledgment in ActiveMQ",
            "Description": "An InactivityIOException is thrown when attempting to send an acknowledgment in ActiveMQ, indicating that the channel has already failed. This occurs during the acknowledgment process of a message consumer, which leads to transaction failures.",
            "StackTrace": [
                "org.apache.activemq.transport.InactivityIOException: Cannot send, channel has already failed: ***",
                "at org.apache.activemq.transport.AbstractInactivityMonitor.doOnewaySend(AbstractInactivityMonitor.java:297)",
                "at org.apache.activemq.transport.AbstractInactivityMonitor.oneway(AbstractInactivityMonitor.java:286)",
                "at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:85)",
                "at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:104)",
                "at org.apache.activemq.transport.failover.FailoverTransport.oneway(FailoverTransport.java:658)",
                "at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68)",
                "at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)",
                "at org.apache.activemq.ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1321)",
                "at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1315)",
                "at org.apache.activemq.ActiveMQSession.asyncSendPacket(ActiveMQSession.java:1933)",
                "at org.apache.activemq.ActiveMQSession.sendAck(ActiveMQSession.java:2099)",
                "at org.apache.activemq.ActiveMQSession.sendAck(ActiveMQSession.java:2094)",
                "at org.apache.activemq.ActiveMQMessageConsumer.acknowledge(ActiveMQMessageConsumer.java:1083)",
                "at org.apache.activemq.TransactionContext.beforeEnd(TransactionContext.java:202)",
                "at org.apache.activemq.TransactionContext.end(TransactionContext.java:409)",
                "at com.atomikos.datasource.xa.XAResourceTransaction.suspend(XAResourceTransaction.java:457)",
                "at com.atomikos.datasource.xa.XAResourceTransaction.prepare(XAResourceTransaction.java:608)",
                "at com.atomikos.icatch.imp.PrepareMessage.send(PrepareMessage.java:61)",
                "at com.atomikos.icatch.imp.PropagationMessage.submit(PropagationMessage.java:111)",
                "at com.atomikos.icatch.imp.Propagator$PropagatorThread.run(Propagator.java:87)",
                "at com.atomikos.icatch.imp.Propagator.submitPropagationMessage(Propagator.java:66)",
                "at com.atomikos.icatch.imp.ActiveStateHandler.prepare(ActiveStateHandler.java:173)",
                "at com.atomikos.icatch.imp.CoordinatorImp.prepare(CoordinatorImp.java:832)",
                "at com.atomikos.icatch.imp.CoordinatorImp.terminate(CoordinatorImp.java:1159)",
                "at com.atomikos.icatch.imp.CompositeTerminatorImp.commit(CompositeTerminatorImp.java:92)",
                "at com.atomikos.icatch.jta.TransactionImp.commit(TransactionImp.java:236)",
                "at com.atomikos.icatch.jta.TransactionManagerImp.commit(TransactionManagerImp.java:498)",
                "at com.atomikos.icatch.jta.UserTransactionImp.commit(UserTransactionImp.java:129)",
                "at org.springframework.transaction.jta.JtaTransactionManager.doCommit(JtaTransactionManager.java:1011)",
                "at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:755)",
                "at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:724)",
                "at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:257)",
                "at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1101)",
                "at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:995)",
                "at java.lang.Thread.run(Thread.java:761)"
            ],
            "StepsToReproduce": [
                "Set up an ActiveMQ message consumer with transaction support.",
                "Send a message to the consumer.",
                "Trigger a failure in the transport channel (e.g., network failure).",
                "Attempt to acknowledge the received message."
            ],
            "ExpectedBehavior": "The acknowledgment should be processed successfully, and the message should be marked as acknowledged without any exceptions.",
            "ObservedBehavior": "An InactivityIOException is thrown, indicating that the channel has already failed, preventing the acknowledgment from being sent.",
            "AdditionalDetails": "The issue arises from the failure state of the transport channel, which is checked in the doOnewaySend method. If the channel is marked as failed, it throws an InactivityIOException, which disrupts the acknowledgment process."
        }
    },
    {
        "filename": "AMQ-3056.json",
        "creation_time": "2010-11-26T14:36:24.000+0000",
        "bug_report": {
            "Title": "JMSException: Invalid Acknowledgment in ActiveMQ",
            "Description": "An Invalid acknowledgment error occurs when attempting to acknowledge a message in the ActiveMQ broker. This issue arises when the acknowledgment does not match the expected message state, leading to a JMSException being thrown.",
            "StackTrace": [
                "javax.jms.JMSException: Invalid acknowledgment: MessageAck {commandId = 29455, responseRequired = false, ackType = 3, consumerId = ID:X-2506-1289583778418-0:0:1:1, firstMessageId = ID:X09-51821-634249796434830099-1:5:1:3:313195, lastMessageId = ID:X09-51821-634249796434830099-1:5:1:3:313195, destination = topic://help.Publish.Instance1, transactionId = null, messageCount = 1}",
                "at org.apache.activemq.broker.region.TopicSubscription.acknowledge(TopicSubscription.java:286)",
                "at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:383)",
                "at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:544)",
                "at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:77)",
                "at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:200)",
                "at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:77)",
                "at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:77)",
                "at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:87)",
                "at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:469)",
                "at org.apache.activemq.command.MessageAck.visit(MessageAck.java:214)",
                "at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:311)",
                "at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185)",
                "at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)",
                "at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)",
                "at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:228)",
                "at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)",
                "at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:220)",
                "at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:202)",
                "at java.lang.Thread.run(Thread.java:619)"
            ],
            "StepsToReproduce": [
                "1. Send a message to the topic 'help.Publish.Instance1'.",
                "2. Attempt to acknowledge the message with the ID 'ID:X09-51821-634249796434830099-1:5:1:3:313195'.",
                "3. Observe the exception thrown during the acknowledgment process."
            ],
            "ExpectedBehavior": "The acknowledgment of the message should succeed without throwing an exception, confirming that the message has been processed.",
            "ObservedBehavior": "An Invalid acknowledgment exception is thrown, indicating that the acknowledgment does not match the expected state of the message.",
            "AdditionalDetails": "The issue may be related to the state of the message or the consumer's acknowledgment logic. The method 'acknowledge(ConsumerBrokerExchange consumerExchange, MessageAck ack)' is called, which in turn calls 'getNext().acknowledge(consumerExchange, ack)'. If the consumer exchange or message acknowledgment is not properly synchronized or if the message has already been acknowledged, this could lead to the observed exception."
        }
    },
    {
        "filename": "AMQ-3325.json",
        "creation_time": "2011-05-17T08:58:50.000+0000",
        "bug_report": {
            "Title": "EOFException: Chunk stream does not exist at page: 198",
            "Description": "An EOFException is thrown when attempting to read a page from the transaction log, indicating that the chunk stream for the specified page does not exist. This suggests a potential issue with the integrity of the transaction log or a failure in the page management system.",
            "StackTrace": [
                "java.io.EOFException: Chunk stream does not exist at page: 198",
                "at org.apache.kahadb.page.Transaction$2.readPage(Transaction.java:454)",
                "at org.apache.kahadb.page.Transaction$2.<init>(Transaction.java:431)",
                "at org.apache.kahadb.page.Transaction.openInputStream(Transaction.java:428)",
                "at org.apache.kahadb.page.Transaction.load(Transaction.java:404)",
                "at org.apache.kahadb.page.Transaction.load(Transaction.java:361)",
                "at org.apache.activemq.store.kahadb.plist.PList.loadEntry(PList.java:468)",
                "at org.apache.activemq.store.kahadb.plist.PList.getNext(PList.java:483)",
                "at org.apache.activemq.store.kahadb.plist.PList$10.execute(PList.java:312)",
                "at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)",
                "at org.apache.activemq.store.kahadb.plist.PList.getNext(PList.java:310)",
                "at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor$DiskIterator.next(FilePendingMessageCursor.java:500)",
                "at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor$DiskIterator.next(FilePendingMessageCursor.java:473)",
                "at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.next(FilePendingMessageCursor.java:293)",
                "at org.apache.activemq.broker.region.Queue.doPageInForDispatch(Queue.java:1714)",
                "at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1932)",
                "at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1440)",
                "at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:104)",
                "at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:42)"
            ],
            "StepsToReproduce": [
                "1. Start the ActiveMQ broker with a transaction log.",
                "2. Attempt to read messages from the queue that relies on the transaction log.",
                "3. Observe the EOFException being thrown when the system tries to access page 198."
            ],
            "ExpectedBehavior": "The system should successfully read the page from the transaction log without throwing an EOFException.",
            "ObservedBehavior": "An EOFException is thrown indicating that the chunk stream does not exist for the specified page, leading to a failure in message processing.",
            "AdditionalDetails": "This issue may arise due to corruption in the transaction log or improper handling of page management. Further investigation into the transaction log's integrity and the conditions leading to the missing chunk stream is recommended."
        }
    },
    {
        "filename": "AMQ-2963.json",
        "creation_time": "2010-10-07T06:52:51.000+0000",
        "bug_report": {
            "Title": "Invalid Destination Name Exception in JMS Message Processing",
            "Description": "An exception is thrown when attempting to process a JMS message due to an invalid destination name. The destination name '://IBM.TO.ACTIVEMQ' does not conform to the expected syntax, leading to a DetailedInvalidDestinationException.",
            "StackTrace": [
                "com.ibm.msg.client.jms.DetailedInvalidDestinationException: JMSCMQ0005: The destination name '://IBM.TO.ACTIVEMQ' was not valid. The destination name specified does not conform to published destination syntax. Correct the specified destination name and try again.",
                "at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)",
                "at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)",
                "at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)",
                "at java.lang.reflect.Constructor.newInstance(Constructor.java:513)",
                "at com.ibm.msg.client.commonservices.j2se.NLSServices.createException(NLSServices.java:313)",
                "at com.ibm.msg.client.commonservices.nls.NLSServices.createException(NLSServices.java:388)",
                "at com.ibm.msg.client.wmq.common.internal.WMQDestinationURIParser.setUri(WMQDestinationURIParser.java:524)",
                "at com.ibm.msg.client.wmq.common.internal.WMQDestination.<init>(WMQDestination.java:3148)",
                "at com.ibm.msg.client.wmq.common.internal.WMQDestination.<init>(WMQDestination.java:3104)",
                "at com.ibm.msg.client.wmq.factories.WMQFactoryFactory.createProviderDestination(WMQFactoryFactory.java:444)",
                "at com.ibm.msg.client.jms.admin.JmsDestinationImpl.setProviderDestination(JmsDestinationImpl.java:333)",
                "at com.ibm.msg.client.jms.admin.JmsDestinationImpl.initialise(JmsDestinationImpl.java:231)",
                "at com.ibm.msg.client.jms.admin.JmsDestinationImpl.<init>(JmsDestinationImpl.java:196)",
                "at com.ibm.msg.client.jms.admin.JmsJndiDestinationImpl.<init>(JmsJndiDestinationImpl.java:129)",
                "at com.ibm.mq.jms.MQDestination.<init>(MQDestination.java:186)",
                "at com.ibm.msg.client.wmq.factories.admin.WMQJmsFactory.createDestination(WMQJmsFactory.java:125)",
                "at com.ibm.msg.client.jms.internal.JmsMessageImpl.providerDestToJmsDest(JmsMessageImpl.java:2111)",
                "at com.ibm.msg.client.jms.internal.JmsMessageImpl.getJMSDestination(JmsMessageImpl.java:686)",
                "at com.ibm.jms.JMSMessage.getJMSDestination(JMSMessage.java:605)",
                "at org.apache.activemq.ActiveMQMessageTransformation.copyProperties(ActiveMQMessageTransformation.java:206)",
                "at org.apache.activemq.ActiveMQMessageTransformation.transformMessage(ActiveMQMessageTransformation.java:188)",
                "at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1720)",
                "at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:231)",
                "at org.apache.activemq.ActiveMQMessageProducerSupport.send(ActiveMQMessageProducerSupport.java:300)",
                "at org.apache.activemq.ActiveMQQueueSender.send(ActiveMQQueueSender.java:111)",
                "at org.apache.activemq.network.jms.QueueBridge.sendMessage(QueueBridge.java:80)",
                "at org.apache.activemq.network.jms.DestinationBridge.onMessage(DestinationBridge.java:129)",
                "at com.ibm.mq.jms.MQMessageConsumer$FacadeMessageListener.onMessage(MQMessageConsumer.java:399)",
                "at com.ibm.msg.client.jms.internal.JmsMessageConsumerImpl$JmsProviderMessageListener.onMessage(JmsMessageConsumerImpl.java:904)",
                "at com.ibm.msg.client.wmq.internal.WMQAsyncConsumerShadow.honourNoLocal(WMQAsyncConsumerShadow.java:550)",
                "at com.ibm.msg.client.wmq.internal.WMQAsyncConsumerShadow.consumer(WMQAsyncConsumerShadow.java:384)",
                "at com.ibm.mq.jmqi.remote.internal.RemoteAsyncConsume.driveConsumer(RemoteAsyncConsume.java:1478)",
                "at com.ibm.mq.jmqi.remote.internal.RemoteDispatchThread.run(RemoteDispatchThread.java:385)",
                "at com.ibm.msg.client.commonservices.workqueue.WorkQueueItem.runTask(WorkQueueItem.java:209)",
                "at com.ibm.msg.client.commonservices.workqueue.SimpleWorkQueueItem.runItem(SimpleWorkQueueItem.java:100)",
                "at com.ibm.msg.client.commonservices.workqueue.WorkQueueItem.run(WorkQueueItem.java:224)",
                "at com.ibm.msg.client.commonservices.workqueue.WorkQueueManager.runWorkQueueItem(WorkQueueManager.java:298)",
                "at com.ibm.msg.client.commonservices.j2se.workqueue.WorkQueueManagerImplementation$ThreadPoolWorker.run(WorkQueueManagerImplementation.java:1220)"
            ],
            "StepsToReproduce": [
                "Attempt to send a JMS message with the destination name '://IBM.TO.ACTIVEMQ'.",
                "Observe the exception thrown during the message processing."
            ],
            "ExpectedBehavior": "The message should be sent successfully to the specified destination without any exceptions.",
            "ObservedBehavior": "A DetailedInvalidDestinationException is thrown indicating that the destination name is invalid.",
            "AdditionalDetails": "The destination name must conform to the expected syntax for JMS destinations. Review the destination name format and ensure it adheres to the required standards."
        }
    },
    {
        "filename": "AMQ-3903.json",
        "creation_time": "2012-06-28T14:09:35.000+0000",
        "bug_report": {
            "Title": "NullPointerException in AdvisorySupport.getFastProducerAdvisoryTopic",
            "Description": "A NullPointerException occurs in the method getFastProducerAdvisoryTopic of the AdvisorySupport class when attempting to retrieve the advisory topic for fast producers. This issue arises when the destination passed to the method is null, leading to a failure in accessing its properties.",
            "StackTrace": [
                "java.lang.NullPointerException",
                "at org.apache.activemq.advisory.AdvisorySupport.getFastProducerAdvisoryTopic(AdvisorySupport.java:195)",
                "at org.apache.activemq.advisory.AdvisoryBroker.fastProducer(AdvisoryBroker.java:352)",
                "at org.apache.activemq.broker.BrokerFilter.fastProducer(BrokerFilter.java:275)",
                "at org.apache.activemq.broker.BrokerFilter.fastProducer(BrokerFilter.java:275)",
                "at org.apache.activemq.broker.MutableBrokerFilter.fastProducer(MutableBrokerFilter.java:286)",
                "at org.apache.activemq.broker.region.BaseDestination.fastProducer(BaseDestination.java:512)",
                "at org.apache.activemq.broker.region.Queue.send(Queue.java:605)",
                "at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:407)",
                "at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:503)",
                "at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:305)",
                "at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)",
                "at org.apache.activemq.broker.scheduler.SchedulerBroker.send(SchedulerBroker.java:189)",
                "at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)",
                "at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)",
                "at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:306)",
                "at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)",
                "at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:453)",
                "at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:681)",
                "at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:292)",
                "at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:150)",
                "at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)",
                "at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)",
                "at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:231)",
                "at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)",
                "at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)"
            ],
            "StepsToReproduce": [
                "1. Attempt to send a message using the ActiveMQ broker.",
                "2. Ensure that the destination provided to the broker is null.",
                "3. Observe the NullPointerException in the logs."
            ],
            "ExpectedBehavior": "The system should handle null destinations gracefully, either by logging an error or by throwing a more descriptive exception.",
            "ObservedBehavior": "A NullPointerException is thrown, causing the application to crash or behave unexpectedly.",
            "AdditionalDetails": "The method getFastProducerAdvisoryTopic expects a non-null Destination object. If the destination is null, it leads to a failure when trying to access its properties, specifically in the line where destination.getDestinationTypeAsString() is called."
        }
    },
    {
        "filename": "AMQ-2693.json",
        "creation_time": "2010-04-12T13:58:58.000+0000",
        "bug_report": {
            "Title": "InactivityIOException Thrown During Command Processing",
            "Description": "An InactivityIOException is thrown when the system attempts to send a command over a TCP connection that has been inactive for too long. This issue arises during the execution of the oneway method in the TcpTransport class, which is responsible for sending commands to the next transport in the chain. The stack trace indicates that the error occurs when the system checks for inactivity before sending the command.",
            "StackTrace": [
                "java.lang.Thread.State: RUNNABLE",
                "at java.net.SocketOutputStream.socketWrite0(Native Method)",
                "at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)",
                "at java.net.SocketOutputStream.write(SocketOutputStream.java:136)",
                "at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.flush(TcpBufferedOutputStream.java:115)",
                "at java.io.DataOutputStream.flush(DataOutputStream.java:106)",
                "at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:168)",
                "at org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:243)",
                "at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:83)",
                "at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:104)",
                "at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)",
                "at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1205)",
                "at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:790)",
                "at org.apache.activemq.broker.TransportConnection.dispatchSync(TransportConnection.java:750)",
                "at org.apache.activemq.broker.region.PrefetchSubscription.dispatch(PrefetchSubscription.java:647)",
                "at org.apache.activemq.broker.region.PrefetchSubscription.dispatchPending(PrefetchSubscription.java:592)",
                "at org.apache.activemq.broker.region.Queue.doActualDispatch(Queue.java:1548)",
                "at org.apache.activemq.broker.region.Queue.doDispatch(Queue.java:1500)",
                "at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1585)",
                "at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1219)",
                "at org.apache.activemq.broker.region.Queue.wakeup(Queue.java:1406)",
                "at org.apache.activemq.broker.region.Queue.addSubscription(Queue.java:377)",
                "at org.apache.activemq.broker.region.AbstractRegion.addConsumer(AbstractRegion.java:279)",
                "at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:380)",
                "at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)",
                "at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:93)",
                "at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:533)",
                "at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:349)",
                "at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:300)",
                "at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:178)",
                "at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)",
                "at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)",
                "at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:216)",
                "at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)",
                "at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:204)",
                "at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:186)",
                "at java.lang.Thread.run(Thread.java:619)"
            ],
            "StepsToReproduce": [
                "Establish a TCP connection using ActiveMQ.",
                "Send commands over the connection without any activity for a duration longer than the inactivity timeout.",
                "Observe the logs for InactivityIOException being thrown."
            ],
            "ExpectedBehavior": "The system should handle inactivity gracefully without throwing an InactivityIOException, allowing for reconnection or command resending.",
            "ObservedBehavior": "An InactivityIOException is thrown, indicating that the channel was inactive for too long, which disrupts the command processing flow.",
            "AdditionalDetails": "The issue seems to stem from the oneway method in the TcpTransport class, which checks for inactivity before sending commands. The inactivity timeout settings may need to be reviewed to ensure they align with expected usage patterns."
        }
    },
    {
        "filename": "AMQ-4643.json",
        "creation_time": "2013-07-19T13:39:19.000+0000",
        "bug_report": {
            "Title": "Database Not Found Exception During Message Send",
            "Description": "An IOException is thrown when attempting to send a message using ActiveMQ due to a missing database. The test case 'StopDBDuringProducerSendTopicTest' fails because it tries to access a database that does not exist, leading to a cascading failure in the message sending process.",
            "StackTrace": [
                "at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:54)",
                "at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1391)",
                "at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1319)",
                "at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1809)",
                "at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:289)",
                "at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:224)",
                "at org.apache.activemq.ActiveMQMessageProducerSupport.send(ActiveMQMessageProducerSupport.java:241)",
                "at org.apache.activemq.store.jdbc.StopDBDuringProducerSendTopicTest.sendMessage(StopDBDuringProducerSendTopicTest.java:150)",
                "at org.apache.activemq.store.jdbc.StopDBDuringProducerSendTopicTest.testProducerWithDBShutdown(StopDBDuringProducerSendTopicTest.java:127)",
                "Caused by: java.io.IOException: Database &apos;target/derbydb_15&apos; not found.",
                "at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:45)",
                "at org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:68)",
                "at org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doAddMessage(DefaultJDBCAdapter.java:218)",
                "at org.apache.activemq.store.jdbc.JDBCMessageStore.addMessage(JDBCMessageStore.java:123)",
                "at org.apache.activemq.store.memory.MemoryTransactionStore.addMessage(MemoryTransactionStore.java:327)",
                "at org.apache.activemq.broker.region.Topic.doMessageSend(Topic.java:482)",
                "at org.apache.activemq.broker.region.Topic.send(Topic.java:446)",
                "at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:406)",
                "at org.apache.activemq.broker.RegionBroker.send(RegionBroker.java:431)",
                "at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:147)",
                "at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)",
                "at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:317)",
                "at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:152)",
                "at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:464)",
                "at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:751)",
                "at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:294)",
                "at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:149)",
                "at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)",
                "at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)",
                "at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)",
                "at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)",
                "at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)",
                "at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)",
                "at java.lang.Thread.run(Thread.java:680)",
                "Caused by: java.sql.SQLException: Database &apos;target/derbydb_15&apos; not found.",
                "at org.apache.derby.impl.jdbc.SQLExceptionFactory40.getSQLException(Unknown Source)",
                "at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)",
                "at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Unknown Source)",
                "at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Unknown Source)",
                "at org.apache.derby.impl.jdbc.EmbedConnection.newSQLException(Unknown Source)",
                "at org.apache.derby.impl.jdbc.EmbedConnection.handleDBNotFound(Unknown Source)",
                "at org.apache.derby.impl.jdbc.EmbedConnection.<init>(Unknown Source)",
                "at org.apache.derby.impl.jdbc.EmbedConnection30.<init>(Unknown Source)",
                "at org.apache.derby.impl.jdbc.EmbedConnection40.<init>(Unknown Source)",
                "at org.apache.derby.jdbc.Driver40.getNewEmbedConnection(Unknown Source)",
                "at org.apache.derby.jdbc.InternalDriver.connect(Unknown Source)",
                "at org.apache.derby.jdbc.EmbeddedDataSource.getConnection(EmbeddedDataSource.java:45)",
                "at org.apache.derby.jdbc.EmbeddedDataSource.getConnection(EmbeddedDataSource.java:45)",
                "at org.apache.activemq.store.jdbc.StopDBDuringProducerSendTopicTest$ReconnectingEmbeddedDataSource.getConnection(StopDBDuringProducerSendTopicTest.java:242)",
                "at org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:58)"
            ],
            "StepsToReproduce": [
                "Run the test case 'StopDBDuringProducerSendTopicTest'.",
                "Ensure that the database 'target/derbydb_15' is not present in the expected location."
            ],
            "ExpectedBehavior": "The message should be sent successfully without any exceptions.",
            "ObservedBehavior": "An IOException is thrown indicating that the database 'target/derbydb_15' is not found, causing the message sending process to fail.",
            "AdditionalDetails": "The issue arises from the test case attempting to send a message while the database is expected to be available but is not found. This indicates a potential issue with the test setup or database initialization."
        }
    },
    {
        "filename": "AMQ-2902.json",
        "creation_time": "2010-09-07T11:34:15.000+0000",
        "bug_report": {
            "Title": "Exception during ActiveMQ Connection Closure",
            "Description": "An exception occurs when attempting to stop the VMTransport during the closure of an ActiveMQ connection. The stack trace indicates that the stop method is being called, which leads to a failure in disposing of the transport service.",
            "StackTrace": [
                "at org.apache.activemq.transport.vm.VMTransport.stop(VMTransport.java:159)",
                "at org.apache.activemq.transport.vm.VMTransportServer$1.stop(VMTransportServer.java:81)",
                "at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:65)",
                "at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:65)",
                "at org.apache.activemq.transport.ResponseCorrelator.stop(ResponseCorrelator.java:132)",
                "at org.apache.activemq.util.ServiceSupport.dispose(ServiceSupport.java:43)",
                "at org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:656)",
                "at org.apache.activemq.ra.ActiveMQManagedConnection.destroy(ActiveMQManagedConnection.java:207)",
                "at org.jboss.resource.connectionmanager.InternalManagedConnectionPool.doDestroy(InternalManagedConnectionPool.java:650)",
                "at org.jboss.resource.connectionmanager.InternalManagedConnectionPool.removeTimedOut(InternalManagedConnectionPool.java:481)",
                "at org.jboss.resource.connectionmanager.IdleRemover$IdleRemoverRunnable.run(IdleRemover.java:164)",
                "at java.lang.Thread.run(Thread.java:619)"
            ],
            "StepsToReproduce": [
                "1. Establish an ActiveMQ connection using VMTransport.",
                "2. Attempt to close the ActiveMQ connection while it is still in use.",
                "3. Observe the exception thrown during the closure process."
            ],
            "ExpectedBehavior": "The ActiveMQ connection should close gracefully without throwing an exception.",
            "ObservedBehavior": "An exception is thrown during the closure of the ActiveMQ connection, indicating a failure in stopping the VMTransport.",
            "AdditionalDetails": "The stop method in the VMTransport class calls dispose with an IOException, which may not be handled properly, leading to the observed exception. Further investigation into the error handling in the dispose method may be required."
        }
    },
    {
        "filename": "AMQ-5665.json",
        "creation_time": "2015-03-16T21:35:15.000+0000",
        "bug_report": {
            "Title": "NullPointerException in AdvisoryBroker.fireAdvisory",
            "Description": "A NullPointerException occurs in the AdvisoryBroker class when attempting to fire an advisory message. This issue arises when the broker service is expected to be started, but certain properties or objects are not initialized properly, leading to a null reference during message delivery.",
            "StackTrace": [
                "java.lang.NullPointerException",
                "at org.apache.activemq.advisory.AdvisoryBroker.fireAdvisory(AdvisoryBroker.java:626)",
                "at org.apache.activemq.advisory.AdvisoryBroker.messageDelivered(AdvisoryBroker.java:397)",
                "at org.apache.activemq.broker.BrokerFilter.messageDelivered(BrokerFilter.java:349)",
                "at org.apache.activemq.broker.BrokerFilter.messageDelivered(BrokerFilter.java:349)",
                "at org.apache.activemq.broker.MutableBrokerFilter.messageDelivered(MutableBrokerFilter.java:360)",
                "at org.apache.activemq.broker.MutableBrokerFilter.messageDelivered(MutableBrokerFilter.java:360)",
                "at org.apache.activemq.broker.region.BaseDestination.messageDelivered(BaseDestination.java:518)",
                "at org.apache.activemq.broker.region.Queue.messageSent(Queue.java:1806)",
                "at org.apache.activemq.broker.region.Queue.doPendingCursorAdditions(Queue.java:794)",
                "at org.apache.activemq.broker.region.Queue.orderedCursorAdd(Queue.java:875)",
                "at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:854)",
                "at org.apache.activemq.broker.region.Queue.send(Queue.java:733)",
                "at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:419)",
                "at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:468)",
                "at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:297)",
                "at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:152)",
                "at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)",
                "at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:307)",
                "at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:157)",
                "at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:157)",
                "at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:541)",
                "at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:768)",
                "at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:334)",
                "at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:188)",
                "at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)",
                "at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)",
                "at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:270)",
                "at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)",
                "at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)",
                "at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)",
                "at java.lang.Thread.run(Thread.java:724)"
            ],
            "StepsToReproduce": [
                "Start the ActiveMQ broker.",
                "Send a message to a destination that triggers advisory messages.",
                "Observe the logs for a NullPointerException."
            ],
            "ExpectedBehavior": "The advisory message should be fired without any exceptions, and the message should be delivered successfully.",
            "ObservedBehavior": "A NullPointerException is thrown, indicating that an object was not initialized properly during the advisory message firing process.",
            "AdditionalDetails": "The issue likely stems from the 'fireAdvisory' method in the AdvisoryBroker class, specifically at line 626, where certain properties of the advisory message may not be set correctly before being sent."
        }
    },
    {
        "filename": "AMQ-3725.json",
        "creation_time": "2012-02-17T18:57:21.000+0000",
        "bug_report": {
            "Title": "KahaDB Journal Storage Failure Due to Missing Log File",
            "Description": "The application encounters multiple IO exceptions related to the KahaDB journal storage, specifically failing to sync and store data due to a missing log file. The errors indicate that the application is unable to find the specified log file, leading to a cascade of failures in checkpoint operations.",
            "StackTrace": [
                "java.io.SyncFailedException: sync failed",
                "at java.io.FileDescriptor.sync(Native Method)",
                "at org.apache.kahadb.journal.DataFileAppender.processQueue(DataFileAppender.java:382)",
                "at org.apache.kahadb.journal.DataFileAppender$2.run(DataFileAppender.java:203)",
                "java.io.FileNotFoundException: /Volumes/NAS-01/data/kahadb/db-1.log (No such file or directory)",
                "at java.io.RandomAccessFile.open(Native Method)",
                "at java.io.RandomAccessFile.<init>(RandomAccessFile.java:216)",
                "at org.apache.kahadb.journal.DataFile.openRandomAccessFile(DataFile.java:70)",
                "at org.apache.kahadb.journal.DataFileAppender.processQueue(DataFileAppender.java:324)",
                "at org.apache.kahadb.journal.DataFileAppender$2.run(DataFileAppender.java:203)",
                "java.io.IOException: Input/output error",
                "at java.io.RandomAccessFile.write(Native Method)",
                "at java.io.RandomAccessFile.writeLong(RandomAccessFile.java:1001)",
                "at org.apache.kahadb.page.PageFile.writeBatch(PageFile.java:1006)",
                "at org.apache.kahadb.page.PageFile.flush(PageFile.java:484)",
                "at org.apache.activemq.store.kahadb.MessageDatabase.checkpointUpdate(MessageDatabase.java:1290)",
                "at org.apache.activemq.store.kahadb.MessageDatabase$10.execute(MessageDatabase.java:768)",
                "at org.apache.kahadb.page.Transaction.execute(Transaction.java:760)",
                "at org.apache.activemq.store.kahadb.MessageDatabase.checkpointCleanup(MessageDatabase.java:766)",
                "at org.apache.activemq.store.kahadb.MessageDatabase$3.run(MessageDatabase.java:315)"
            ],
            "StepsToReproduce": [
                "Attempt to start the application with KahaDB configured to use the specified log file path.",
                "Ensure that the log file '/Volumes/NAS-01/data/kahadb/db-1.log' does not exist.",
                "Observe the application logs for IO exceptions related to the missing log file."
            ],
            "ExpectedBehavior": "The application should successfully create and write to the KahaDB journal log file without encountering IO exceptions.",
            "ObservedBehavior": "The application fails to find the specified log file, resulting in multiple IO exceptions and failure to perform checkpoint operations.",
            "AdditionalDetails": "The issue appears to stem from the absence of the log file, which is critical for KahaDB operations. The application should handle the case where the log file is missing, potentially by creating it or providing a more informative error message."
        }
    },
    {
        "filename": "AMQ-3085.json",
        "creation_time": "2010-12-15T12:18:12.000+0000",
        "bug_report": {
            "Title": "IndexOutOfBoundsException in FailoverTransport when processing new transports",
            "Description": "An IndexOutOfBoundsException occurs in the FailoverTransport class when attempting to add a new URI to the list of URIs. This happens during the update of transport URIs, specifically when the size of the list is exceeded.",
            "StackTrace": [
                "java.io.IOException: Unexpected error occured",
                "at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:208) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]",
                "at java.lang.Thread.run(Thread.java:619) [na:1.6.0_12]",
                "Caused by: java.lang.IndexOutOfBoundsException: Index: 12, Size: 11",
                "at java.util.concurrent.CopyOnWriteArrayList.add(CopyOnWriteArrayList.java:409) ~[na:1.6.0_12]",
                "at org.apache.activemq.transport.failover.FailoverTransport.add(FailoverTransport.java:613) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]",
                "at org.apache.activemq.transport.failover.FailoverTransport.updateURIs(FailoverTransport.java:1046) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]",
                "at org.apache.activemq.transport.failover.FailoverTransport.processNewTransports(FailoverTransport.java:285) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]",
                "at org.apache.activemq.transport.failover.FailoverTransport.handleConnectionControl(FailoverTransport.java:265) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]",
                "at org.apache.activemq.transport.failover.FailoverTransport$3.onCommand(FailoverTransport.java:177) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]",
                "at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]",
                "at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:228) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]",
                "at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]",
                "at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:219) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]",
                "at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:201) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]"
            ],
            "StepsToReproduce": [
                "1. Trigger a connection control event that leads to the processing of new transports.",
                "2. Ensure that the number of URIs being added exceeds the current size of the CopyOnWriteArrayList."
            ],
            "ExpectedBehavior": "The system should successfully add new URIs to the list without exceeding the bounds of the list.",
            "ObservedBehavior": "An IndexOutOfBoundsException is thrown when attempting to add a new URI, indicating that the index being accessed is out of the list's current size.",
            "AdditionalDetails": "The issue arises in the 'add(boolean rebalance, URI u[])' method where the index used for adding new URIs is not properly managed, leading to attempts to access an index that is out of bounds."
        }
    },
    {
        "filename": "AMQ-3504.json",
        "creation_time": "2011-09-19T14:33:49.000+0000",
        "bug_report": {
            "Title": "NullPointerException in StompServlet during doGet",
            "Description": "A NullPointerException is thrown in the StompServlet class when the doGet method is invoked. This issue occurs when the servlet attempts to process an HTTP GET request, but encounters a null reference, leading to a failure in handling the request properly.",
            "StackTrace": [
                "java.lang.NullPointerException",
                "at org.apache.activemq.transport.ws.StompServlet.doGet(StompServlet.java:51)",
                "at javax.servlet.http.HttpServlet.service(HttpServlet.java:693)",
                "at org.eclipse.jetty.websocket.WebSocketServlet.service(WebSocketServlet.java:73)",
                "at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)",
                "at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:527)",
                "at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:423)",
                "at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)",
                "at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:930)",
                "at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:358)",
                "at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:183)",
                "at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:866)",
                "at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)",
                "at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:113)",
                "at org.eclipse.jetty.server.Server.handle(Server.java:351)",
                "at org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:594)",
                "at org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:1042)",
                "at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:549)",
                "at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:211)",
                "at org.eclipse.jetty.server.HttpConnection.handle(HttpConnection.java:424)",
                "at org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint.run(SocketConnector.java:241)",
                "at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:436)",
                "at java.lang.Thread.run(Thread.java:680)"
            ],
            "StepsToReproduce": [
                "Send an HTTP GET request to the StompServlet endpoint.",
                "Ensure that the request is processed by the doGet method."
            ],
            "ExpectedBehavior": "The StompServlet should process the HTTP GET request without throwing an exception and return a valid response.",
            "ObservedBehavior": "A NullPointerException is thrown, causing the servlet to fail to handle the request properly.",
            "AdditionalDetails": "The exact cause of the NullPointerException is not clear from the provided information. Further investigation into the doGet method implementation and the state of the request and response objects at line 51 is needed."
        }
    },
    {
        "filename": "AMQ-6707.json",
        "creation_time": "2017-06-19T11:29:47.000+0000",
        "bug_report": {
            "Title": "Transaction Commit Failure in ActiveMQ",
            "Description": "A transaction commit operation in ActiveMQ fails with an XAException indicating that the transaction was rolled back. The root cause appears to be an IOException during the commit process, specifically when attempting to remove the prepared transaction state from the message.",
            "StackTrace": [
                "javax.transaction.xa.XAException: STORE COMMIT FAILED: Transaction rolled back xaErrorCode:104",
                "at org.apache.activemq.TransactionContext.toXAException(TransactionContext.java:793)",
                "at org.apache.activemq.TransactionContext.commit(TransactionContext.java:622)",
                "at org.apache.geronimo.transaction.manager.WrapperNamedXAResource.commit(WrapperNamedXAResource.java:54)",
                "at org.apache.geronimo.transaction.manager.CommitTask.run(CommitTask.java:64)",
                "at org.apache.geronimo.transaction.manager.TransactionImpl.commitResources(TransactionImpl.java:688)",
                "at org.apache.geronimo.transaction.manager.TransactionImpl.commit(TransactionImpl.java:327)",
                "at org.apache.geronimo.transaction.manager.TransactionManagerImpl.commit(TransactionManagerImpl.java:252)",
                "at org.springframework.transaction.jta.JtaTransactionManager.doCommit(JtaTransactionManager.java:1020)",
                "at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:761)",
                "at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:730)",
                "at org.apache.aries.transaction.internal.AriesPlatformTransactionManager.commit(AriesPlatformTransactionManager.java:75)",
                "at sun.reflect.GeneratedMethodAccessor180.invoke(Unknown Source)",
                "at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)[:1.8.0_131]",
                "at java.lang.reflect.Method.invoke(Method.java:498)[:1.8.0_131]",
                "at com.ectsp.spring.osgi.PlatformTransactionManagerFactoryBean$ProxyTxManagerHandler.invoke(PlatformTransactionManagerFactoryBean.java:115)[169:ectsp-spring-osgi:1.0.0.SNAPSHOT]",
                "at com.sun.proxy.$Proxy68.commit(Unknown Source)[100:org.apache.servicemix.bundles.spring-tx:4.2.8.RELEASE_1]",
                "at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:245)[97:org.apache.servicemix.bundles.spring-jms:4.2.8.RELEASE_1]",
                "at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1164)[97:org.apache.servicemix.bundles.spring-jms:4.2.8.RELEASE_1]",
                "at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1156)[97:org.apache.servicemix.bundles.spring-jms:4.2.8.RELEASE_1]",
                "at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1053)[97:org.apache.servicemix.bundles.spring-jms:4.2.8.RELEASE_1]",
                "at java.lang.Thread.run(Thread.java:748)[:1.8.0_131]",
                "Caused by: javax.transaction.xa.XAException: STORE COMMIT FAILED: Transaction rolled back xaErrorCode:104",
                "at org.apache.activemq.transaction.Transaction.newXAException(Transaction.java:212)",
                "at org.apache.activemq.transaction.XATransaction.storeCommit(XATransaction.java:93)",
                "at org.apache.activemq.transaction.XATransaction.commit(XATransaction.java:76)",
                "at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:252)",
                "at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:118)",
                "at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:118)",
                "at org.apache.activemq.broker.TransportConnection.processCommitTransactionTwoPhase(TransportConnection.java:547)",
                "at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:102)",
                "at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:336)",
                "at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:200)",
                "at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)",
                "at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:125)",
                "at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:301)",
                "at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)",
                "at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:233)",
                "at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:215)",
                "at java.lang.Thread.run(Thread.java:745)"
            ],
            "StepsToReproduce": [
                "1. Initiate a transaction in ActiveMQ.",
                "2. Attempt to commit the transaction.",
                "3. Observe the exception thrown during the commit process."
            ],
            "ExpectedBehavior": "The transaction should commit successfully without throwing an exception.",
            "ObservedBehavior": "The transaction fails to commit, resulting in an XAException indicating that the transaction was rolled back.",
            "AdditionalDetails": "The root cause of the failure appears to be an IOException when trying to remove the prepared transaction state from the message, as indicated by the following line in the stack trace: 'Caused by: java.io.IOException: Could not remove prepared transaction state from message add for sequenceId: 4025171'. This suggests a potential issue with the persistence layer or the transaction management logic."
        }
    },
    {
        "filename": "AMQ-5384.json",
        "creation_time": "2014-10-06T09:26:58.000+0000",
        "bug_report": {
            "Title": "Overdue Resource Checkout Exception in ActiveMQ Transaction Handling",
            "Description": "An exception occurs during the transaction commit process in ActiveMQ, specifically when attempting to check out a resource from the connection pool. This leads to a failure in committing transactions, which can disrupt message processing.",
            "StackTrace": [
                "java.lang.Exception: DEBUG STACK TRACE: Overdue resource check-out stack trace.",
                "at com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:555)",
                "at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:756)",
                "at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:683)",
                "at com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)",
                "at org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:58)",
                "at org.apache.activemq.store.jdbc.TransactionContext.begin(TransactionContext.java:163)",
                "at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.beginTransaction(JDBCPersistenceAdapter.java:510)",
                "at org.apache.activemq.store.memory.MemoryTransactionStore$Tx.commit(MemoryTransactionStore.java:92)",
                "at org.apache.activemq.store.memory.MemoryTransactionStore.commit(MemoryTransactionStore.java:259)",
                "at org.apache.activemq.transaction.XATransaction.storeCommit(XATransaction.java:85)",
                "at org.apache.activemq.transaction.XATransaction.commit(XATransaction.java:75)",
                "at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:253)",
                "at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:112)",
                "at org.apache.activemq.broker.TransportConnection.processCommitTransactionTwoPhase(TransportConnection.java:433)",
                "at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:102)",
                "at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:292)",
                "at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:149)",
                "at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)",
                "at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)",
                "at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:270)",
                "at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)",
                "at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)",
                "at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)",
                "at java.lang.Thread.run(Thread.java:662)"
            ],
            "StepsToReproduce": [
                "Initiate a transaction in ActiveMQ.",
                "Attempt to commit the transaction while the connection pool is under heavy load or has exhausted available resources.",
                "Observe the exception thrown during the commit process."
            ],
            "ExpectedBehavior": "The transaction should commit successfully without any exceptions, and resources should be checked out from the connection pool as needed.",
            "ObservedBehavior": "An exception is thrown indicating an overdue resource check-out, preventing the transaction from committing and potentially leading to message processing failures.",
            "AdditionalDetails": "The issue appears to stem from the connection pool management, specifically in the `checkoutResource` method of the `BasicResourcePool` class. This may indicate a need for better resource management or configuration adjustments in the connection pool settings."
        }
    },
    {
        "filename": "AMQ-5783.json",
        "creation_time": "2015-05-20T08:47:56.000+0000",
        "bug_report": {
            "Title": "EOFException: Chunk stream does not exist, page marked free",
            "Description": "An EOFException is thrown when attempting to read a page that is marked as free in the KahaDB storage. This occurs during the recovery process of the message store, indicating that the system is trying to access a page that has been freed and is no longer available.",
            "StackTrace": [
                "java.io.EOFException: Chunk stream does not exist, page: 39 is marked free",
                "at org.apache.activemq.store.kahadb.disk.page.Transaction$2.readPage(Transaction.java:470)",
                "at org.apache.activemq.store.kahadb.disk.page.Transaction$2.<init>(Transaction.java:447)",
                "at org.apache.activemq.store.kahadb.disk.page.Transaction.openInputStream(Transaction.java:444)",
                "at org.apache.activemq.store.kahadb.disk.page.Transaction.load(Transaction.java:420)",
                "at org.apache.activemq.store.kahadb.disk.page.Transaction.load(Transaction.java:377)",
                "at org.apache.activemq.store.kahadb.disk.index.BTreeIndex.loadNode(BTreeIndex.java:266)",
                "at org.apache.activemq.store.kahadb.disk.index.BTreeIndex.getRoot(BTreeIndex.java:174)",
                "at org.apache.activemq.store.kahadb.disk.index.BTreeIndex.iterator(BTreeIndex.java:236)",
                "at org.apache.activemq.store.kahadb.MessageDatabase$MessageOrderIndex$MessageOrderIterator.<init>(MessageDatabase.java:3033)",
                "at org.apache.activemq.store.kahadb.MessageDatabase$MessageOrderIndex.iterator(MessageDatabase.java:2985)",
                "at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$4.execute(KahaDBStore.java:564)",
                "at org.apache.activemq.store.kahadb.disk.page.Transaction.execute(Transaction.java:779)",
                "at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recover(KahaDBStore.java:558)",
                "at org.apache.activemq.store.ProxyTopicMessageStore.recover(ProxyTopicMessageStore.java:62)",
                "at org.apache.activemq.broker.region.Topic.doBrowse(Topic.java:589)",
                "at org.apache.activemq.broker.region.Topic.access$100(Topic.java:65)",
                "at org.apache.activemq.broker.region.Topic$6.run(Topic.java:722)",
                "at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)",
                "at java.util.TimerThread.mainLoop(Timer.java:555)",
                "at java.util.TimerThread.run(Timer.java:505)"
            ],
            "StepsToReproduce": [
                "1. Start the ActiveMQ broker with KahaDB as the message store.",
                "2. Send messages to a topic.",
                "3. Stop the broker and restart it.",
                "4. Attempt to browse the messages in the topic."
            ],
            "ExpectedBehavior": "The system should successfully recover and browse the messages in the topic without throwing an EOFException.",
            "ObservedBehavior": "An EOFException is thrown indicating that a chunk stream does not exist because the page is marked as free, preventing the recovery of messages.",
            "AdditionalDetails": "The issue arises from the 'readPage' method in the Transaction class, which checks the page type and throws an EOFException if the page is marked as free. This suggests that there may be a problem with how pages are managed and freed in the KahaDB storage."
        }
    },
    {
        "filename": "AMQ-2965.json",
        "creation_time": "2010-10-07T20:18:59.000+0000",
        "bug_report": {
            "Title": "UnknownHostException during Broker Initialization",
            "Description": "The application encounters an UnknownHostException when attempting to initialize the ActiveMQ broker. This occurs during the creation of the RegionBroker, which relies on the local host's address. The failure to resolve the local host results in the broker not starting properly.",
            "StackTrace": [
                "java.net.UnknownHostException: Q01M0003: Q01M0003",
                "at java.net.InetAddress.getLocalHost(Unknown Source)",
                "at org.apache.activemq.util.IdGenerator.<clinit>(IdGenerator.java:52)",
                "at org.apache.activemq.broker.region.RegionBroker.<clinit>(RegionBroker.java:75)",
                "at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1734)",
                "at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1728)",
                "at org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:1688)",
                "at org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:706)",
                "at org.apache.activemq.broker.BrokerService.start(BrokerService.java:469)",
                "at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:85)",
                "at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                "at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)",
                "at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)",
                "at java.lang.reflect.Method.invoke(Unknown Source)",
                "at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1414)",
                "at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1375)",
                "at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1335)",
                "at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)",
                "at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)",
                "at java.security.AccessController.doPrivileged(Native Method)",
                "at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)",
                "at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)",
                "at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)",
                "at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)",
                "at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)",
                "at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)",
                "at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)",
                "at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)",
                "at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)",
                "at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)",
                "at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)",
                "at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)",
                "at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)",
                "at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)",
                "at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)",
                "at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)",
                "at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)",
                "at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)",
                "at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)",
                "at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)",
                "at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)",
                "at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                "at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)",
                "at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)",
                "at java.lang.reflect.Method.invoke(Unknown Source)",
                "at org.apache.activemq.console.Main.runTaskClass(Main.java:251)",
                "at org.apache.activemq.console.Main.main(Main.java:107)",
                "at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                "at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)",
                "at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)",
                "at java.lang.reflect.Method.invoke(Unknown Source)",
                "at org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:240)",
                "at java.lang.Thread.run(Unknown Source)"
            ],
            "StepsToReproduce": [
                "Attempt to start the ActiveMQ broker with the hostname 'Q01M0003' that cannot be resolved.",
                "Ensure that the local host configuration does not allow resolution of the hostname."
            ],
            "ExpectedBehavior": "The ActiveMQ broker should start successfully without any exceptions.",
            "ObservedBehavior": "The ActiveMQ broker fails to start due to an UnknownHostException when trying to resolve the local host.",
            "AdditionalDetails": "The issue seems to stem from the initialization of the IdGenerator in the ActiveMQ library, which attempts to retrieve the local host's address. If the hostname cannot be resolved, it leads to a failure in creating the RegionBroker, which is critical for the broker's operation."
        }
    }
]