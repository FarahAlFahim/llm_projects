[
    {
        "filename": "ZOOKEEPER-1864.json",
        "description": "This bug was found when using ZK 3.5.0 with curator-test 2.3.0.\ncurator-test is building a QuorumPeerConfig from a Properties object and then when we try to run the quorum peer using that configuration, we get an NPE:\n{noformat}\n2014-01-19 21:58:39,768 [myid:] - ERROR [Thread-3:TestingZooKeeperServer$1@138] - From testing server (random state: false)\njava.lang.NullPointerException\n\tat org.apache.zookeeper.server.quorum.QuorumPeer.setQuorumVerifier(QuorumPeer.java:1320)\n\tat org.apache.zookeeper.server.quorum.QuorumPeerMain.runFromConfig(QuorumPeerMain.java:156)\n\tat org.apache.curator.test.TestingZooKeeperServer$1.run(TestingZooKeeperServer.java:134)\n\tat java.lang.Thread.run(Thread.java:722)\n{noformat}\nThe reason that this happens is because QuorumPeerConfig:parseProperties only peforms a subset of what 'QuorumPeerConfig:parse(String path)' does. The exact additional task performed that we need in parseProperties is the dynamic config backwards compatibility check:\n{noformat}\n            // backward compatibility - dynamic configuration in the same file as static configuration params\n            // see writeDynamicConfig() - we change the config file to new format if reconfig happens\n            if (dynamicConfigFileStr == null) {\n                configBackwardCompatibilityMode = true;\n                configFileStr = path;................\n                parseDynamicConfig(cfg, electionAlg, true);\n                checkValidity();................\n            }\n{noformat}\n"
    },
    {
        "filename": "ZOOKEEPER-2213.json",
        "description": "See https://github.com/samuel/go-zookeeper/issues/62\n\nI've reproduced this on 3.4.5 with the code:\n        c, _, _ := zk.Connect([]string{\"127.0.0.1\"}, time.Second)\n        c.Set(\"\", []byte{}, 0)\n\nThis crashes a local zookeeper 3.4.5 server:\n2015-06-10 16:21:10,862 [myid:] - ERROR [SyncThread:0:SyncRequestProcessor@151] - Severe unrecoverable error, exiting  \njava.lang.IllegalArgumentException: Invalid path\n        at org.apache.zookeeper.common.PathTrie.findMaxPrefix(PathTrie.java:259)\n        at org.apache.zookeeper.server.DataTree.getMaxPrefixWithQuota(DataTree.java:634)\n        at org.apache.zookeeper.server.DataTree.setData(DataTree.java:616)\n        at org.apache.zookeeper.server.DataTree.processTxn(DataTree.java:807)\n        at org.apache.zookeeper.server.ZKDatabase.processTxn(ZKDatabase.java:329)\n        at org.apache.zookeeper.server.ZooKeeperServer.processTxn(ZooKeeperServer.java:965)\n        at org.apache.zookeeper.server.FinalRequestProcessor.processRequest(FinalRequestProcessor.java:116)\n        at org.apache.zookeeper.server.SyncRequestProcessor.flush(SyncRequestProcessor.java:167)\n        at org.apache.zookeeper.server.SyncRequestProcessor.run(SyncRequestProcessor.java:101)\n\nOn restart the zookeeper server crashes out:\n2015-06-10 16:22:21,352 [myid:] - ERROR [main:ZooKeeperServerMain@54] - Invalid arguments, exiting abnormally\njava.lang.IllegalArgumentException: Invalid path\n        at org.apache.zookeeper.common.PathTrie.findMaxPrefix(PathTrie.java:259)\n        at org.apache.zookeeper.server.DataTree.getMaxPrefixWithQuota(DataTree.java:634)\n        at org.apache.zookeeper.server.DataTree.setData(DataTree.java:616)\n        at org.apache.zookeeper.server.DataTree.processTxn(DataTree.java:807)\n        at org.apache.zookeeper.server.persistence.FileTxnSnapLog.processTransaction(FileTxnSnapLog.java:198)\n        at org.apache.zookeeper.server.persistence.FileTxnSnapLog.restore(FileTxnSnapLog.java:151)\n        at org.apache.zookeeper.server.ZKDatabase.loadDataBase(ZKDatabase.java:223)\n        at org.apache.zookeeper.server.ZooKeeperServer.loadData(ZooKeeperServer.java:250)\n        at org.apache.zookeeper.server.ZooKeeperServer.startdata(ZooKeeperServer.java:377)\n        at org.apache.zookeeper.server.NIOServerCnxnFactory.startup(NIOServerCnxnFactory.java:122)\n        at org.apache.zookeeper.server.ZooKeeperServerMain.runFromConfig(ZooKeeperServerMain.java:112)\n        at org.apache.zookeeper.server.ZooKeeperServerMain.initializeAndRun(ZooKeeperServerMain.java:86)\n        at org.apache.zookeeper.server.ZooKeeperServerMain.main(ZooKeeperServerMain.java:52)\n        at org.apache.zookeeper.server.quorum.QuorumPeerMain.initializeAndRun(QuorumPeerMain.java:116)\n        at org.apache.zookeeper.server.quorum.QuorumPeerMain.main(QuorumPeerMain.java:78)"
    },
    {
        "filename": "ZOOKEEPER-2297.json",
        "description": "NPE is thrown while creating \"key manager\" and \"trust manager\" , even though the zk setup is in non-secure mode\n\nbq. 2015-10-19 12:54:12,278 [myid:2] - ERROR [ProcessThread(sid:2 cport:-1)::X509AuthenticationProvider@78] - Failed to create key manager\n\nbq. org.apache.zookeeper.common.X509Exception$KeyManagerException: java.lang.NullPointerException\n\nat org.apache.zookeeper.common.X509Util.createKeyManager(X509Util.java:129)\n\nat org.apache.zookeeper.server.auth.X509AuthenticationProvider.<init>(X509AuthenticationProvider.java:75)\n\nat org.apache.zookeeper.server.auth.ProviderRegistry.initialize(ProviderRegistry.java:42)\n\nat org.apache.zookeeper.server.auth.ProviderRegistry.getProvider(ProviderRegistry.java:68)\n\nat org.apache.zookeeper.server.PrepRequestProcessor.fixupACL(PrepRequestProcessor.java:952)\n\nat org.apache.zookeeper.server.PrepRequestProcessor.pRequest2Txn(PrepRequestProcessor.java:379)\n\nat org.apache.zookeeper.server.PrepRequestProcessor.pRequest(PrepRequestProcessor.java:716)\n\nat org.apache.zookeeper.server.PrepRequestProcessor.run(PrepRequestProcessor.java:144)\n\nCaused by: java.lang.NullPointerException\n\nat org.apache.zookeeper.common.X509Util.createKeyManager(X509Util.java:113)\n\n... 7 more\n\nbq. 2015-10-19 12:54:12,279 [myid:2] - ERROR [ProcessThread(sid:2 cport:-1)::X509AuthenticationProvider@90] - Failed to create trust manager\n\nbq.  org.apache.zookeeper.common.X509Exception$TrustManagerException: java.lang.NullPointerException\n\nat org.apache.zookeeper.common.X509Util.createTrustManager(X509Util.java:158)\n\nat org.apache.zookeeper.server.auth.X509AuthenticationProvider.<init>(X509AuthenticationProvider.java:87)\n\nat org.apache.zookeeper.server.auth.ProviderRegistry.initialize(ProviderRegistry.java:42)\n\nat org.apache.zookeeper.server.auth.ProviderRegistry.getProvider(ProviderRegistry.java:68)\n\nat org.apache.zookeeper.server.PrepRequestProcessor.fixupACL(PrepRequestProcessor.java:952)\n\nat org.apache.zookeeper.server.PrepRequestProcessor.pRequest2Txn(PrepRequestProcessor.java:379)\n\nat org.apache.zookeeper.server.PrepRequestProcessor.pRequest(PrepRequestProcessor.java:716)\n\nat org.apache.zookeeper.server.PrepRequestProcessor.run(PrepRequestProcessor.java:144)\n\nCaused by: java.lang.NullPointerException\n\nat org.apache.zookeeper.common.X509Util.createTrustManager(X509Util.java:143)\n\n... 7 more\n\n"
    },
    {
        "filename": "ZOOKEEPER-1264.json",
        "description": "The FollowerResyncConcurrencyTest test is failing intermittently. \n\nsaw the following on 3.4:\n{noformat}\njunit.framework.AssertionFailedError: Should have same number of\nephemerals in both followers expected:<11741> but was:<14001>\n       at org.apache.zookeeper.test.FollowerResyncConcurrencyTest.verifyState(FollowerResyncConcurrencyTest.java:400)\n       at org.apache.zookeeper.test.FollowerResyncConcurrencyTest.testResyncBySnapThenDiffAfterFollowerCrashes(FollowerResyncConcurrencyTest.java:196)\n       at org.apache.zookeeper.JUnit4ZKTestRunner$LoggedInvokeMethod.evaluate(JUnit4ZKTestRunner.java:52)\n{noformat}\n"
    },
    {
        "filename": "ZOOKEEPER-2808.json",
        "description": "When Zeus start up, it will create DataTree instance, in which the empty config znode is created with READ_UNSAFE acl, the acl will be stored in a map with index 1. Then it's going to load the snapshot from disk, the nodes and acl map will be cleared, but the reconfig znode is still reference to acl index 1. The reconfig znode will be reused, so actually it may reference to a different ACL stored in the snasphot. After leader-follower syncing, the reconfig znode will be added back again (if it doesn't exist), which will remove the previous reference to ACL index 1, if the index 1 has 0 reference it will be removed from the ACL map, which could cause that ACL un-usable, and that znode will not be readable.\n\nError logs related:\n-----------------------------\n2017-06-12 12:02:21,443 [myid:2] - ERROR [CommitProcWorkThread-14:DataTree@249] - ERROR: ACL not available for long 1\n2017-06-12 12:02:21,444 [myid:2] - ERROR [CommitProcWorkThread-14:FinalRequestProcessor@567] - Failed to process sessionid:0x201035cc882002d type:getChildren cxid:0x1 zxid:0xfffffffffffffffe txntype:unknown reqpath:n/a\njava.lang.RuntimeException: Failed to fetch acls for 1\n        at org.apache.zookeeper.server.DataTree.convertLong(DataTree.java:250)\n        at org.apache.zookeeper.server.DataTree.getACL(DataTree.java:799)\n        at org.apache.zookeeper.server.ZKDatabase.getACL(ZKDatabase.java:574)\n        at org.apache.zookeeper.server.FinalRequestProcessor.processRequest(FinalRequestProcessor.java:463)\n        at org.apache.zookeeper.server.quorum.CommitProcessor$CommitWorkRequest.doWork(CommitProcessor.java:439)\n        at org.apache.zookeeper.server.WorkerService$ScheduledWorkRequest.run(WorkerService.java:151)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n        at java.lang.Thread.run(Thread.java:745)"
    },
    {
        "filename": "ZOOKEEPER-2982.json",
        "description": "ZOOKEEPER-1506 fixed a DNS resolution issue in 3.4.  Some portions of the fix haven't yet been ported to 3.5.\r\n\r\nTo recap the outstanding problem in 3.5, if a given ZK server is started before all peer addresses are resolvable, that server may cache a negative lookup result and forever fail to resolve the address.    For example, deploying ZK 3.5 to Kubernetes using a StatefulSet plus a Service (headless) may fail because the DNS records are created lazily.\r\n\r\n{code}\r\n2018-02-18 09:11:22,583 [myid:0] - WARN  [QuorumPeer[myid=0](plain=/0:0:0:0:0:0:0:0:2181)(secure=disabled):Follower@95] - Exception when following the leader\r\njava.net.UnknownHostException: zk-2.zk.default.svc.cluster.local\r\n        at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184)\r\n        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n        at java.net.Socket.connect(Socket.java:589)\r\n        at org.apache.zookeeper.server.quorum.Learner.sockConnect(Learner.java:227)\r\n        at org.apache.zookeeper.server.quorum.Learner.connectToLeader(Learner.java:256)\r\n        at org.apache.zookeeper.server.quorum.Follower.followLeader(Follower.java:76)\r\n        at org.apache.zookeeper.server.quorum.QuorumPeer.run(QuorumPeer.java:1133)\r\n{code}\r\n\r\nIn the above example, the address `zk-2.zk.default.svc.cluster.local` was not resolvable when the server started, but became resolvable shortly thereafter.    The server should eventually succeed but doesn't."
    },
    {
        "filename": "ZOOKEEPER-1179.json",
        "description": "When calling a 4-letter-word to a server configured to use NettyServerCnxnFactory, the factory will not properly cancel all the keys and close the socket after sending the response for the 4lw. The close request will throw this exception, and the thread will not shut down:\n2011-09-13 12:14:17,546 - WARN  [New I/O server worker #1-1:NettyServerCnxnFactory$CnxnChannelHandler@117] - Exception caught [id: 0x009300cc, /1.1.1.1:38542 => /139.172.114.138:2181] EXCEPTION: java.io.IOException: A non-blocking socket operation could not be completed immediately\njava.io.IOException: A non-blocking socket operation could not be completed immediately\n\tat sun.nio.ch.SocketDispatcher.close0(Native Method)\n\tat sun.nio.ch.SocketDispatcher.preClose(SocketDispatcher.java:44)\n\tat sun.nio.ch.SocketChannelImpl.implCloseSelectableChannel(SocketChannelImpl.java:684)\n\tat java.nio.channels.spi.AbstractSelectableChannel.implCloseChannel(AbstractSelectableChannel.java:201)\n\tat java.nio.channels.spi.AbstractInterruptibleChannel.close(AbstractInterruptibleChannel.java:97)\n\tat org.jboss.netty.channel.socket.nio.NioWorker.close(NioWorker.java:593)\n\tat org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.handleAcceptedSocket(NioServerSocketPipelineSink.java:119)\n\tat org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.eventSunk(NioServerSocketPipelineSink.java:76)\n\tat org.jboss.netty.channel.Channels.close(Channels.java:720)\n\tat org.jboss.netty.channel.AbstractChannel.close(AbstractChannel.java:208)\n\tat org.apache.zookeeper.server.NettyServerCnxn.close(NettyServerCnxn.java:116)\n\tat org.apache.zookeeper.server.NettyServerCnxn.cleanupWriterSocket(NettyServerCnxn.java:241)\n\tat org.apache.zookeeper.server.NettyServerCnxn.access$0(NettyServerCnxn.java:231)\n\tat org.apache.zookeeper.server.NettyServerCnxn$CommandThread.run(NettyServerCnxn.java:314)\n\tat org.apache.zookeeper.server.NettyServerCnxn$CommandThread.start(NettyServerCnxn.java:305)\n\tat org.apache.zookeeper.server.NettyServerCnxn.checkFourLetterWord(NettyServerCnxn.java:674)\n\tat org.apache.zookeeper.server.NettyServerCnxn.receiveMessage(NettyServerCnxn.java:791)\n\tat org.apache.zookeeper.server.NettyServerCnxnFactory$CnxnChannelHandler.processMessage(NettyServerCnxnFactory.java:217)\n\tat org.apache.zookeeper.server.NettyServerCnxnFactory$CnxnChannelHandler.messageReceived(NettyServerCnxnFactory.java:141)\n\tat org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:274)\n\tat org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:261)\n\tat org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:350)\n\tat org.jboss.netty.channel.socket.nio.NioWorker.processSelectedKeys(NioWorker.java:281)\n\tat org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:201)\n\tat org.jboss.netty.util.internal.IoWorkerRunnable.run(IoWorkerRunnable.java:46)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n\tat java.lang.Thread.run(Thread.java:619)"
    },
    {
        "filename": "ZOOKEEPER-2581.json",
        "description": "Not handled NullPointerException while creating key manager and trustManager:-\n\n\n2016-09-14 13:35:23,488 [myid:1] - ERROR [CommitProcWorkThread-1:X509AuthenticationProvider@78] - Failed to create key manager\norg.apache.zookeeper.common.X509Exception$KeyManagerException: java.lang.NullPointerException\n\tat org.apache.zookeeper.common.X509Util.createKeyManager(X509Util.java:129)\n\tat org.apache.zookeeper.server.auth.X509AuthenticationProvider.<init>(X509AuthenticationProvider.java:75)\n\tat org.apache.zookeeper.server.auth.ProviderRegistry.initialize(ProviderRegistry.java:42)\n\tat org.apache.zookeeper.server.auth.ProviderRegistry.getProvider(ProviderRegistry.java:68)\n\tat org.apache.zookeeper.server.PrepRequestProcessor.checkACL(PrepRequestProcessor.java:319)\n\tat org.apache.zookeeper.server.FinalRequestProcessor.processRequest(FinalRequestProcessor.java:324)\n\tat org.apache.zookeeper.server.quorum.CommitProcessor$CommitWorkRequest.doWork(CommitProcessor.java:296)\n\tat org.apache.zookeeper.server.WorkerService$ScheduledWorkRequest.run(WorkerService.java:162)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.NullPointerException\n\tat org.apache.zookeeper.common.X509Util.createKeyManager(X509Util.java:113)\n\t... 10 more\n2016-09-14 13:35:23,489 [myid:1] - ERROR [CommitProcWorkThread-1:X509AuthenticationProvider@90] - Failed to create trust manager\norg.apache.zookeeper.common.X509Exception$TrustManagerException: java.lang.NullPointerException\n\tat org.apache.zookeeper.common.X509Util.createTrustManager(X509Util.java:158)\n\tat org.apache.zookeeper.server.auth.X509AuthenticationProvider.<init>(X509AuthenticationProvider.java:87)\n\tat org.apache.zookeeper.server.auth.ProviderRegistry.initialize(ProviderRegistry.java:42)\n\tat org.apache.zookeeper.server.auth.ProviderRegistry.getProvider(ProviderRegistry.java:68)\n\tat org.apache.zookeeper.server.PrepRequestProcessor.checkACL(PrepRequestProcessor.java:319)\n\tat org.apache.zookeeper.server.FinalRequestProcessor.processRequest(FinalRequestProcessor.java:324)\n\tat org.apache.zookeeper.server.quorum.CommitProcessor$CommitWorkRequest.doWork(CommitProcessor.java:296)\n\tat org.apache.zookeeper.server.WorkerService$ScheduledWorkRequest.run(WorkerService.java:162)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.NullPointerException\n\tat org.apache.zookeeper.common.X509Util.createTrustManager(X509Util.java:143)\n\t... 10 more"
    },
    {
        "filename": "ZOOKEEPER-1870.json",
        "description": "I'm seeing lots of the following failure. Seems like a flakey test (passes every so often).\n\n{noformat}\njunit.framework.AssertionFailedError: client could not connect to reestablished quorum: giving up after 30+ seconds.\n\tat org.apache.zookeeper.test.ReconfigTest.testNormalOperation(ReconfigTest.java:143)\n\tat org.apache.zookeeper.server.quorum.StandaloneDisabledTest.startSingleServerTest(StandaloneDisabledTest.java:75)\n\tat org.apache.zookeeper.JUnit4ZKTestRunner$LoggedInvokeMethod.evaluate(JUnit4ZKTestRunner.java:52)\n{noformat}\n\nI've found 3 problems:\n\n1. QuorumCnxManager.Listener.run() leaks the socket depending on when the shutdown flag gets set.\n2. QuorumCnxManager.halt() doesn't wait for the listener to terminate.\n3. QuorumPeer.shuttingDownLE flag doesn't get reset when restarting the leader election.\n"
    },
    {
        "filename": "ZOOKEEPER-2247.json",
        "description": "Zookeeper service becomes unavailable when leader fails to write transaction log. Bellow are the exceptions\n{code}\n2015-08-14 15:41:18,556 [myid:100] - ERROR [SyncThread:100:ZooKeeperCriticalThread@48] - Severe unrecoverable error, from thread : SyncThread:100\njava.io.IOException: Input/output error\n\tat sun.nio.ch.FileDispatcherImpl.force0(Native Method)\n\tat sun.nio.ch.FileDispatcherImpl.force(FileDispatcherImpl.java:76)\n\tat sun.nio.ch.FileChannelImpl.force(FileChannelImpl.java:376)\n\tat org.apache.zookeeper.server.persistence.FileTxnLog.commit(FileTxnLog.java:331)\n\tat org.apache.zookeeper.server.persistence.FileTxnSnapLog.commit(FileTxnSnapLog.java:380)\n\tat org.apache.zookeeper.server.ZKDatabase.commit(ZKDatabase.java:563)\n\tat org.apache.zookeeper.server.SyncRequestProcessor.flush(SyncRequestProcessor.java:178)\n\tat org.apache.zookeeper.server.SyncRequestProcessor.run(SyncRequestProcessor.java:113)\n2015-08-14 15:41:18,559 [myid:100] - INFO  [SyncThread:100:ZooKeeperServer$ZooKeeperServerListenerImpl@500] - Thread SyncThread:100 exits, error code 1\n2015-08-14 15:41:18,559 [myid:100] - INFO  [SyncThread:100:ZooKeeperServer@523] - shutting down\n2015-08-14 15:41:18,560 [myid:100] - INFO  [SyncThread:100:SessionTrackerImpl@232] - Shutting down\n2015-08-14 15:41:18,560 [myid:100] - INFO  [SyncThread:100:LeaderRequestProcessor@77] - Shutting down\n2015-08-14 15:41:18,560 [myid:100] - INFO  [SyncThread:100:PrepRequestProcessor@1035] - Shutting down\n2015-08-14 15:41:18,560 [myid:100] - INFO  [SyncThread:100:ProposalRequestProcessor@88] - Shutting down\n2015-08-14 15:41:18,561 [myid:100] - INFO  [SyncThread:100:CommitProcessor@356] - Shutting down\n2015-08-14 15:41:18,561 [myid:100] - INFO  [CommitProcessor:100:CommitProcessor@191] - CommitProcessor exited loop!\n2015-08-14 15:41:18,562 [myid:100] - INFO  [SyncThread:100:Leader$ToBeAppliedRequestProcessor@915] - Shutting down\n2015-08-14 15:41:18,562 [myid:100] - INFO  [SyncThread:100:FinalRequestProcessor@646] - shutdown of request processor complete\n2015-08-14 15:41:18,562 [myid:100] - INFO  [SyncThread:100:SyncRequestProcessor@191] - Shutting down\n2015-08-14 15:41:18,563 [myid:100] - INFO  [ProcessThread(sid:100 cport:-1)::PrepRequestProcessor@159] - PrepRequestProcessor exited loop!\n{code}\nAfter this exception Leader server still remains leader. After this non recoverable exception the leader should go down and let other followers become leader.\n"
    }
]