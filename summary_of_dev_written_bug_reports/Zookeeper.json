[
    {
        "filename": "ZOOKEEPER-1864.json",
        "creation_time": "2014-01-20T06:09:53.000+0000",
        "bug_report": {
            "BugID": "ZOOKEEPER-1864",
            "Title": "quorumVerifier is null when creating a QuorumPeerConfig from parsing a Properties object",
            "Description": "An NPE occurs when running a quorum peer with a configuration built from a Properties object due to incomplete parsing in QuorumPeerConfig.",
            "StackTrace": [
                "java.lang.NullPointerException",
                "at org.apache.zookeeper.server.quorum.QuorumPeer.setQuorumVerifier(QuorumPeer.java:1320)",
                "at org.apache.zookeeper.server.quorum.QuorumPeerMain.runFromConfig(QuorumPeerMain.java:156)",
                "at org.apache.curator.test.TestingZooKeeperServer$1.run(TestingZooKeeperServer.java:134)",
                "at java.lang.Thread.run(Thread.java:722)"
            ],
            "StepsToReproduce": [
                "Use ZK 3.5.0 with curator-test 2.3.0.",
                "Build a QuorumPeerConfig from a Properties object.",
                "Run the quorum peer using that configuration."
            ],
            "ExpectedBehavior": "The quorum peer should run without throwing a NullPointerException.",
            "ObservedBehavior": "A NullPointerException is thrown when trying to set the quorum verifier.",
            "Resolution": "Fixed"
        }
    },
    {
        "filename": "ZOOKEEPER-2213.json",
        "creation_time": "2015-06-10T15:29:23.000+0000",
        "bug_report": {
            "BugID": "ZOOKEEPER-2213",
            "Title": "Empty path in Set crashes server and prevents restart",
            "Description": "An empty path in the Set operation crashes the ZooKeeper server and prevents it from restarting.",
            "StackTrace": [
                "java.lang.IllegalArgumentException: Invalid path",
                "at org.apache.zookeeper.common.PathTrie.findMaxPrefix(PathTrie.java:259)",
                "at org.apache.zookeeper.server.DataTree.getMaxPrefixWithQuota(DataTree.java:634)",
                "at org.apache.zookeeper.server.DataTree.setData(DataTree.java:616)",
                "at org.apache.zookeeper.server.DataTree.processTxn(DataTree.java:807)",
                "at org.apache.zookeeper.server.ZKDatabase.processTxn(ZKDatabase.java:329)",
                "at org.apache.zookeeper.server.ZooKeeperServer.processTxn(ZooKeeperServer.java:965)",
                "at org.apache.zookeeper.server.FinalRequestProcessor.processRequest(FinalRequestProcessor.java:116)",
                "at org.apache.zookeeper.server.SyncRequestProcessor.flush(SyncRequestProcessor.java:167)",
                "at org.apache.zookeeper.server.SyncRequestProcessor.run(SyncRequestProcessor.java:101)"
            ],
            "StepsToReproduce": [
                "Connect to ZooKeeper server using zk.Connect with an empty path.",
                "Attempt to set data on the empty path."
            ],
            "ExpectedBehavior": "The server should handle the empty path gracefully without crashing.",
            "ObservedBehavior": "The server crashes with an IllegalArgumentException and cannot restart.",
            "Resolution": "Fixed"
        }
    },
    {
        "filename": "ZOOKEEPER-2297.json",
        "creation_time": "2015-10-19T11:38:58.000+0000",
        "bug_report": {
            "BugID": "ZOOKEEPER-2297",
            "Title": "NPE is thrown while creating \"key manager\" and \"trust manager\"",
            "Description": "A NullPointerException (NPE) is thrown during the creation of key and trust managers in a non-secure ZooKeeper setup.",
            "StackTrace": [
                "org.apache.zookeeper.common.X509Exception$KeyManagerException: java.lang.NullPointerException",
                "at org.apache.zookeeper.common.X509Util.createKeyManager(X509Util.java:129)",
                "at org.apache.zookeeper.server.auth.X509AuthenticationProvider.<init>(X509AuthenticationProvider.java:75)",
                "at org.apache.zookeeper.server.auth.ProviderRegistry.initialize(ProviderRegistry.java:42)",
                "at org.apache.zookeeper.server.auth.ProviderRegistry.getProvider(ProviderRegistry.java:68)",
                "at org.apache.zookeeper.server.PrepRequestProcessor.fixupACL(PrepRequestProcessor.java:952)",
                "at org.apache.zookeeper.server.PrepRequestProcessor.pRequest2Txn(PrepRequestProcessor.java:379)",
                "at org.apache.zookeeper.server.PrepRequestProcessor.pRequest(PrepRequestProcessor.java:716)",
                "at org.apache.zookeeper.server.PrepRequestProcessor.run(PrepRequestProcessor.java:144)",
                "Caused by: java.lang.NullPointerException",
                "at org.apache.zookeeper.common.X509Util.createKeyManager(X509Util.java:113)",
                "... 7 more"
            ],
            "StepsToReproduce": null,
            "ExpectedBehavior": "The system should successfully create key and trust managers without throwing exceptions.",
            "ObservedBehavior": "A NullPointerException is thrown when attempting to create key and trust managers.",
            "Resolution": "Fixed"
        }
    },
    {
        "filename": "ZOOKEEPER-1264.json",
        "creation_time": "2011-10-28T04:23:28.000+0000",
        "bug_report": {
            "BugID": "ZOOKEEPER-1264",
            "Title": "FollowerResyncConcurrencyTest failing intermittently",
            "Description": "The FollowerResyncConcurrencyTest test is failing intermittently, indicating a mismatch in the expected and actual number of ephemerals in both followers.",
            "StackTrace": [
                "junit.framework.AssertionFailedError: Should have same number of ephemerals in both followers expected:<11741> but was:<14001>",
                "at org.apache.zookeeper.test.FollowerResyncConcurrencyTest.verifyState(FollowerResyncConcurrencyTest.java:400)",
                "at org.apache.zookeeper.test.FollowerResyncConcurrencyTest.testResyncBySnapThenDiffAfterFollowerCrashes(FollowerResyncConcurrencyTest.java:196)",
                "at org.apache.zookeeper.JUnit4ZKTestRunner$LoggedInvokeMethod.evaluate(JUnit4ZKTestRunner.java:52)"
            ],
            "StepsToReproduce": null,
            "ExpectedBehavior": "The number of ephemerals in both followers should be the same.",
            "ObservedBehavior": "The test fails with a mismatch in the expected and actual number of ephemerals.",
            "Resolution": "Fixed"
        }
    },
    {
        "filename": "ZOOKEEPER-2808.json",
        "creation_time": "2017-06-15T17:46:22.000+0000",
        "bug_report": {
            "BugID": "ZOOKEEPER-2808",
            "Title": "ACL with index 1 might be removed if it's only being used once",
            "Description": "When Zeus starts up, it creates a DataTree instance with an empty config znode and a READ_UNSAFE ACL. During snapshot loading, the ACL map is cleared, but the reconfig znode still references an ACL index that may no longer be valid, leading to errors when accessing the znode.",
            "StackTrace": [
                "java.lang.RuntimeException: Failed to fetch acls for 1",
                "at org.apache.zookeeper.server.DataTree.convertLong(DataTree.java:250)",
                "at org.apache.zookeeper.server.DataTree.getACL(DataTree.java:799)",
                "at org.apache.zookeeper.server.ZKDatabase.getACL(ZKDatabase.java:574)",
                "at org.apache.zookeeper.server.FinalRequestProcessor.processRequest(FinalRequestProcessor.java:463)",
                "at org.apache.zookeeper.server.quorum.CommitProcessor$CommitWorkRequest.doWork(CommitProcessor.java:439)",
                "at org.apache.zookeeper.server.WorkerService$ScheduledWorkRequest.run(WorkerService.java:151)",
                "at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                "at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                "at java.lang.Thread.run(Thread.java:745)"
            ],
            "StepsToReproduce": null,
            "ExpectedBehavior": "The ACL for the znode should remain valid and accessible after the snapshot loading process.",
            "ObservedBehavior": "The ACL becomes unavailable, resulting in errors when attempting to access the znode.",
            "Resolution": "Fixed"
        }
    },
    {
        "filename": "ZOOKEEPER-2982.json",
        "creation_time": "2018-02-19T19:28:06.000+0000",
        "bug_report": {
            "BugID": "ZOOKEEPER-2982",
            "Title": "Re-try DNS hostname -> IP resolution",
            "Description": "A DNS resolution issue in ZooKeeper 3.5 where a server may cache a negative lookup result if started before all peer addresses are resolvable, leading to connection failures.",
            "StackTrace": [
                "java.net.UnknownHostException: zk-2.zk.default.svc.cluster.local",
                "at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:184)",
                "at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)",
                "at java.net.Socket.connect(Socket.java:589)",
                "at org.apache.zookeeper.server.quorum.Learner.sockConnect(Learner.java:227)",
                "at org.apache.zookeeper.server.quorum.Learner.connectToLeader(Learner.java:256)",
                "at org.apache.zookeeper.server.quorum.Follower.followLeader(Follower.java:76)",
                "at org.apache.zookeeper.server.quorum.QuorumPeer.run(QuorumPeer.java:1133)"
            ],
            "StepsToReproduce": [
                "Deploy ZK 3.5 to Kubernetes using a StatefulSet plus a Service (headless).",
                "Start a ZK server before all peer addresses are resolvable."
            ],
            "ExpectedBehavior": "The server should eventually succeed in resolving the address.",
            "ObservedBehavior": "The server fails to resolve the address and continues to fail indefinitely.",
            "Resolution": "Fixed"
        }
    },
    {
        "filename": "ZOOKEEPER-1179.json",
        "creation_time": "2011-09-13T16:20:56.000+0000",
        "bug_report": {
            "BugID": "ZOOKEEPER-1179",
            "Title": "NettyServerCnxn does not properly close socket on 4 letter word requests",
            "Description": "When calling a 4-letter-word to a server configured to use NettyServerCnxnFactory, the factory will not properly cancel all the keys and close the socket after sending the response for the 4lw.",
            "StackTrace": [
                "java.io.IOException: A non-blocking socket operation could not be completed immediately",
                "\tat sun.nio.ch.SocketDispatcher.close0(Native Method)",
                "\tat sun.nio.ch.SocketDispatcher.preClose(SocketDispatcher.java:44)",
                "\tat sun.nio.ch.SocketChannelImpl.implCloseSelectableChannel(SocketChannelImpl.java:684)",
                "\tat java.nio.channels.spi.AbstractSelectableChannel.implCloseChannel(AbstractSelectableChannel.java:201)",
                "\tat java.nio.channels.spi.AbstractInterruptibleChannel.close(AbstractInterruptibleChannel.java:97)",
                "\tat org.jboss.netty.channel.socket.nio.NioWorker.close(NioWorker.java:593)",
                "\tat org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.handleAcceptedSocket(NioServerSocketPipelineSink.java:119)",
                "\tat org.jboss.netty.channel.socket.nio.NioServerSocketPipelineSink.eventSunk(NioServerSocketPipelineSink.java:76)",
                "\tat org.jboss.netty.channel.Channels.close(Channels.java:720)",
                "\tat org.apache.zookeeper.server.NettyServerCnxn.close(NettyServerCnxn.java:116)",
                "\tat org.apache.zookeeper.server.NettyServerCnxn.cleanupWriterSocket(NettyServerCnxn.java:241)",
                "\tat org.apache.zookeeper.server.NettyServerCnxn$CommandThread.run(NettyServerCnxn.java:314)"
            ],
            "StepsToReproduce": null,
            "ExpectedBehavior": "The socket should close properly after handling the 4-letter-word request.",
            "ObservedBehavior": "The close request throws an exception, and the thread does not shut down.",
            "Resolution": "Fixed"
        }
    },
    {
        "filename": "ZOOKEEPER-2581.json",
        "creation_time": "2016-09-14T07:12:58.000+0000",
        "bug_report": {
            "BugID": "ZOOKEEPER-2581",
            "Title": "Not handled NullPointerException while creating key manager and trustManager",
            "Description": "The system fails to handle a NullPointerException during the creation of key manager and trust manager in the ZooKeeper server.",
            "StackTrace": [
                "org.apache.zookeeper.common.X509Exception$KeyManagerException: java.lang.NullPointerException",
                "at org.apache.zookeeper.common.X509Util.createKeyManager(X509Util.java:129)",
                "at org.apache.zookeeper.server.auth.X509AuthenticationProvider.<init>(X509AuthenticationProvider.java:75)",
                "at org.apache.zookeeper.server.auth.ProviderRegistry.initialize(ProviderRegistry.java:42)",
                "at org.apache.zookeeper.server.auth.ProviderRegistry.getProvider(ProviderRegistry.java:68)",
                "at org.apache.zookeeper.server.PrepRequestProcessor.checkACL(PrepRequestProcessor.java:319)",
                "at org.apache.zookeeper.server.FinalRequestProcessor.processRequest(FinalRequestProcessor.java:324)",
                "at org.apache.zookeeper.server.quorum.CommitProcessor$CommitWorkRequest.doWork(CommitProcessor.java:296)",
                "at org.apache.zookeeper.server.WorkerService$ScheduledWorkRequest.run(WorkerService.java:162)",
                "at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)",
                "at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)",
                "at java.lang.Thread.run(Thread.java:745)",
                "Caused by: java.lang.NullPointerException",
                "at org.apache.zookeeper.common.X509Util.createKeyManager(X509Util.java:113)",
                "Caused by: java.lang.NullPointerException",
                "at org.apache.zookeeper.common.X509Util.createTrustManager(X509Util.java:143)"
            ],
            "StepsToReproduce": null,
            "ExpectedBehavior": "The system should successfully create key manager and trust manager without throwing exceptions.",
            "ObservedBehavior": "The system throws a NullPointerException when attempting to create key manager and trust manager.",
            "Resolution": "Fixed"
        }
    },
    {
        "filename": "ZOOKEEPER-1870.json",
        "creation_time": "2014-01-28T18:45:43.000+0000",
        "bug_report": {
            "BugID": "ZOOKEEPER-1870",
            "Title": "flakey test in StandaloneDisabledTest.startSingleServerTest",
            "Description": "The test fails intermittently with an assertion error indicating that the client could not connect to the reestablished quorum after 30 seconds.",
            "StackTrace": [
                "junit.framework.AssertionFailedError: client could not connect to reestablished quorum: giving up after 30+ seconds.",
                "at org.apache.zookeeper.test.ReconfigTest.testNormalOperation(ReconfigTest.java:143)",
                "at org.apache.zookeeper.server.quorum.StandaloneDisabledTest.startSingleServerTest(StandaloneDisabledTest.java:75)",
                "at org.apache.zookeeper.JUnit4ZKTestRunner$LoggedInvokeMethod.evaluate(JUnit4ZKTestRunner.java:52)"
            ],
            "StepsToReproduce": null,
            "ExpectedBehavior": "The test should consistently pass without connection issues to the quorum.",
            "ObservedBehavior": "The test fails intermittently, indicating a potential issue with socket management or quorum connection.",
            "Resolution": "Fixed"
        }
    },
    {
        "filename": "ZOOKEEPER-2247.json",
        "creation_time": "2015-08-14T13:13:18.000+0000",
        "bug_report": {
            "BugID": "ZOOKEEPER-2247",
            "Title": "Zookeeper service becomes unavailable when leader fails to write transaction log",
            "Description": "The Zookeeper service becomes unavailable when the leader fails to write the transaction log, leading to unrecoverable errors.",
            "StackTrace": [
                "java.io.IOException: Input/output error",
                "at sun.nio.ch.FileDispatcherImpl.force0(Native Method)",
                "at sun.nio.ch.FileDispatcherImpl.force(FileDispatcherImpl.java:76)",
                "at sun.nio.ch.FileChannelImpl.force(FileChannelImpl.java:376)",
                "at org.apache.zookeeper.server.persistence.FileTxnLog.commit(FileTxnLog.java:331)",
                "at org.apache.zookeeper.server.persistence.FileTxnSnapLog.commit(FileTxnSnapLog.java:380)",
                "at org.apache.zookeeper.server.ZKDatabase.commit(ZKDatabase.java:563)",
                "at org.apache.zookeeper.server.SyncRequestProcessor.flush(SyncRequestProcessor.java:178)",
                "at org.apache.zookeeper.server.SyncRequestProcessor.run(SyncRequestProcessor.java:113)"
            ],
            "StepsToReproduce": null,
            "ExpectedBehavior": "The leader should go down and allow other followers to become the leader after a non-recoverable exception.",
            "ObservedBehavior": "The leader server remains active despite the non-recoverable exception.",
            "Resolution": "Fixed"
        }
    }
]