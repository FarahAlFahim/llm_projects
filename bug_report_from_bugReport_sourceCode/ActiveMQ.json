[
    {
        "filename": "AMQ-6548.json",
        "creation_time": "2016-12-21T12:04:12.000+0000",
        "bug_report": {
            "BugID": "AMQ-6548",
            "Title": "EJB Invocation Failure During Message Processing in ActiveMQ",
            "Description": "When the EJB component is shutting down, it continues to consume messages, leading to an EJBInvocationException. This occurs in the context of a message-driven bean (MDB) that is expected to stop processing messages gracefully during shutdown.",
            "StackTrace": [
                "2016-12-15 16:12:58,831 ERROR [org.jboss.as.ejb3.invocation.processInvocation] (default-threads - 23) WFLYEJB0034: EJB Invocation failed on component test.test.mdb for method public void test.test.onMessage(javax.jms.Message): org.jboss.as.ejb3.component.EJBComponentUnavailableException: WFLYEJB0421: Invocation cannot proceed as component is shutting down",
                "at org.jboss.as.ejb3.component.interceptors.ShutDownInterceptorFactory$1.processInvocation(ShutDownInterceptorFactory.java:59)",
                "at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)",
                "at org.jboss.as.ejb3.deployment.processors.EjbSuspendInterceptor.processInvocation(EjbSuspendInterceptor.java:53)",
                "at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)",
                "at org.jboss.as.ejb3.component.interceptors.LoggingInterceptor.processInvocation(LoggingInterceptor.java:66)",
                "at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)",
                "at org.jboss.as.ee.component.NamespaceContextInterceptor.processInvocation(NamespaceContextInterceptor.java:50)",
                "at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)",
                "at org.jboss.as.ejb3.component.interceptors.AdditionalSetupInterceptor.processInvocation(AdditionalSetupInterceptor.java:54)",
                "at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)",
                "at org.jboss.as.ejb3.component.messagedriven.MessageDrivenComponentDescription$5$1.processInvocation(MessageDrivenComponentDescription.java:213)",
                "at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)",
                "at org.jboss.invocation.ContextClassLoaderInterceptor.processInvocation(ContextClassLoaderInterceptor.java:64)",
                "at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)",
                "at org.jboss.invocation.InterceptorContext.run(InterceptorContext.java:356)",
                "at org.wildfly.security.manager.WildFlySecurityManager.doChecked(WildFlySecurityManager.java:634)",
                "at org.jboss.invocation.AccessCheckingInterceptor.processInvocation(AccessCheckingInterceptor.java:61)",
                "at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)",
                "at org.jboss.invocation.InterceptorContext.run(InterceptorContext.java:356)",
                "at org.jboss.invocation.PrivilegedWithCombinerInterceptor.processInvocation(PrivilegedWithCombinerInterceptor.java:80)",
                "at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)",
                "at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61)",
                "at org.jboss.as.ee.component.ViewService$View.invoke(ViewService.java:195)",
                "at org.jboss.as.ee.component.ViewDescription$1.processInvocation(ViewDescription.java:185)",
                "at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:340)",
                "at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61)",
                "at org.jboss.as.ee.component.ProxyInvocationHandler.invoke(ProxyInvocationHandler.java:73)",
                "at test.test$$$view19.onMessage(Unknown Source)",
                "at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                "at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                "at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                "at java.lang.reflect.Method.invoke(Method.java:498)",
                "at org.jboss.as.ejb3.inflow.MessageEndpointInvocationHandler.doInvoke(MessageEndpointInvocationHandler.java:139)",
                "at org.jboss.as.ejb3.inflow.AbstractInvocationHandler.invoke(AbstractInvocationHandler.java:73)",
                "at test.test$$$endpoint12.onMessage(Unknown Source)",
                "at org.apache.activemq.ra.MessageEndpointProxy$MessageEndpointAlive.onMessage(MessageEndpointProxy.java:123)",
                "at org.apache.activemq.ra.MessageEndpointProxy.onMessage(MessageEndpointProxy.java:64)",
                "at org.apache.activemq.ActiveMQSession.run(ActiveMQSession.java:1041)",
                "at org.apache.activemq.ra.ServerSessionImpl.run(ServerSessionImpl.java:169)",
                "at org.jboss.jca.core.workmanager.WorkWrapper.run(WorkWrapper.java:226)",
                "at org.jboss.threads.SimpleDirectExecutor.execute(SimpleDirectExecutor.java:33)",
                "at org.jboss.threads.QueueExecutor.runTask(QueueExecutor.java:808)",
                "at org.jboss.threads.QueueExecutor.access$100(QueueExecutor.java:45)",
                "at org.jboss.threads.QueueExecutor$Worker.run(QueueExecutor.java:828)",
                "at java.lang.Thread.run(Thread.java:745)",
                "at org.jboss.threads.JBossThread.run(JBossThread.java:320)"
            ],
            "StepsToReproduce": [
                "1. Deploy the EJB component as a message-driven bean (MDB) in Wildfly.",
                "2. Start the MDB and ensure it is consuming messages.",
                "3. Initiate a shutdown of the EJB component while it is still processing messages.",
                "4. Observe the logs for any EJB Invocation errors."
            ],
            "ExpectedBehavior": "The MDB should stop consuming messages gracefully without throwing exceptions during the shutdown process.",
            "ObservedBehavior": "The MDB continues to consume messages and throws an EJBComponentUnavailableException indicating that the component is shutting down.",
            "Resolution": "A fix for this issue is checked into the tree and tested."
        }
    },
    {
        "filename": "AMQ-3434.json",
        "creation_time": "2011-08-03T09:15:05.000+0000",
        "bug_report": {
            "BugID": "AMQ-3434",
            "Title": "NullPointerException in FilePendingMessageCursor during message processing",
            "Description": "A NullPointerException occurs intermittently in the FilePendingMessageCursor when attempting to load the DiskList. This issue arises during high-load scenarios, particularly when the system is under stress from multiple STOMP clients sending messages to a virtual topic queue. The stack trace indicates that the error originates from the ListIndex class while trying to load a node, which suggests that the underlying data structure may be corrupted or improperly initialized.",
            "StackTrace": [
                "java.lang.NullPointerException",
                "at org.apache.kahadb.index.ListIndex.loadNode(ListIndex.java:203)",
                "at org.apache.kahadb.index.ListIndex.load(ListIndex.java:75)",
                "at org.apache.activemq.store.kahadb.plist.PListStore$1.execute(PListStore.java:219)",
                "at org.apache.kahadb.page.Transaction.execute(Transaction.java:729)",
                "at org.apache.activemq.store.kahadb.plist.PListStore.getPList(PListStore.java:216)",
                "at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.getDiskList(FilePendingMessageCursor.java:454)",
                "at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.flushToDisk(FilePendingMessageCursor.java:432)",
                "at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.tryAddMessageLast(FilePendingMessageCursor.java:217)",
                "at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.addMessageLast(FilePendingMessageCursor.java:193)",
                "at org.apache.activemq.broker.region.Queue.sendMessage(Queue.java:1629)",
                "at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:720)",
                "at org.apache.activemq.broker.region.Queue.send(Queue.java:652)",
                "at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:379)",
                "at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:523)",
                "at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)",
                "at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)",
                "at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:304)",
                "at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)",
                "at org.apache.activemq.broker.UserIDBroker.send(UserIDBroker.java:56)",
                "at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)",
                "at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:468)",
                "at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:681)",
                "at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:316)",
                "at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:180)",
                "at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)",
                "at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:81)",
                "at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:140)",
                "at org.apache.activemq.transport.stomp.ProtocolConverter.onStompSend(ProtocolConverter.java:257)",
                "at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:178)",
                "at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:70)",
                "at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)",
                "at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:221)",
                "at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:203)",
                "at java.lang.Thread.run(Thread.java:662)"
            ],
            "StepsToReproduce": [
                "1. Set up an ActiveMQ broker with KahaDB as the persistence adapter.",
                "2. Configure a virtual topic queue and connect multiple STOMP clients to it.",
                "3. Send a high volume of messages to the virtual topic queue from the STOMP clients.",
                "4. Monitor the broker logs for any NullPointerExceptions related to FilePendingMessageCursor."
            ],
            "ExpectedBehavior": "The ActiveMQ broker should process all messages sent to the virtual topic queue without throwing exceptions, and all clients should receive the messages as expected.",
            "ObservedBehavior": "Intermittently, the broker throws a NullPointerException in the FilePendingMessageCursor, causing message processing to fail and potentially leading to message loss.",
            "Resolution": "[Provide additional details on the resolution or fix applied]"
        }
    },
    {
        "filename": "AMQ-3443.json",
        "creation_time": "2011-08-09T17:46:14.000+0000",
        "bug_report": {
            "BugID": "AMQ-3443",
            "Title": "Intermittent Unit Test Failure Due to Checkpoint Contention in KahaDB",
            "Description": "The unit test 'AMQ2149KahaDBTest.testQueueTransactionalOrderWithRestart' intermittently fails due to an IOException when attempting to create a recovery file. The error indicates that the specified file path does not exist, leading to a failure in the checkpoint process.",
            "StackTrace": [
                "2011-08-09 05:25:21,468 [Checkpoint Worker] - ERROR MessageDatabase - Checkpoint failed",
                "java.io.IOException: Cannot create recovery file. Reason: java.io.FileNotFoundException: target/testQueueTransactionalOrderWithRestart/testQueueTransactionalOrderWithRestart/KahaDB/tx-7648-1312867516460.tmp (No such file or directory)",
                "at org.apache.kahadb.util.IOExceptionSupport.create(IOExceptionSupport.java:27)",
                "at org.apache.kahadb.page.PageFile.writeBatch(PageFile.java:1002)",
                "at org.apache.kahadb.page.PageFile.flush(PageFile.java:482)",
                "at org.apache.activemq.store.kahadb.MessageDatabase.checkpointUpdate(MessageDatabase.java:1167)",
                "at org.apache.activemq.store.kahadb.MessageDatabase$10.execute(MessageDatabase.java:728)",
                "at org.apache.kahadb.page.Transaction.execute(Transaction.java:762)",
                "at org.apache.activemq.store.kahadb.MessageDatabase.checkpointCleanup(MessageDatabase.java:726)",
                "at org.apache.activemq.store.kahadb.MessageDatabase.checkpointCleanup(MessageDatabase.java:714)",
                "at org.apache.activemq.store.kahadb.MessageDatabase$3.run(MessageDatabase.java:279)",
                "Caused by: java.io.FileNotFoundException: target/testQueueTransactionalOrderWithRestart/testQueueTransactionalOrderWithRestart/KahaDB/tx-7648-1312867516460.tmp (No such file or directory)",
                "at java.io.RandomAccessFile.open(Native Method)",
                "at java.io.RandomAccessFile.<init>(RandomAccessFile.java:212)",
                "at org.apache.kahadb.page.PageFile$PageWrite.getDiskBound(PageFile.java:185)",
                "at org.apache.kahadb.page.PageFile.writeBatch(PageFile.java:1000)"
            ],
            "StepsToReproduce": [
                "1. Run the unit test 'AMQ2149KahaDBTest.testQueueTransactionalOrderWithRestart'.",
                "2. Observe the test execution for intermittent failures.",
                "3. Check the logs for any IOException related to file creation."
            ],
            "ExpectedBehavior": "The unit test should complete successfully without any IO exceptions, and the checkpoint process should create the necessary recovery files without errors.",
            "ObservedBehavior": "The unit test fails intermittently with an IOException indicating that the recovery file cannot be created due to a missing directory.",
            "Resolution": "[Provide additional details on the resolution or fix applied]"
        }
    },
    {
        "filename": "AMQ-4369.json",
        "creation_time": "2013-03-13T13:51:31.000+0000",
        "bug_report": {
            "BugID": "AMQ-4369",
            "Title": "IOException Occurs Before Default Handler Installation in ActiveMQ",
            "Description": "An IOException is thrown before the default IOExceptionHandler is registered, leading to the exception being ignored. This occurs during the initialization phase of the ActiveMQ broker, specifically when attempting to read from a file. The IOExceptionHandler needs to be set up earlier in the process to handle such exceptions appropriately.",
            "StackTrace": [
                "java.io.IOException: Input/output error",
                "\tat java.io.RandomAccessFile.readBytes(Native Method)",
                "\tat java.io.RandomAccessFile.read(RandomAccessFile.java:355)",
                "\tat java.io.RandomAccessFile.readFully(RandomAccessFile.java:414)",
                "\tat java.io.RandomAccessFile.readFully(RandomAccessFile.java:394)",
                "\tat org.apache.kahadb.page.PageFile.readPage(PageFile.java:833)",
                "\tat org.apache.kahadb.page.Transaction$2.readPage(Transaction.java:447)",
                "\tat org.apache.kahadb.page.Transaction$2.<init>(Transaction.java:438)",
                "\tat org.apache.kahadb.page.Transaction.openInputStream(Transaction.java:435)",
                "\tat org.apache.kahadb.page.Transaction.load(Transaction.java:411)",
                "\tat org.apache.kahadb.page.Transaction.load(Transaction.java:368)",
                "\tat org.apache.kahadb.index.BTreeIndex.loadNode(BTreeIndex.java:262)",
                "\tat org.apache.kahadb.index.BTreeIndex.getRoot(BTreeIndex.java:174)",
                "\tat org.apache.kahadb.index.BTreeIndex.remove(BTreeIndex.java:194)",
                "\tat org.apache.activemq.store.kahadb.MessageDatabase.updateIndex(MessageDatabase.java:1212)",
                "\tat org.apache.activemq.store.kahadb.MessageDatabase$15.execute(MessageDatabase.java:1028)",
                "\tat org.apache.kahadb.page.Transaction.execute(Transaction.java:771)",
                "\tat org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:1026)",
                "\tat org.apache.activemq.store.kahadb.MessageDatabase$13.visit(MessageDatabase.java:961)",
                "\tat org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:953)",
                "\tat org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:865)",
                "\tat org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.removeMessage(KahaDBStore.java:439)",
                "\tat org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.removeAsyncMessage(KahaDBStore.java:411)",
                "\tat org.apache.activemq.store.kahadb.KahaDBTransactionStore.removeAsyncMessage(KahaDBTransactionStore.java:468)",
                "\tat org.apache.activemq.store.kahadb.KahaDBTransactionStore$1.removeAsyncMessage(KahaDBTransactionStore.java:171)",
                "\tat org.apache.activemq.broker.region.Queue.acknowledge(Queue.java:830)",
                "\tat org.apache.activemq.broker.region.Queue.removeMessage(Queue.java:1584)",
                "\tat org.apache.activemq.broker.region.QueueSubscription.acknowledge(QueueSubscription.java:59)",
                "\tat org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:294)",
                "\tat org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:426)",
                "\tat org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:537)",
                "\tat org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:77)",
                "\tat org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:77)",
                "\tat org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:287)",
                "\tat org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:77)",
                "\tat org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:77)",
                "\tat org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:87)",
                "\tat org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:461)",
                "\tat org.apache.activemq.command.MessageAck.visit(MessageAck.java:236)",
                "\tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:292)",
                "\tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:150)",
                "\tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)",
                "\tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)",
                "\tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:268)",
                "\tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)",
                "\tat org.apache.activemq.transport.tcp.SslTransport.doConsume(SslTransport.java:91)",
                "\tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:215)",
                "\tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:197)",
                "\tat java.lang.Thread.run(Thread.java:679)"
            ],
            "StepsToReproduce": [
                "Start the ActiveMQ broker with a configuration that includes a persistence adapter.",
                "Attempt to read from a file that is not accessible or does not exist.",
                "Observe the logs for any IOException messages."
            ],
            "ExpectedBehavior": "The default IOExceptionHandler should be registered before any IO operations are performed, allowing for proper handling of IO exceptions.",
            "ObservedBehavior": "An IOException occurs before the default handler is installed, resulting in the exception being ignored and not handled appropriately.",
            "Resolution": "The issue has been fixed by ensuring that the default IOExceptionHandler is registered before any IO operations are executed."
        }
    },
    {
        "filename": "AMQ-5016.json",
        "creation_time": "2014-02-03T16:40:26.000+0000",
        "bug_report": {
            "BugID": "AMQ-5016",
            "Title": "BitArrayBin Class Fails with Indices Exceeding Integer.MAX_VALUE",
            "Description": "The BitArrayBin class in ActiveMQ has a critical issue where the index's unit type is long, while the variable firstIndex is of type int. This discrepancy leads to incorrect behavior when the index exceeds Integer.MAX_VALUE, causing methods setBit() and getBit() to return erroneous values. This defect severely impacts the performance of the ActiveMQ client when processing messages with sequence IDs larger than Integer.MAX_VALUE, resulting in excessive time spent shifting the window and blocking other consumer threads.",
            "StackTrace": [
                "java.lang.Thread.State: RUNNABLE",
                "at java.util.LinkedList.linkLast(LinkedList.java:140)",
                "at java.util.LinkedList.add(LinkedList.java:336)",
                "at org.apache.activemq.util.BitArrayBin.getBitArray(BitArrayBin.java:123)",
                "at org.apache.activemq.util.BitArrayBin.setBit(BitArrayBin.java:59)",
                "at org.apache.activemq.ActiveMQMessageAuditNoSync.isDuplicate(ActiveMQMessageAuditNoSync.java:160)",
                "at org.apache.activemq.ActiveMQMessageAudit.isDuplicate(ActiveMQMessageAudit.java:59)",
                "at org.apache.activemq.ActiveMQMessageAuditNoSync.isDuplicate(ActiveMQMessageAuditNoSync.java:140)",
                "at org.apache.activemq.ConnectionAudit.isDuplicate(ConnectionAudit.java:52)",
                "at org.apache.activemq.ActiveMQConnection.isDuplicate(ActiveMQConnection.java:2291)",
                "at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1223)",
                "at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:134)",
                "at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:205)",
                "at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:127)",
                "at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)",
                "at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)",
                "at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)",
                "at java.lang.Thread.run(Thread.java:722)"
            ],
            "StepsToReproduce": [
                "1. Create a message with a sequence ID greater than Integer.MAX_VALUE.",
                "2. Use the ActiveMQ client to send the message.",
                "3. Observe the behavior of the client when processing the message."
            ],
            "ExpectedBehavior": "The ActiveMQ client should process messages with sequence IDs larger than Integer.MAX_VALUE without performance degradation or errors.",
            "ObservedBehavior": "The ActiveMQ client experiences significant performance issues, spending excessive time shifting the window and blocking other consumer threads when processing messages with sequence IDs larger than Integer.MAX_VALUE.",
            "Resolution": "[Provide additional details about the resolution or fix applied]"
        }
    },
    {
        "filename": "AMQ-4407.json",
        "creation_time": "2013-03-26T15:41:15.000+0000",
        "bug_report": {
            "BugID": "AMQ-4407",
            "Title": "mKahaDB: IllegalStateException when attempting to recreate a deleted queue",
            "Description": "When using mKahaDB, an IllegalStateException is thrown when trying to recreate a queue after it has been deleted through the admin interface. The error message indicates that the PageFile is not loaded, which suggests that the system is attempting to access a resource that has not been properly initialized or loaded after the deletion operation.",
            "StackTrace": [
                "2013-03-08 10:29:17,903 | WARN  | Async error occurred: java.lang.IllegalStateException: PageFile is not loaded | org.apache.activemq.broker.TransportConnection.Service | ActiveMQ Transport: tcp:///0:0:0:0:0:0:0:1%0:65222@61613",
                "java.lang.IllegalStateException: PageFile is not loaded",
                "\tat org.apache.activemq.store.kahadb.disk.page.PageFile.assertLoaded(PageFile.java:809)",
                "\tat org.apache.activemq.store.kahadb.disk.page.PageFile.tx(PageFile.java:303)",
                "\tat org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.getMessageCount(KahaDBStore.java:478)",
                "\tat org.apache.activemq.store.ProxyMessageStore.getMessageCount(ProxyMessageStore.java:101)",
                "\tat org.apache.activemq.store.ProxyMessageStore.getMessageCount(ProxyMessageStore.java:101)",
                "\tat org.apache.activemq.broker.region.Queue.initialize(Queue.java:376)",
                "\tat org.apache.activemq.broker.region.DestinationFactoryImpl.createDestination(DestinationFactoryImpl.java:87)",
                "\tat org.apache.activemq.broker.region.AbstractRegion.createDestination(AbstractRegion.java:526)",
                "\tat org.apache.activemq.broker.region.ManagedQueueRegion.createDestination(ManagedQueueRegion.java:56)",
                "\tat org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:136)",
                "\tat org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:277)",
                "\tat org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)",
                "\tat org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)",
                "\tat org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:151)",
                "\tat org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:387)",
                "\tat org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:282)",
                "\tat org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)",
                "\tat org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:317)",
                "\tat org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)",
                "\tat org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:499)",
                "\tat org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:749)",
                "\tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:329)",
                "\tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)",
                "\tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:45)",
                "\tat org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:288)",
                "\tat org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:84)",
                "\tat org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:195)",
                "\tat org.apache.activemq.transport.stomp.ProtocolConverter.onStompSend(ProtocolConverter.java:321)",
                "\tat org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:233)",
                "\tat org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:73)",
                "\tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)",
                "\tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)",
                "\tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)",
                "\tat java.lang.Thread.run(Thread.java:680)"
            ],
            "StepsToReproduce": [
                "1. Start the ActiveMQ broker with mKahaDB as the persistence adapter.",
                "2. Create a queue using the admin interface.",
                "3. Delete the created queue through the admin interface.",
                "4. Attempt to recreate the same queue."
            ],
            "ExpectedBehavior": "The queue should be recreated successfully without any errors.",
            "ObservedBehavior": "An IllegalStateException is thrown with the message 'PageFile is not loaded', preventing the queue from being recreated.",
            "Resolution": "[Provide additional details about the resolution or fix applied]"
        }
    },
    {
        "filename": "AMQ-4221.json",
        "creation_time": "2012-12-13T16:15:04.000+0000",
        "bug_report": {
            "BugID": "AMQ-4221",
            "Title": "NullPointerException in Queue Paging due to Sparse Removal",
            "Description": "A NullPointerException occurs when attempting to page in more queue messages in ActiveMQ. This issue arises specifically during the removal of messages from the queue, leading to potential message loss and system instability.",
            "StackTrace": [
                "java.lang.NullPointerException",
                "at org.apache.kahadb.index.ListNode.access$200(ListNode.java:37)",
                "at org.apache.kahadb.index.ListNode$NodeMarshaller.writePayload(ListNode.java:265)",
                "at org.apache.kahadb.index.ListNode$NodeMarshaller.writePayload(ListNode.java:255)",
                "at org.apache.kahadb.page.Transaction.store(Transaction.java:248)",
                "at org.apache.kahadb.index.ListIndex.storeNode(ListIndex.java:326)",
                "at org.apache.kahadb.index.ListNode.store(ListNode.java:332)",
                "at org.apache.kahadb.index.ListNode.access$500(ListNode.java:37)",
                "at org.apache.kahadb.index.ListNode$ListIterator.remove(ListNode.java:227)",
                "at org.apache.activemq.store.kahadb.plist.PList$PListIterator$1.execute(PList.java:229)",
                "at org.apache.kahadb.page.Transaction.execute(Transaction.java:771)",
                "at org.apache.activemq.store.kahadb.plist.PList$PListIterator.remove(PList.java:226)",
                "at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor$DiskIterator.remove(FilePendingMessageCursor.java:517)",
                "at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.remove(FilePendingMessageCursor.java:321)",
                "at org.apache.activemq.broker.region.Queue.doPageInForDispatch(Queue.java:1735)",
                "at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1948)",
                "at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1465)",
                "at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)",
                "at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)",
                "at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)",
                "at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)",
                "at java.lang.Thread.run(Thread.java:680)"
            ],
            "StepsToReproduce": [
                "1. Start the ActiveMQ broker.",
                "2. Create a queue and send multiple messages to it.",
                "3. Set up a consumer to receive messages from the queue.",
                "4. Trigger the condition that leads to sparse removal of messages (e.g., by expiring messages or removing them manually).",
                "5. Observe the logs for any NullPointerException during the paging process."
            ],
            "ExpectedBehavior": "The system should successfully page in messages from the queue without throwing any exceptions, allowing consumers to receive messages as expected.",
            "ObservedBehavior": "A NullPointerException is thrown during the paging process, preventing messages from being dispatched to consumers and potentially leading to message loss.",
            "Resolution": "[Provide additional details about the resolution or fix applied]"
        }
    },
    {
        "filename": "AMQ-3622.json",
        "creation_time": "2011-12-06T15:16:49.000+0000",
        "bug_report": {
            "BugID": "AMQ-3622",
            "Title": "NullPointerException in LastImageSubscriptionRecoveryPolicy when browsing empty topic",
            "Description": "A NullPointerException (NPE) is logged when attempting to browse a topic with no available messages. This occurs in the LastImageSubscriptionRecoveryPolicy.browse method, leading to repeated warnings every 30 seconds until a message is sent to the topic.",
            "StackTrace": [
                "2011-12-02 15:01:00,588 | WARN  | Failed to browse Topic: xxx | org.apache.activemq.broker.region.Topic | ActiveMQ Broker[xxx] Scheduler",
                "java.lang.NullPointerException",
                "at org.apache.activemq.broker.region.policy.LastImageSubscriptionRecoveryPolicy.browse(LastImageSubscriptionRecoveryPolicy.java:63)",
                "at org.apache.activemq.broker.region.Topic.browse(Topic.java:564)",
                "at org.apache.activemq.broker.region.Topic$6.run(Topic.java:659)",
                "at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)",
                "at java.util.TimerThread.mainLoop(Timer.java:512)",
                "at java.util.TimerThread.run(Timer.java:462)"
            ],
            "StepsToReproduce": [
                "1. Start the ActiveMQ broker.",
                "2. Ensure that there are no messages available in the specified topic.",
                "3. Start a subscriber for the topic.",
                "4. Observe the logs for warnings related to browsing the topic."
            ],
            "ExpectedBehavior": "The system should handle the case of browsing an empty topic gracefully without throwing a NullPointerException.",
            "ObservedBehavior": "A NullPointerException is logged repeatedly every 30 seconds when attempting to browse an empty topic.",
            "Resolution": "A fix has been implemented in the LastImageSubscriptionRecoveryPolicy to handle empty topics without throwing an exception."
        }
    },
    {
        "filename": "AMQ-6016.json",
        "creation_time": "2015-10-21T12:55:55.000+0000",
        "bug_report": {
            "BugID": "AMQ-6016",
            "Title": "IllegalArgumentException: Comparison method violates its general contract during message group balancing",
            "Description": "Under load, the message group balancing mechanism in ActiveMQ can lead to an IllegalArgumentException due to a violation of the comparison method's contract. This occurs when the system attempts to sort consumer subscriptions, which can result in unexpected behavior and potential message delivery issues.",
            "StackTrace": [
                "java.lang.IllegalArgumentException: Comparison method violates its general contract!",
                "at java.util.TimSort.mergeHi(TimSort.java:868)[:1.7.0_65]",
                "at java.util.TimSort.mergeAt(TimSort.java:485)[:1.7.0_65]",
                "at java.util.TimSort.mergeCollapse(TimSort.java:410)[:1.7.0_65]",
                "at java.util.TimSort.sort(TimSort.java:214)[:1.7.0_65]",
                "at java.util.TimSort.sort(TimSort.java:173)[:1.7.0_65]",
                "at java.util.Arrays.sort(Arrays.java:659)[:1.7.0_65]",
                "at java.util.Collections.sort(Collections.java:217)[:1.7.0_65]",
                "at org.apache.activemq.broker.region.Queue.addToConsumerList(Queue.java:2131)[121:org.apache.activemq.activemq-osgi:5.9.0]",
                "at org.apache.activemq.broker.region.Queue.doActualDispatch(Queue.java:2067)[121:org.apache.activemq.activemq-osgi:5.9.0]",
                "at org.apache.activemq.broker.region.Queue.doDispatch(Queue.java:1972)[121:org.apache.activemq.activemq-osgi:5.9.0]",
                "at org.apache.activemq.broker.region.Queue.removeSubscription(Queue.java:587)[121:org.apache.activemq.activemq-osgi:5.9.0]"
            ],
            "StepsToReproduce": [
                "1. Start the ActiveMQ broker with a high load of messages.",
                "2. Configure multiple consumers to subscribe to the same message group.",
                "3. Monitor the broker logs for any warnings or errors related to message dispatching."
            ],
            "ExpectedBehavior": "The broker should successfully balance message groups among consumers without throwing any exceptions.",
            "ObservedBehavior": "An IllegalArgumentException is thrown, indicating that the comparison method used for sorting consumer subscriptions violates its general contract, leading to potential message delivery failures.",
            "Resolution": "[Provide additional details on the resolution or fix applied]"
        }
    },
    {
        "filename": "AMQ-3490.json",
        "creation_time": "2011-09-08T20:31:57.000+0000",
        "bug_report": {
            "BugID": "AMQ-3490",
            "Title": "NullPointerException during message processing with FileCursor in ActiveMQ",
            "Description": "In scenarios where a single-consumer queue for non-persistent messages utilizes a file cursor to manage a backlog, bursts of messages lead to NullPointerExceptions (NPEs). This issue manifests during the execution of the `flushToDisk()` method, particularly when attempting to access the disk list, which may not be properly initialized or could be null.",
            "StackTrace": [
                "java.lang.NullPointerException",
                "at java.io.Writer.write(Writer.java:140)",
                "at java.io.BufferedWriter.newLine(BufferedWriter.java:225)",
                "at java.util.Properties.writeComments(Properties.java:671)",
                "at java.util.Properties.store0(Properties.java:805)",
                "at java.util.Properties.store(Properties.java:796)",
                "at org.apache.kahadb.page.PageFile.storeMetaData(PageFile.java:570)",
                "at org.apache.kahadb.page.PageFile.load(PageFile.java:361)",
                "at org.apache.activemq.store.kahadb.plist.PListStore.intialize(PListStore.java:285)",
                "at org.apache.activemq.store.kahadb.plist.PListStore.getPList(PListStore.java:218)",
                "at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.getDiskList(FilePendingMessageCursor.java:457)",
                "at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.flushToDisk(FilePendingMessageCursor.java:435)",
                "at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.onUsageChanged(FilePendingMessageCursor.java:388)",
                "at org.apache.activemq.usage.Usage$1.run(Usage.java:268)",
                "at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)",
                "at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)",
                "at java.lang.Thread.run(Thread.java:619)"
            ],
            "StepsToReproduce": [
                "1. Set up a single-consumer queue for non-persistent messages in ActiveMQ.",
                "2. Enable file cursor for managing the backlog.",
                "3. Send a burst of messages to the queue.",
                "4. Monitor the logs for any NullPointerExceptions during message processing."
            ],
            "ExpectedBehavior": "The system should process messages without throwing any exceptions, and the file cursor should manage the backlog effectively.",
            "ObservedBehavior": "The system throws NullPointerExceptions during message processing, particularly when attempting to flush messages to disk, indicating that the disk list may not be initialized properly.",
            "Resolution": "[Provide additional details about the resolution or fix applied]"
        }
    },
    {
        "filename": "AMQ-6831.json",
        "creation_time": "2017-10-09T10:35:53.000+0000",
        "bug_report": {
            "BugID": "AMQ-6831",
            "Title": "Broker Fails to Start Due to Missing/Corrupt Journal Files After Upgrade to 5.15.1",
            "Description": "After upgrading to ActiveMQ version 5.15.1, the broker fails to start and throws an IOException indicating missing or corrupt journal files. This issue does not occur when downgrading to version 5.15.0.",
            "StackTrace": [
                "2017-10-09 12:29:36.802 ERROR 4197 --- [pool-3-thread-1] org.deku.leoz.node.Application           : java.io.IOException: Detected missing/corrupt journal files referenced by:[0:ActiveMQ.DLQ] 3 messages affected.",
                "java.lang.Error: java.io.IOException: Detected missing/corrupt journal files referenced by:[0:ActiveMQ.DLQ] 3 messages affected.",
                "at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1148) ~[na:1.8.0_131]",
                "at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) ~[na:1.8.0_131]",
                "at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_131]",
                "Caused by: java.io.IOException: Detected missing/corrupt journal files referenced by:[0:ActiveMQ.DLQ] 3 messages affected.",
                "at org.apache.activemq.store.kahadb.MessageDatabase.recoverIndex(MessageDatabase.java:965) ~[activemq-kahadb-store-5.15.1.jar:5.15.1]",
                "at org.apache.activemq.store.kahadb.MessageDatabase$5.execute(MessageDatabase.java:717) ~[activemq-kahadb-store-5.15.1.jar:5.15.1]",
                "at org.apache.activemq.store.kahadb.disk.page.Transaction.execute(Transaction.java:779) ~[activemq-kahadb-store-5.15.1.jar:5.15.1]",
                "at org.apache.activemq.store.kahadb.MessageDatabase.recover(MessageDatabase.java:714) ~[activemq-kahadb-store-5.15.1.jar:5.15.1]",
                "at org.apache.activemq.store.kahadb.MessageDatabase.open(MessageDatabase.java:473) ~[activemq-kahadb-store-5.15.1.jar:5.15.1]",
                "at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:493) ~[activemq-kahadb-store-5.15.1.jar:5.15.1]",
                "at org.apache.activemq.store.kahadb.MessageDatabase.doStart(MessageDatabase.java:297) ~[activemq-kahadb-store-5.15.1.jar:5.15.1]",
                "at org.apache.activemq.store.kahadb.KahaDBStore.doStart(KahaDBStore.java:219) ~[activemq-kahadb-store-5.15.1.jar:5.15.1]",
                "at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:55) ~[activemq-client-5.15.1.jar:5.15.1]"
            ],
            "StepsToReproduce": [
                "1. Upgrade ActiveMQ to version 5.15.1.",
                "2. Start the broker.",
                "3. Observe the error message regarding missing/corrupt journal files."
            ],
            "ExpectedBehavior": "The broker should start successfully without any errors related to journal files.",
            "ObservedBehavior": "The broker fails to start and throws an IOException indicating missing or corrupt journal files.",
            "Resolution": "Downgrading to version 5.15.0 resolves the issue."
        }
    },
    {
        "filename": "AMQ-5525.json",
        "creation_time": "2015-01-19T13:47:50.000+0000",
        "bug_report": {
            "BugID": "AMQ-5525",
            "Title": "Error Converting Collection Entry in ActiveMQ Browse Command",
            "Description": "When executing the ActiveMQ browse command via integration tests, an exception is thrown indicating an inability to convert a collection entry. This issue arises specifically when the command is invoked with a timestamp value that cannot be converted to a string.",
            "StackTrace": [
                "java.lang.Exception: Unable to convert from [--amqurl, tcp://localhost:61616, --user, karaf, --password, karaf, -Vbody, 1421674680492] to java.util.ArrayList<java.lang.String>(error converting collection entry)",
                "at org.apache.aries.blueprint.container.AggregateConverter.convertToCollection(AggregateConverter.java:342)",
                "at org.apache.aries.blueprint.container.AggregateConverter.convert(AggregateConverter.java:182)",
                "at org.apache.activemq.karaf.commands.ActiveMQCommand$ActiveMQActionPreparator.convert(ActiveMQCommand.java:143)",
                "at org.apache.activemq.karaf.commands.ActiveMQCommand$ActiveMQActionPreparator.prepare(ActiveMQCommand.java:134)",
                "at org.apache.felix.gogo.commands.basic.AbstractCommand.execute(AbstractCommand.java:34)",
                "at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                "at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)",
                "at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                "at java.lang.reflect.Method.invoke(Method.java:606)",
                "at org.apache.aries.proxy.impl.ProxyHandler$1.invoke(ProxyHandler.java:54)",
                "at org.apache.aries.proxy.impl.ProxyHandler.invoke(ProxyHandler.java:119)",
                "at org.apache.activemq.karaf.commands.$ActiveMQCommand695030723.execute(Unknown Source)",
                "at org.apache.felix.gogo.runtime.CommandProxy.execute(CommandProxy.java:78)",
                "at org.apache.felix.gogo.runtime.Closure.executeCmd(Closure.java:477)",
                "at org.apache.felix.gogo.runtime.Closure.executeStatement(Closure.java:403)",
                "at org.apache.felix.gogo.runtime.Pipe.run(Pipe.java:108)",
                "at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:183)",
                "at org.apache.felix.gogo.runtime.Closure.execute(Closure.java:120)",
                "at org.apache.felix.gogo.runtime.CommandSessionImpl.execute(CommandSessionImpl.java:92)",
                "at org.apache.activemq.karaf.itest.AbstractFeatureTest$1$1.run(AbstractFeatureTest.java:125)",
                "at org.apache.activemq.karaf.itest.AbstractFeatureTest$1$1.run(AbstractFeatureTest.java:117)",
                "at java.security.AccessController.doPrivileged(Native Method)",
                "at javax.security.auth.Subject.doAs(Subject.java:356)",
                "at org.apache.activemq.karaf.itest.AbstractFeatureTest$1.call(AbstractFeatureTest.java:117)",
                "at org.apache.activemq.karaf.itest.AbstractFeatureTest$1.call(AbstractFeatureTest.java:109)",
                "at java.util.concurrent.FutureTask.run(FutureTask.java:262)",
                "at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)",
                "at java.util.concurrent.FutureTask.run(FutureTask.java:262)",
                "at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)",
                "at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)",
                "at java.lang.Thread.run(Thread.java:745)",
                "Caused by: java.lang.Exception: Unable to convert value 1421674680492 to type java.lang.String",
                "at org.apache.aries.blueprint.container.AggregateConverter.convert(AggregateConverter.java:184)",
                "at org.apache.aries.blueprint.container.AggregateConverter.convertToCollection(AggregateConverter.java:340)"
            ],
            "StepsToReproduce": [
                "1. Set up an ActiveMQ instance on localhost with the default port 61616.",
                "2. Use the command: `activemq:browse --amqurl tcp://localhost:61616 --user karaf --password karaf -Vbody 1421674680492`.",
                "3. Execute the command in the Karaf shell."
            ],
            "ExpectedBehavior": "The command should successfully execute and return the expected results without throwing an exception.",
            "ObservedBehavior": "The command fails with an exception indicating an inability to convert the provided timestamp value to a string.",
            "Resolution": "[Provide additional details on the resolution or fix applied]"
        }
    },
    {
        "filename": "AMQ-4118.json",
        "creation_time": "2012-10-19T22:14:13.000+0000",
        "bug_report": {
            "BugID": "AMQ-4118",
            "Title": "Index Page Overflow Causes ClassCastException and NullPointerException in KahaDB",
            "Description": "An overflow in the index page can lead to duplicate calls to free, resulting in various exceptions such as ClassCastException and NullPointerException. This issue is particularly evident when durable subscriptions are used with large backlogs, causing the sequence set expansion and shrinkage to produce values that can overflow easily. The symptoms include errors related to chunk streams not existing and class cast issues when pages are reused in the wrong context.",
            "StackTrace": [
                "java.io.EOFException: Chunk stream does not exist, page: 1344 is marked free",
                "at org.apache.kahadb.page.Transaction$2.readPage(Transaction.java:481)",
                "at org.apache.kahadb.page.Transaction$2.<init>(Transaction.java:458)",
                "at org.apache.kahadb.page.Transaction.openInputStream(Transaction.java:455)",
                "at org.apache.kahadb.page.Transaction.load(Transaction.java:431)",
                "at org.apache.kahadb.page.Transaction.load(Transaction.java:388)",
                "at org.apache.kahadb.index.BTreeIndex.loadNode(BTreeIndex.java:262)",
                "at org.apache.kahadb.index.BTreeNode.getChild(BTreeNode.java:225)",
                "at org.apache.kahadb.index.BTreeNode.getLeafNode(BTreeNode.java:680)",
                "at org.apache.kahadb.index.BTreeNode.get(BTreeNode.java:562)",
                "at org.apache.kahadb.index.BTreeIndex.get(BTreeIndex.java:184)",
                "at org.apache.activemq.store.kahadb.MessageDatabase$MessageOrderIndex.get(MessageDatabase.java:2616)",
                "at org.apache.activemq.store.kahadb.MessageDatabase.updateIndex(MessageDatabase.java:1210)",
                "at org.apache.activemq.store.kahadb.MessageDatabase$15.execute(MessageDatabase.java:1002)",
                "at org.apache.kahadb.page.Transaction.execute(Transaction.java:790)",
                "at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:1000)",
                "at org.apache.activemq.store.kahadb.MessageDatabase$13.visit(MessageDatabase.java:933)",
                "at org.apache.activemq.store.kahadb.data.KahaRemoveMessageCommand.visit(KahaRemoveMessageCommand.java:220)",
                "at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:925)",
                "at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:837)",
                "at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:819)",
                "at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBTopicMessageStore.doAcknowledge(KahaDBStore.java:723)",
                "at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBTopicMessageStore.acknowledge(KahaDBStore.java:706)",
                "at org.apache.activemq.store.kahadb.KahaDBTransactionStore.acknowledge(KahaDBTransactionStore.java:519)",
                "at org.apache.activemq.store.kahadb.KahaDBTransactionStore$2.acknowledge(KahaDBTransactionStore.java:222)",
                "at org.apache.activemq.broker.region.Topic.acknowledge(Topic.java:528)",
                "at org.apache.activemq.broker.region.DurableTopicSubscription.acknowledge(DurableTopicSubscription.java:279)",
                "java.lang.ClassCastException: java.lang.Long cannot be cast to java.lang.String",
                "at java.lang.String.compareTo(String.java:92)",
                "at java.util.Arrays.binarySearch0(Arrays.java:2001)",
                "at java.util.Arrays.binarySearch(Arrays.java:1943)",
                "at org.apache.kahadb.index.BTreeNode.put(BTreeNode.java:371)",
                "at org.apache.kahadb.index.BTreeNode.put(BTreeNode.java:369)",
                "at org.apache.kahadb.index.BTreeIndex.put(BTreeIndex.java:189)",
                "at org.apache.activemq.store.kahadb.MessageDatabase$MessageOrderIndex.put(MessageDatabase.java:2592)",
                "at org.apache.activemq.store.kahadb.MessageDatabase.upadateIndex(MessageDatabase.java:1168)",
                "at org.apache.activemq.store.kahadb.MessageDatabase$AddOpperation.execute(MessageDatabase.java:2082)",
                "at org.apache.activemq.store.kahadb.MessageDatabase$18.execute(MessageDatabase.java:1095)",
                "at org.apache.kahadb.page.Transaction.execute(Transaction.java:768)",
                "at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:1092)",
                "at org.apache.activemq.store.kahadb.MessageDatabase$13.visit(MessageDatabase.java:961)",
                "at org.apache.activemq.store.kahadb.data.KahaCommitCommand.visit(KahaCommitCommand.java:130)",
                "at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:943)",
                "at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:855)",
                "at org.apache.activemq.store.kahadb.KahaDBTransactionStore.commit(KahaDBTransactionStore.java:267)",
                "java.lang.NullPointerException",
                "at org.apache.kahadb.index.BTreeIndex.loadNode(BTreeIndex.java:264)",
                "at org.apache.kahadb.index.BTreeNode.getChild(BTreeNode.java:225)",
                "at org.apache.kahadb.index.BTreeNode.getLeafNode(BTreeNode.java:676)",
                "at org.apache.kahadb.index.BTreeNode.put(BTreeNode.java:369)",
                "at org.apache.kahadb.index.BTreeIndex.put(BTreeIndex.java:189)",
                "at org.apache.activemq.store.kahadb.MessageDatabase$MessageOrderIndex.put(MessageDatabase.java:2592)",
                "at org.apache.activemq.store.kahadb.MessageDatabase.upadateIndex(MessageDatabase.java:1168)",
                "at org.apache.activemq.store.kahadb.MessageDatabase$AddOpperation.execute(MessageDatabase.java:2082)",
                "at org.apache.activemq.store.kahadb.MessageDatabase$18.execute(MessageDatabase.java:1095)",
                "at org.apache.kahadb.page.Transaction.execute(Transaction.java:768)",
                "at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:1092)",
                "at org.apache.activemq.store.kahadb.MessageDatabase$13.visit(MessageDatabase.java:961)",
                "at org.apache.activemq.store.kahadb.data.KahaCommitCommand.visit(KahaCommitCommand.java:130)",
                "at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:943)",
                "at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:855)",
                "at org.apache.activemq.store.kahadb.KahaDBTransactionStore.commit(KahaDBTransactionStore.java:267)"
            ],
            "StepsToReproduce": [
                "1. Set up a durable subscription with a large backlog of messages.",
                "2. Trigger the sequence set expansion and shrinkage.",
                "3. Observe the logs for any exceptions related to chunk streams or class cast issues."
            ],
            "ExpectedBehavior": "The system should handle index page overflow gracefully without throwing exceptions, and the durable subscription should function correctly without data loss or corruption.",
            "ObservedBehavior": "The system throws ClassCastException and NullPointerException when attempting to access or manipulate pages that have been marked free, leading to potential data loss and system instability.",
            "Resolution": "[Provide additional details about the resolution or fix applied]"
        }
    },
    {
        "filename": "AMQ-4092.json",
        "creation_time": "2012-10-04T02:56:44.000+0000",
        "bug_report": {
            "BugID": "AMQ-4092",
            "Title": "ConcurrentModificationException Occurs When Using Message Groups in ActiveMQ",
            "Description": "While consuming messages from a queue with the JMSXGroupID header set, frequent WARN messages are logged indicating a ConcurrentModificationException. This issue arises when the message groups feature is enabled. Disabling the message groups header eliminates the warnings, but no specific errors are observed in the application itself.",
            "StackTrace": [
                "2012-10-04 02:34:02,552 |  WARN - Service              - | Async error occurred: java.util.concurrent.ExecutionException: java.util.ConcurrentModificationException",
                "java.util.concurrent.ExecutionException: java.util.ConcurrentModificationException",
                "\tat java.util.concurrent.FutureTask$Sync.innerGet(FutureTask.java:222)",
                "\tat java.util.concurrent.FutureTask.get(FutureTask.java:83)",
                "\tat org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:785)",
                "\tat org.apache.activemq.broker.region.Queue.send(Queue.java:707)",
                "\tat org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:407)",
                "\tat org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:503)",
                "\tat org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:305)",
                "\tat org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)",
                "\tat org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)",
                "\tat org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:306)",
                "\tat org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)",
                "\tat org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:453)",
                "\tat org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:681)",
                "\tat org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:292)",
                "\tat org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:150)",
                "\tat org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)",
                "\tat org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)",
                "\tat org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:231)",
                "\tat org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)",
                "\tat org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)",
                "\tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)",
                "\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)",
                "\tat java.lang.Thread.run(Thread.java:680)",
                "Caused by: java.util.ConcurrentModificationException",
                "\tat java.util.HashMap$HashIterator.nextEntry(HashMap.java:793)",
                "\tat java.util.HashMap$KeyIterator.next(HashMap.java:828)",
                "\tat org.apache.activemq.util.MarshallingSupport.marshalPrimitiveMap(MarshallingSupport.java:64)",
                "\tat org.apache.activemq.command.Message.beforeMarshall(Message.java:210)",
                "\tat org.apache.activemq.command.ActiveMQObjectMessage.beforeMarshall(ActiveMQObjectMessage.java:199)",
                "\tat org.apache.activemq.openwire.v6.MessageMarshaller.looseMarshal(MessageMarshaller.java:277)",
                "\tat org.apache.activemq.openwire.v6.ActiveMQMessageMarshaller.looseMarshal(ActiveMQMessageMarshaller.java:111)",
                "\tat org.apache.activemq.openwire.v6.ActiveMQObjectMessageMarshaller.looseMarshal(ActiveMQObjectMessageMarshaller.java:111)",
                "\tat org.apache.activemq.openwire.OpenWireFormat.marshal(OpenWireFormat.java:168)",
                "\tat org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.addMessage(KahaDBStore.java:429)",
                "\tat org.apache.activemq.store.kahadb.KahaDBStore$StoreQueueTask.run(KahaDBStore.java:1177)",
                "\tat ... 3 more"
            ],
            "StepsToReproduce": [
                "1. Set up an ActiveMQ 5.6.0 standalone instance with kahadb persistence.",
                "2. Configure a producer using Spring JMSTemplate to send ObjectMessage.",
                "3. Configure a consumer using Camel 2.9.2 with AMQ connection pool and vm transport.",
                "4. Enable message groups by setting the JMSXGroupID header on the messages.",
                "5. Start consuming messages from the queue."
            ],
            "ExpectedBehavior": "No warnings or errors should be logged when consuming messages with message groups enabled.",
            "ObservedBehavior": "Frequent WARN messages indicating a ConcurrentModificationException are logged while consuming messages with message groups enabled.",
            "Resolution": "[Provide additional details about the resolution or fix applied]"
        }
    },
    {
        "filename": "AMQ-3887.json",
        "creation_time": "2012-06-18T16:02:55.000+0000",
        "bug_report": {
            "BugID": "AMQ-3887",
            "Title": "Null Pointer Exception Occurs During Duplex NetworkConnector Initialization",
            "Description": "A Null Pointer Exception (NPE) is encountered on the receiving side when starting a duplex NetworkConnector. This issue arises during the configuration of messages, specifically when the producerInfo is accessed before it is initialized. The problem manifests as a race condition, making it difficult to reproduce consistently. The NPE occurs in the `configureMessage` method of the `DemandForwardingBridgeSupport` class.",
            "StackTrace": [
                "java.lang.NullPointerException: null",
                "at org.apache.activemq.network.DemandForwardingBridgeSupport.configureMessage(DemandForwardingBridgeSupport.java:644) ~[activemq-core-5.6.0.jar:5.6.0]",
                "at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceLocalCommand(DemandForwardingBridgeSupport.java:675) ~[activemq-core-5.6.0.jar:5.6.0]",
                "at org.apache.activemq.network.DemandForwardingBridgeSupport$1.onCommand(DemandForwardingBridgeSupport.java:139) [activemq-core-5.6.0.jar:5.6.0]",
                "at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116) [activemq-core-5.6.0.jar:5.6.0]",
                "at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50) [activemq-core-5.6.0.jar:5.6.0]",
                "at org.apache.activemq.transport.vm.VMTransport.doDispatch(VMTransport.java:135) [activemq-core-5.6.0.jar:5.6.0]",
                "at org.apache.activemq.transport.vm.VMTransport.dispatch(VMTransport.java:124) [activemq-core-5.6.0.jar:5.6.0]",
                "at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:103) [activemq-core-5.6.0.jar:5.6.0]",
                "at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68) [activemq-core-5.6.0.jar:5.6.0]",
                "at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60) [activemq-core-5.6.0.jar:5.6.0]",
                "at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1307) [activemq-core-5.6.0.jar:5.6.0]",
                "at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:837) [activemq-core-5.6.0.jar:5.6.0]",
                "at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:872) [activemq-core-5.6.0.jar:5.6.0]",
                "at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122) [activemq-core-5.6.0.jar:5.6.0]",
                "at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43) [activemq-core-5.6.0.jar:5.6.0]",
                "at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(Unknown Source) [na:1.6.0_20]",
                "at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source) [na:1.6.0_20]",
                "at java.lang.Thread.run(Unknown Source) [na:1.6.0_20]"
            ],
            "StepsToReproduce": [
                "1. Start a duplex NetworkConnector with multiple brokers.",
                "2. Monitor the logs for any Null Pointer Exceptions during the connection process.",
                "3. Observe the behavior when a large number of brokers are connecting simultaneously."
            ],
            "ExpectedBehavior": "The duplex NetworkConnector should initialize without throwing any exceptions, allowing all brokers to connect successfully.",
            "ObservedBehavior": "A Null Pointer Exception is thrown during the initialization of the duplex NetworkConnector, specifically when accessing the producerInfo in the configureMessage method.",
            "Resolution": "[Provide additional details about the resolution or fix applied]"
        }
    },
    {
        "filename": "AMQ-6451.json",
        "creation_time": "2016-10-03T17:09:00.000+0000",
        "bug_report": {
            "BugID": "AMQ-6451",
            "Title": "OutOfMemoryError due to Direct Buffer Memory Leak in KahaDB with Zero Preallocation Strategy",
            "Description": "When the preallocation strategy is set to 'zeros', ActiveMQ can intermittently fail to allocate direct buffer memory under default JVM settings. This results in an unhandled OutOfMemoryError, leading to the creation of empty journal files and a file descriptor leak. Eventually, ActiveMQ runs out of file descriptors and crashes. The issue is exacerbated by the lack of proper handling for this condition in the code.",
            "StackTrace": [
                "java.lang.OutOfMemoryError: Direct buffer memory",
                "at java.nio.Bits.reserveMemory(Bits.java:693)[:1.8.0_101]",
                "at java.nio.DirectByteBuffer.<init>(DirectByteBuffer.java:123)[:1.8.0_101]",
                "at java.nio.ByteBuffer.allocateDirect(ByteBuffer.java:311)[:1.8.0_101]",
                "at sun.nio.ch.Util.getTemporaryDirectBuffer(Util.java:174)[:1.8.0_101]",
                "at sun.nio.ch.IOUtil.write(IOUtil.java:58)[:1.8.0_101]",
                "at sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:211)[:1.8.0_101]",
                "at org.apache.activemq.store.kahadb.disk.journal.Journal.doPreallocationZeros(Journal.java:366)[activemq-kahadb-store-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.store.kahadb.disk.journal.Journal.preallocateEntireJournalDataFile(Journal.java:333)[activemq-kahadb-store-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.store.kahadb.disk.journal.Journal.newDataFile(Journal.java:631)[activemq-kahadb-store-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.store.kahadb.disk.journal.Journal.rotateWriteFile(Journal.java:595)[activemq-kahadb-store-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.store.kahadb.disk.journal.Journal.getCurrentDataFile(Journal.java:984)[activemq-kahadb-store-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.store.kahadb.disk.journal.DataFileAppender.enqueue(DataFileAppender.java:189)[activemq-kahadb-store-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.store.kahadb.disk.journal.DataFileAppender.storeItem(DataFileAppender.java:128)[activemq-kahadb-store-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.store.kahadb.disk.journal.Journal.write(Journal.java:890)[activemq-kahadb-store-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:1108)[activemq-kahadb-store-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:1090)[activemq-kahadb-store-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.store.kahadb.KahaDBTransactionStore.commit(KahaDBTransactionStore.java:301)[activemq-kahadb-store-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:70)[activemq-broker-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:252)[activemq-broker-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.broker.BrokerFilter.commitTransaction(BrokerFilter.java:113)[activemq-broker-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:118)[activemq-broker-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:535)[activemq-broker-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)[activemq-client-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:333)[activemq-broker-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:197)[activemq-broker-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)[activemq-client-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:125)[activemq-client-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:300)[activemq-client-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)[activemq-client-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.transport.tcp.SslTransport.doConsume(SslTransport.java:108)[activemq-client-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:233)[activemq-client-5.14.0.jar:5.14.0]",
                "at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:215)[activemq-client-5.14.0.jar:5.14.0]",
                "at java.lang.Thread.run(Thread.java:745)[:1.8.0_101]"
            ],
            "StepsToReproduce": [
                "Set the preallocationStrategy to 'zeros' in the ActiveMQ configuration.",
                "Start ActiveMQ with default JVM settings.",
                "Send messages to the broker until the OutOfMemoryError occurs."
            ],
            "ExpectedBehavior": "ActiveMQ should handle memory allocation properly without running out of direct buffer memory, allowing for normal operation without crashing.",
            "ObservedBehavior": "ActiveMQ intermittently fails to allocate direct buffer memory, leading to OutOfMemoryError, empty journal files, and eventually crashing due to file descriptor exhaustion.",
            "Resolution": "[Provide additional details on the resolution or fix applied]"
        }
    },
    {
        "filename": "AMQ-3393.json",
        "creation_time": "2011-07-05T14:31:31.000+0000",
        "bug_report": {
            "BugID": "AMQ-3393",
            "Title": "Memory Leak Due to Dangling STOMP Transport Connection MBeans",
            "Description": "Rapid connect/disconnect operations can lead to a memory leak caused by dangling STOMP transport connection MBeans. This issue arises when a disconnect occurs before a broker connection is fully established, resulting in a failure to register MBeans due to name collisions.",
            "StackTrace": [
                "javax.management.InstanceAlreadyExistsException: org.apache.activemq:BrokerName=xx,Type=Connection,ConnectorName=stomp,ViewType=address,Name=/xx_52170",
                "at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:453)",
                "at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.internal_addObject(DefaultMBeanServerInterceptor.java:1484)",
                "at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:963)",
                "at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:917)",
                "at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:312)",
                "at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:482)",
                "at org.apache.activemq.broker.jmx.ManagementContext.registerMBean(ManagementContext.java:299)",
                "at org.apache.activemq.broker.jmx.AnnotatedMBean.registerMBean(AnnotatedMBean.java:65)",
                "at org.apache.activemq.broker.jmx.ManagedTransportConnection.registerMBean(ManagedTransportConnection.java:99)",
                "at org.apache.activemq.broker.jmx.ManagedTransportConnection.<init>(ManagedTransportConnection.java:57)",
                "at org.apache.activemq.broker.jmx.ManagedTransportConnector.createConnection(ManagedTransportConnector.java:52)",
                "at org.apache.activemq.broker.TransportConnector$1$1.run(TransportConnector.java:216)",
                "at java.lang.Thread.run(Thread)"
            ],
            "StepsToReproduce": [
                "1. Establish a STOMP connection to the ActiveMQ broker.",
                "2. Rapidly disconnect and reconnect the STOMP connection multiple times.",
                "3. Monitor the MBeans registered in the JMX console."
            ],
            "ExpectedBehavior": "MBeans should be registered and unregistered correctly without causing any exceptions or memory leaks.",
            "ObservedBehavior": "An InstanceAlreadyExistsException is thrown when attempting to register an MBean with a name that already exists, leading to potential memory leaks as MBeans are not properly cleaned up.",
            "Resolution": "A fix for this issue has been implemented and tested in version 5.6.0."
        }
    },
    {
        "filename": "AMQ-5815.json",
        "creation_time": "2015-06-01T12:21:13.000+0000",
        "bug_report": {
            "BugID": "AMQ-5815",
            "Title": "High Concurrency Causes Deadlock and IOExceptions in ActiveMQ with KahaDB",
            "Description": "In a high concurrency environment with IOPS exceeding 3000/s, ActiveMQ experiences deadlocks and IOExceptions, leading to blocked connections that prevent data retrieval and transmission. This issue is frequently observed and results in significant service disruption.",
            "StackTrace": [
                "java.io.IOException: Input/output error",
                "at java.io.RandomAccessFile.write(Native Method)[:1.6.0_30]",
                "at java.io.RandomAccessFile.writeLong(RandomAccessFile.java:1001)[:1.6.0_30]",
                "at org.apache.activemq.util.RecoverableRandomAccessFile.writeLong(RecoverableRandomAccessFile.java:305)[activemq-kahadb-store-5.10.0.jar:5.10.0]",
                "at org.apache.activemq.store.kahadb.disk.page.PageFile.writeBatch(PageFile.java:1062)[activemq-kahadb-store-5.10.0.jar:5.10.0]",
                "at org.apache.activemq.store.kahadb.disk.page.PageFile.flush(PageFile.java:516)[activemq-kahadb-store-5.10.0.jar:5.10.0]",
                "at org.apache.activemq.store.kahadb.MessageDatabase.checkpointUpdate(MessageDatabase.java:1512)[activemq-kahadb-store-5.10.0.jar:5.10.0]",
                "at org.apache.activemq.store.kahadb.MessageDatabase.checkpointCleanup(MessageDatabase.java:929)[activemq-kahadb-store-5.10.0.jar:5.10.0]"
            ],
            "StepsToReproduce": [
                "1. Set up an ActiveMQ broker with KahaDB as the persistence store.",
                "2. Configure the broker to handle high concurrency with IOPS exceeding 3000/s.",
                "3. Start sending and receiving messages through the broker.",
                "4. Monitor the ActiveMQ logs for IOExceptions and deadlock occurrences."
            ],
            "ExpectedBehavior": "The ActiveMQ broker should handle high concurrency without blocking connections or throwing IOExceptions, allowing seamless data retrieval and transmission.",
            "ObservedBehavior": "Under high concurrency, the broker experiences deadlocks and IOExceptions, resulting in blocked connections that prevent data operations until the broker is restarted.",
            "Resolution": "[Provide additional details on the resolution or workaround if available]"
        }
    },
    {
        "filename": "AMQ-5141.json",
        "creation_time": "2014-04-11T11:31:51.000+0000",
        "bug_report": {
            "BugID": "AMQ-5141",
            "Title": "SecurityException when Broker uses Client's Security Context for DLQ Message Expiry",
            "Description": "When the broker processes a RemoveInfo command, it may trigger a message expiry check for prefetched messages. If messages are expired, they are sent to ActiveMQ.DLQ by default. If the broker is security-enabled with authorization turned on, the broker uses the client's security context to send messages to DLQ. This requires that the client user has write access to ActiveMQ.DLQ, which may not be appropriate from a security standpoint. The broker should use its internal security context instead of the client's when expiring messages as part of the RemoveInfo command.",
            "StackTrace": [
                "java.lang.SecurityException: User Test is not authorized to write to: queue://ActiveMQ.DLQ",
                "at org.apache.activemq.security.AuthorizationBroker.send(AuthorizationBroker.java:197)",
                "at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)",
                "at org.apache.activemq.util.BrokerSupport.doResend(BrokerSupport.java:68)",
                "at org.apache.activemq.util.BrokerSupport.resendNoCopy(BrokerSupport.java:38)",
                "at org.apache.activemq.broker.region.RegionBroker.sendToDeadLetterQueue(RegionBroker.java:691)",
                "at org.apache.activemq.broker.BrokerFilter.sendToDeadLetterQueue(BrokerFilter.java:262)",
                "at org.apache.activemq.broker.MutableBrokerFilter.sendToDeadLetterQueue(MutableBrokerFilter.java:274)",
                "at org.apache.activemq.broker.region.Queue.messageExpired(Queue.java:1671)",
                "at org.apache.activemq.broker.region.PrefetchSubscription.dispatchPending(PrefetchSubscription.java:648)"
            ],
            "StepsToReproduce": [
                "1. Enable security on the broker with authorization turned on.",
                "2. Send messages to a queue with a client that does not have write access to ActiveMQ.DLQ.",
                "3. Trigger a RemoveInfo command that causes the broker to check for expired messages.",
                "4. Observe the SecurityException thrown when the broker attempts to send expired messages to DLQ."
            ],
            "ExpectedBehavior": "The broker should use its internal security context to send expired messages to ActiveMQ.DLQ, regardless of the client's permissions.",
            "ObservedBehavior": "The broker throws a SecurityException indicating that the client user does not have write access to ActiveMQ.DLQ when attempting to send expired messages.",
            "Resolution": "[Provide additional details on the resolution or fix applied]"
        }
    },
    {
        "filename": "AMQ-5854.json",
        "creation_time": "2015-06-19T15:36:33.000+0000",
        "bug_report": {
            "BugID": "AMQ-5854",
            "Title": "Duplicate JMS Messages Due to Failover During Transaction Prepare Phase",
            "Description": "When using Spring DMLC with ActiveMQ, a failover during the prepare phase of a two-phase commit can lead to duplicate JMS messages being processed. This occurs when a message is acknowledged but the transaction fails to roll back correctly, resulting in the same message being delivered to multiple consumers.",
            "StackTrace": [
                "org.apache.activemq.transport.InactivityIOException: Cannot send, channel has already failed: ***",
                "at org.apache.activemq.transport.AbstractInactivityMonitor.doOnewaySend(AbstractInactivityMonitor.java:297)",
                "at org.apache.activemq.transport.AbstractInactivityMonitor.oneway(AbstractInactivityMonitor.java:286)",
                "at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:85)",
                "at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:104)",
                "at org.apache.activemq.transport.failover.FailoverTransport.oneway(FailoverTransport.java:658)",
                "at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:68)",
                "at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)",
                "at org.apache.activemq.ActiveMQConnection.doAsyncSendPacket(ActiveMQConnection.java:1321)",
                "at org.apache.activemq.ActiveMQConnection.asyncSendPacket(ActiveMQConnection.java:1315)",
                "at org.apache.activemq.ActiveMQSession.asyncSendPacket(ActiveMQSession.java:1933)",
                "at org.apache.activemq.ActiveMQSession.sendAck(ActiveMQSession.java:2099)",
                "at org.apache.activemq.ActiveMQSession.sendAck(ActiveMQSession.java:2094)",
                "at org.apache.activemq.ActiveMQMessageConsumer.acknowledge(ActiveMQMessageConsumer.java:1083)",
                "at org.apache.activemq.ActiveMQMessageConsumer$5.beforeEnd(ActiveMQMessageConsumer.java:1041)",
                "at org.apache.activemq.TransactionContext.beforeEnd(TransactionContext.java:202)",
                "at org.apache.activemq.TransactionContext.end(TransactionContext.java:409)",
                "at com.atomikos.datasource.xa.XAResourceTransaction.suspend(XAResourceTransaction.java:457)",
                "at com.atomikos.datasource.xa.XAResourceTransaction.prepare(XAResourceTransaction.java:608)",
                "at com.atomikos.icatch.imp.PrepareMessage.send(PrepareMessage.java:61)",
                "at com.atomikos.icatch.imp.PropagationMessage.submit(PropagationMessage.java:111)",
                "at com.atomikos.icatch.imp.Propagator$PropagatorThread.run(Propagator.java:87)",
                "at com.atomikos.icatch.imp.Propagator.submitPropagationMessage(Propagator.java:66)",
                "at com.atomikos.icatch.imp.ActiveStateHandler.prepare(ActiveStateHandler.java:173)",
                "at com.atomikos.icatch.imp.CoordinatorImp.prepare(CoordinatorImp.java:832)",
                "at com.atomikos.icatch.imp.CoordinatorImp.terminate(CoordinatorImp.java:1159)",
                "at com.atomikos.icatch.imp.CompositeTerminatorImp.commit(CompositeTerminatorImp.java:92)",
                "at com.atomikos.icatch.jta.TransactionImp.commit(TransactionImp.java:236)",
                "at com.atomikos.icatch.jta.TransactionManagerImp.commit(TransactionManagerImp.java:498)",
                "at com.atomikos.icatch.jta.UserTransactionImp.commit(UserTransactionImp.java:129)",
                "at org.springframework.transaction.jta.JtaTransactionManager.doCommit(JtaTransactionManager.java:1011)",
                "at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:755)",
                "at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:724)",
                "at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:257)",
                "at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1101)",
                "at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:995)",
                "at java.lang.Thread.run(Thread.java:761)"
            ],
            "StepsToReproduce": [
                "1. Configure ActiveMQ with the following settings: transport.useKeepAlive=false for the broker and wireFormat.maxInactivityDuration=5000 for the client.",
                "2. Implement a Spring DMLC that reads a JMS message from a queue, processes it, and writes to a database.",
                "3. Introduce a delay in the acknowledge method of ActiveMQMessageConsumer to simulate a failover during the transaction prepare phase.",
                "4. Start two consumers on the same queue and observe the behavior when a failover occurs."
            ],
            "ExpectedBehavior": "Each message should be processed exactly once, with no duplicates, even in the event of a failover during the transaction prepare phase.",
            "ObservedBehavior": "Messages are processed multiple times, leading to duplicate entries in the database and multiple output JMS messages generated.",
            "Resolution": "[Provide additional details on the resolution or workaround if available]"
        }
    },
    {
        "filename": "AMQ-3056.json",
        "creation_time": "2010-11-26T14:36:24.000+0000",
        "bug_report": {
            "BugID": "AMQ-3056",
            "Title": "Invalid Acknowledgment Exception During Redelivery in ActiveMQ Topic Subscription",
            "Description": "An exception occurs when processing a redelivery acknowledgment in the ActiveMQ broker, specifically when the acknowledgment is invalid. This issue is logged as a warning and may lead to message delivery failures.",
            "StackTrace": [
                "javax.jms.JMSException: Invalid acknowledgment: MessageAck {commandId = 29455, responseRequired = false, ackType = 3, consumerId = ID:X-2506-1289583778418-0:0:1:1, firstMessageId = ID:X-51821-634249796434830099-1:5:1:3:313195, lastMessageId = ID:X-51821-634249796434830099-1:5:1:3:313195, destination = topic://help.Publish.Instance1, transactionId = null, messageCount = 1}",
                "at org.apache.activemq.broker.region.TopicSubscription.acknowledge(TopicSubscription.java:286)",
                "at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:383)",
                "at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:544)",
                "at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:77)",
                "at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:200)",
                "at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:77)",
                "at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:77)",
                "at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:87)",
                "at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:469)",
                "at org.apache.activemq.command.MessageAck.visit(MessageAck.java:214)",
                "at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:311)",
                "at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185)",
                "at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)",
                "at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)",
                "at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:228)",
                "at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)",
                "at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:220)",
                "at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:202)",
                "at java.lang.Thread.run(Thread.java:619)"
            ],
            "StepsToReproduce": [
                "1. Set up an ActiveMQ broker with a topic subscription.",
                "2. Publish a message to the topic.",
                "3. Simulate a failure that requires redelivery of the message.",
                "4. Attempt to acknowledge the redelivered message."
            ],
            "ExpectedBehavior": "The acknowledgment of the redelivered message should be processed successfully without any exceptions.",
            "ObservedBehavior": "An Invalid acknowledgment exception is thrown, indicating that the acknowledgment cannot be processed due to an invalid state.",
            "Resolution": "[Provide additional details about the resolution or fix applied]"
        }
    },
    {
        "filename": "AMQ-3325.json",
        "creation_time": "2011-05-17T08:58:50.000+0000",
        "bug_report": {
            "BugID": "AMQ-3325",
            "Title": "EOFException: Chunk Stream Does Not Exist Under Load in PList Temp Store",
            "Description": "A concurrency issue occurs in the ActiveMQ broker when it is under heavy load on a multicore system. This sporadic error is related to memory limits and dynamic destination creation/deletion, leading to an EOFException indicating that a chunk stream does not exist at a specific page. This issue can severely impact message processing and system stability.",
            "StackTrace": [
                "2011-04-07 08:04:07,295 [Queue:loadq-4] ERROR FilePendingMessageCursor - I/O error",
                "java.io.EOFException: Chunk stream does not exist at page: 198",
                "at org.apache.kahadb.page.Transaction$2.readPage(Transaction.java:454)",
                "at org.apache.kahadb.page.Transaction$2.<init>(Transaction.java:431)",
                "at org.apache.kahadb.page.Transaction.openInputStream(Transaction.java:428)",
                "at org.apache.kahadb.page.Transaction.load(Transaction.java:404)",
                "at org.apache.kahadb.page.Transaction.load(Transaction.java:361)",
                "at org.apache.activemq.store.kahadb.plist.PList.loadEntry(PList.java:468)",
                "at org.apache.activemq.store.kahadb.plist.PList.getNext(PList.java:483)",
                "at org.apache.activemq.store.kahadb.plist.PList$10.execute(PList.java:312)",
                "at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)",
                "at org.apache.activemq.store.kahadb.plist.PList.getNext(PList.java:310)",
                "at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor$DiskIterator.next(FilePendingMessageCursor.java:500)",
                "at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor$DiskIterator.next(FilePendingMessageCursor.java:473)",
                "at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.next(FilePendingMessageCursor.java:293)",
                "at org.apache.activemq.broker.region.Queue.doPageInForDispatch(Queue.java:1714)",
                "at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1932)",
                "at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1440)",
                "at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:104)",
                "at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:42)"
            ],
            "StepsToReproduce": [
                "1. Set up an ActiveMQ broker with a multicore CPU (8 cores recommended).",
                "2. Configure the broker to handle a high volume of messages.",
                "3. Implement dynamic destination creation and deletion in your message flow.",
                "4. Monitor the broker under load until the error occurs."
            ],
            "ExpectedBehavior": "The ActiveMQ broker should handle message processing without throwing an EOFException, even under high load conditions.",
            "ObservedBehavior": "The broker throws an EOFException indicating that a chunk stream does not exist at a specific page, leading to potential message loss and processing delays.",
            "Resolution": "A fix for this issue has been checked into the tree and tested. It is included in the next maintenance release (version 5.6.0)."
        }
    },
    {
        "filename": "AMQ-2963.json",
        "creation_time": "2010-10-07T06:52:51.000+0000",
        "bug_report": {
            "BugID": "AMQ-2963",
            "Title": "Invalid Destination Name Error with JMSBridgeConnectors in ActiveMQ 5.4.0",
            "Description": "When attempting to create a bridge between IBM Websphere Queue and ActiveMQ queue using JMSBridgeConnectors, an error occurs in ActiveMQ version 5.4.0 that does not occur in version 5.2.0. The error message indicates that the destination name is invalid due to a syntax issue.",
            "StackTrace": [
                "com.ibm.msg.client.jms.DetailedInvalidDestinationException: JMSCMQ0005: The destination name '://IBM.TO.ACTIVEMQ' was not valid. The destination name specified does not conform to published destination syntax. Correct the specified destination name and try again.",
                "at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)",
                "at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)",
                "at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)",
                "at java.lang.reflect.Constructor.newInstance(Constructor.java:513)",
                "at com.ibm.msg.client.commonservices.j2se.NLSServices.createException(NLSServices.java:313)",
                "at com.ibm.msg.client.commonservices.nls.NLSServices.createException(NLSServices.java:388)",
                "at com.ibm.msg.client.wmq.common.internal.WMQDestinationURIParser.setUri(WMQDestinationURIParser.java:524)",
                "at com.ibm.msg.client.wmq.common.internal.WMQDestination.<init>(WMQDestination.java:3148)",
                "at com.ibm.msg.client.wmq.common.internal.WMQDestination.<init>(WMQDestination.java:3104)",
                "at com.ibm.msg.client.wmq.factories.WMQFactoryFactory.createProviderDestination(WMQFactoryFactory.java:444)",
                "at com.ibm.msg.client.jms.admin.JmsDestinationImpl.setProviderDestination(JmsDestinationImpl.java:333)",
                "at com.ibm.msg.client.jms.admin.JmsDestinationImpl.initialise(JmsDestinationImpl.java:231)",
                "at com.ibm.msg.client.jms.admin.JmsDestinationImpl.<init>(JmsDestinationImpl.java:196)",
                "at com.ibm.msg.client.jms.admin.JmsJndiDestinationImpl.<init>(JmsJndiDestinationImpl.java:129)",
                "at com.ibm.mq.jms.MQDestination.<init>(MQDestination.java:186)",
                "at com.ibm.msg.client.wmq.factories.admin.WMQJmsFactory.createDestination(WMQJmsFactory.java:125)",
                "at com.ibm.msg.client.jms.internal.JmsMessageImpl.providerDestToJmsDest(JmsMessageImpl.java:2111)",
                "at com.ibm.msg.client.jms.internal.JmsMessageImpl.getJMSDestination(JmsMessageImpl.java:686)",
                "at org.apache.activemq.ActiveMQMessageTransformation.copyProperties(ActiveMQMessageTransformation.java:206)",
                "at org.apache.activemq.ActiveMQMessageTransformation.transformMessage(ActiveMQMessageTransformation.java:188)",
                "at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1720)",
                "at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:231)",
                "at org.apache.activemq.ActiveMQMessageProducerSupport.send(ActiveMQMessageProducerSupport.java:300)",
                "at org.apache.activemq.ActiveMQQueueSender.send(ActiveMQQueueSender.java:111)",
                "at org.apache.activemq.network.jms.QueueBridge.sendMessage(QueueBridge.java:80)",
                "at org.apache.activemq.network.jms.DestinationBridge.onMessage(DestinationBridge.java:129)",
                "at com.ibm.mq.jms.MQMessageConsumer$FacadeMessageListener.onMessage(MQMessageConsumer.java:399)",
                "at com.ibm.msg.client.jms.internal.JmsMessageConsumerImpl$JmsProviderMessageListener.onMessage(JmsMessageConsumerImpl.java:904)",
                "at com.ibm.msg.client.wmq.internal.WMQAsyncConsumerShadow.honourNoLocal(WMQAsyncConsumerShadow.java:550)",
                "at com.ibm.msg.client.wmq.internal.WMQAsyncConsumerShadow.consumer(WMQAsyncConsumerShadow.java:384)",
                "at com.ibm.mq.jmqi.remote.internal.RemoteAsyncConsume.driveConsumer(RemoteAsyncConsume.java:1478)",
                "at com.ibm.mq.jmqi.remote.internal.RemoteDispatchThread.run(RemoteDispatchThread.java:385)",
                "at com.ibm.msg.client.commonservices.workqueue.WorkQueueItem.runTask(WorkQueueItem.java:209)",
                "at com.ibm.msg.client.commonservices.workqueue.SimpleWorkQueueItem.runItem(SimpleWorkQueueItem.java:100)",
                "at com.ibm.msg.client.commonservices.workqueue.WorkQueueItem.run(WorkQueueItem.java:224)",
                "at com.ibm.msg.client.commonservices.workqueue.WorkQueueManager.runWorkQueueItem(WorkQueueManager.java:298)",
                "at com.ibm.msg.client.commonservices.j2se.workqueue.WorkQueueManagerImplementation$ThreadPoolWorker.run(WorkQueueManagerImplementation.java:1220)"
            ],
            "StepsToReproduce": [
                "1. Configure a JMSBridgeConnector in activemq.xml with the following settings:",
                "   <jmsBridgeConnectors>",
                "       <jmsQueueConnector outboundQueueConnectionFactory=\"#remoteFactory\">",
                "           <inboundQueueBridges>",
                "               <inboundQueueBridge inboundQueueName=\"IBM.TO.ACTIVEMQ\" localQueueName=\"IBM.TO.ACTIVEMQ\"/>",
                "           </inboundQueueBridges>",
                "       </jmsQueueConnector>",
                "   </jmsBridgeConnectors>",
                "2. Attempt to send a message to the IBM Websphere Queue.",
                "3. Observe the error message generated."
            ],
            "ExpectedBehavior": "The message should be sent successfully to the IBM Websphere Queue without any errors regarding the destination name.",
            "ObservedBehavior": "An error occurs indicating that the destination name '://IBM.TO.ACTIVEMQ' is not valid, which prevents the message from being sent.",
            "Resolution": "[Provide additional details on the resolution or fix applied]"
        }
    },
    {
        "filename": "AMQ-3903.json",
        "creation_time": "2012-06-28T14:09:35.000+0000",
        "bug_report": {
            "BugID": "AMQ-3903",
            "Title": "NullPointerException when firing fast producer advisory in ActiveMQ",
            "Description": "When sending a large number of messages to a queue via the web console with the configuration 'advisoryForFastProducers=true', a NullPointerException is thrown, preventing the advisory from being fired. This issue occurs in the AdvisoryBroker class when attempting to retrieve the fast producer advisory topic.",
            "StackTrace": [
                "WARN | Failed to fire fast producer advisory, reason: java.lang.NullPointerException",
                "java.lang.NullPointerException",
                "at org.apache.activemq.advisory.AdvisorySupport.getFastProducerAdvisoryTopic(AdvisorySupport.java:195)",
                "at org.apache.activemq.advisory.AdvisoryBroker.fastProducer(AdvisoryBroker.java:352)",
                "at org.apache.activemq.broker.BrokerFilter.fastProducer(BrokerFilter.java:275)",
                "at org.apache.activemq.broker.BrokerFilter.fastProducer(BrokerFilter.java:275)",
                "at org.apache.activemq.broker.MutableBrokerFilter.fastProducer(MutableBrokerFilter.java:286)",
                "at org.apache.activemq.broker.region.BaseDestination.fastProducer(BaseDestination.java:512)",
                "at org.apache.activemq.broker.region.Queue.send(Queue.java:605)",
                "at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:407)",
                "at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:503)",
                "at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:305)",
                "at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)",
                "at org.apache.activemq.broker.scheduler.SchedulerBroker.send(SchedulerBroker.java:189)",
                "at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)",
                "at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)",
                "at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:306)",
                "at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)",
                "at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:453)",
                "at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:681)",
                "at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:292)",
                "at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:150)",
                "at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)",
                "at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)",
                "at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:231)",
                "at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)",
                "at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)"
            ],
            "StepsToReproduce": [
                "1. Configure ActiveMQ with 'advisoryForFastProducers=true'.",
                "2. Use the web console to send a large number of messages to a queue.",
                "3. Monitor the logs for any exceptions."
            ],
            "ExpectedBehavior": "The fast producer advisory should be fired without any exceptions.",
            "ObservedBehavior": "A NullPointerException is thrown, preventing the fast producer advisory from being fired.",
            "Resolution": "A fix for this issue has been checked into the tree and tested."
        }
    },
    {
        "filename": "AMQ-2693.json",
        "creation_time": "2010-04-12T13:58:58.000+0000",
        "bug_report": {
            "BugID": "AMQ-2693",
            "Title": "Potential Deadlock During Failover with Outstanding Commit in ActiveMQ",
            "Description": "A potential deadlock situation occurs in ActiveMQ when a failover happens while there is an outstanding commit. The system logs indicate that dispatch is paused, waiting for outstanding dispatch interruption processing to complete. This issue is particularly evident in environments where thread creation is slow, leading to intermittent failures in tests such as FailoverConsumerOutstandingCommitTest.",
            "StackTrace": [
                "WARN  ActiveMQConnection - dispatch paused, waiting for outstanding dispatch interruption processing (x) to complete..",
                "java.lang.Thread.State: RUNNABLE",
                "at java.net.SocketOutputStream.socketWrite0(Native Method)",
                "at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:92)",
                "at java.net.SocketOutputStream.write(SocketOutputStream.java:136)",
                "at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.flush(TcpBufferedOutputStream.java:115)",
                "at java.io.DataOutputStream.flush(DataOutputStream.java:106)",
                "at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:168)",
                "at org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:243)",
                "at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1205)",
                "at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:790)",
                "at org.apache.activemq.broker.TransportConnection.dispatchSync(TransportConnection.java:750)",
                "at org.apache.activemq.broker.region.PrefetchSubscription.dispatch(PrefetchSubscription.java:647)",
                "at org.apache.activemq.broker.region.Queue.doActualDispatch(Queue.java:1548)",
                "at org.apache.activemq.broker.region.Queue.doDispatch(Queue.java:1500)",
                "at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1585)",
                "at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1219)",
                "at org.apache.activemq.broker.region.Queue.wakeup(Queue.java:1406)",
                "at org.apache.activemq.broker.region.Queue.addSubscription(Queue.java:377)",
                "at org.apache.activemq.broker.region.AbstractRegion.addConsumer(AbstractRegion.java:279)",
                "at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)",
                "at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:93)",
                "at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:533)",
                "at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:349)",
                "at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:300)",
                "at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)",
                "at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)",
                "at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:216)",
                "at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)",
                "at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:204)",
                "at java.lang.Thread.run(Thread.java:619)"
            ],
            "StepsToReproduce": [
                "1. Set up an ActiveMQ broker with failover configuration.",
                "2. Create a consumer that performs transactions.",
                "3. Simulate a failover while there is an outstanding commit.",
                "4. Observe the logs for warnings about dispatch being paused."
            ],
            "ExpectedBehavior": "The system should handle failover gracefully without entering a deadlock state, allowing transactions to complete and dispatch to resume.",
            "ObservedBehavior": "The system enters a deadlock state where dispatch is paused, and outstanding dispatch interruption processing cannot complete, leading to failures in tests.",
            "Resolution": "[Provide additional details about the resolution or fix applied]"
        }
    },
    {
        "filename": "AMQ-4643.json",
        "creation_time": "2013-07-19T13:39:19.000+0000",
        "bug_report": {
            "BugID": "AMQ-4643",
            "Title": "JDBCIOExceptionHandler does not properly handle DB shutdown during message send",
            "Description": "When a producer sends a persistent message without a transaction and the underlying database is shut down, the JDBCIOExceptionHandler is expected to manage the resulting IOException/SQLException. However, the current behavior results in either an exception being sent back to the client or the transport connector being shut down without proper handling, leading to inconsistent states.",
            "StackTrace": [
                "javax.jms.JMSException: Database 'target/derbydb_15' not found.",
                "at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:54)",
                "at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1391)",
                "at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1319)",
                "at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1809)",
                "at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:289)",
                "at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:224)",
                "at org.apache.activemq.ActiveMQMessageProducerSupport.send(ActiveMQMessageProducerSupport.java:241)",
                "at org.apache.activemq.store.jdbc.StopDBDuringProducerSendTopicTest.sendMessage(StopDBDuringProducerSendTopicTest.java:150)",
                "at org.apache.activemq.store.jdbc.StopDBDuringProducerSendTopicTest.testProducerWithDBShutdown(StopDBDuringProducerSendTopicTest.java:127)",
                "at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                "at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)",
                "at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)",
                "at java.lang.reflect.Method.invoke(Method.java:597)",
                "at junit.framework.TestCase.runTest(TestCase.java:176)",
                "at junit.framework.TestCase.runBare(TestCase.java:141)",
                "at junit.framework.TestResult$1.protect(TestResult.java:122)",
                "at junit.framework.TestResult.runProtected(TestResult.java:142)",
                "at junit.framework.TestResult.run(TestResult.java:125)",
                "at junit.framework.TestCase.run(TestCase.java:129)",
                "at junit.framework.TestSuite.runTest(TestSuite.java:255)",
                "at junit.framework.TestSuite.run(TestSuite.java:250)",
                "at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:84)",
                "at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:53)",
                "at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:123)",
                "at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:104)",
                "at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                "at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)",
                "at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)",
                "at java.lang.reflect.Method.invoke(Method.java:597)",
                "at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)",
                "at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)",
                "at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:81)",
                "at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)"
            ],
            "StepsToReproduce": [
                "1. Configure a producer to send persistent messages without transactions.",
                "2. Set up the JDBCIOExceptionHandler.",
                "3. Shut down the underlying database while the producer is sending a message.",
                "4. Observe the behavior of the system."
            ],
            "ExpectedBehavior": "The JDBCIOExceptionHandler should handle the SQL exception gracefully, shutting down the transport connectors without sending an IOException/SQLException back to the producer.",
            "ObservedBehavior": "The system either sends an IOException/SQLException wrapped in a JMSException back to the client or shuts down the transport connector without proper handling, leading to inconsistent states.",
            "Resolution": "[Provide additional details on the resolution or fix applied]"
        }
    },
    {
        "filename": "AMQ-2902.json",
        "creation_time": "2010-09-07T11:34:15.000+0000",
        "bug_report": {
            "BugID": "AMQ-2902",
            "Title": "INFO Level Logging of TransportDisposedIOException After ResourceAdapter Connection Disposal",
            "Description": "After upgrading to ActiveMQ version 5.4.0, numerous INFO level exceptions are logged indicating a TransportDisposedIOException. The log message states that the peer has been disposed, which appears to be harmless but is confusing and annoying for users.",
            "StackTrace": [
                "2010-09-07 13:23:25,824 INFO  [org.apache.activemq.broker.TransportConnection.Transport] Transport failed: org.apache.activemq.transport.TransportDisposedIOException: Peer (vm://caa.embedded?waitForStart=300000&async=false#13) disposed.",
                "org.apache.activemq.transport.TransportDisposedIOException: Peer (vm://caa.embedded?waitForStart=300000&async=false#13) disposed.",
                "at org.apache.activemq.transport.vm.VMTransport.stop(VMTransport.java:159)",
                "at org.apache.activemq.transport.vm.VMTransportServer$1.stop(VMTransportServer.java:81)",
                "at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:65)",
                "at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:65)",
                "at org.apache.activemq.transport.ResponseCorrelator.stop(ResponseCorrelator.java:132)",
                "at org.apache.activemq.util.ServiceSupport.dispose(ServiceSupport.java:43)",
                "at org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:656)",
                "at org.apache.activemq.ra.ActiveMQManagedConnection.destroy(ActiveMQManagedConnection.java:207)",
                "at org.jboss.resource.connectionmanager.InternalManagedConnectionPool.doDestroy(InternalManagedConnectionPool.java:650)",
                "at org.jboss.resource.connectionmanager.InternalManagedConnectionPool.removeTimedOut(InternalManagedConnectionPool.java:481)",
                "at org.jboss.resource.connectionmanager.IdleRemover$IdleRemoverRunnable.run(IdleRemover.java:164)",
                "at java.lang.Thread.run(Thread.java:619)"
            ],
            "StepsToReproduce": [
                "1. Upgrade ActiveMQ to version 5.4.0.",
                "2. Start the ResourceAdapter with an embedded broker within JBoss 4.2.3.",
                "3. Monitor the logs for any INFO level messages related to TransportDisposedIOException."
            ],
            "ExpectedBehavior": "No INFO level exceptions should be logged when the connection is disposed, or if logged, they should be clearly marked as harmless.",
            "ObservedBehavior": "Multiple INFO level exceptions are logged indicating that the transport has been disposed, which is confusing for users.",
            "Resolution": "A fix for this issue is checked into the tree and tested. The issue has been resolved in version 5.4.2."
        }
    },
    {
        "filename": "AMQ-5665.json",
        "creation_time": "2015-03-16T21:35:15.000+0000",
        "bug_report": {
            "BugID": "AMQ-5665",
            "Title": "NullPointerException in AdvisoryBroker due to MemoryTransactionStore in ActiveMQ 5.11.0",
            "Description": "In ActiveMQ version 5.11.0, a NullPointerException occurs in the AdvisoryBroker when using a non-persistent broker. This issue arises during the delivery of advisories, specifically when the addMessage method is called with a null context, leading to the failure of advisory messages to fire. The problem appears to be related to the handling of messages without a TransactionId in the MemoryTransactionStore.",
            "StackTrace": [
                "java.lang.NullPointerException",
                "at org.apache.activemq.advisory.AdvisoryBroker.fireAdvisory(AdvisoryBroker.java:626)",
                "at org.apache.activemq.advisory.AdvisoryBroker.messageDelivered(AdvisoryBroker.java:397)",
                "at org.apache.activemq.broker.BrokerFilter.messageDelivered(BrokerFilter.java:349)",
                "at org.apache.activemq.broker.BrokerFilter.messageDelivered(BrokerFilter.java:349)",
                "at org.apache.activemq.broker.MutableBrokerFilter.messageDelivered(MutableBrokerFilter.java:360)",
                "at org.apache.activemq.broker.MutableBrokerFilter.messageDelivered(MutableBrokerFilter.java:360)",
                "at org.apache.activemq.broker.region.BaseDestination.messageDelivered(BaseDestination.java:518)",
                "at org.apache.activemq.broker.region.Queue.messageSent(Queue.java:1806)",
                "at org.apache.activemq.broker.region.Queue.doPendingCursorAdditions(Queue.java:794)",
                "at org.apache.activemq.broker.region.Queue.orderedCursorAdd(Queue.java:875)",
                "at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:854)",
                "at org.apache.activemq.broker.region.Queue.send(Queue.java:733)",
                "at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:419)",
                "at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:468)",
                "at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:297)",
                "at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:152)",
                "at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)",
                "at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:307)",
                "at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:157)",
                "at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:157)",
                "at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:541)",
                "at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:768)",
                "at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:334)",
                "at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:188)",
                "at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)",
                "at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)",
                "at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:270)",
                "at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)",
                "at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)",
                "at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)",
                "at java.lang.Thread.run(Thread.java:724)"
            ],
            "StepsToReproduce": [
                "1. Set up a non-persistent broker using ActiveMQ version 5.11.0.",
                "2. Attempt to send a message that does not have a TransactionId.",
                "3. Observe the logs for warnings related to advisory messages.",
                "4. Check for a NullPointerException in the logs."
            ],
            "ExpectedBehavior": "Advisory messages should be fired successfully without any exceptions, regardless of whether the broker is persistent or non-persistent.",
            "ObservedBehavior": "A NullPointerException is thrown when attempting to fire advisory messages, causing them to fail to deliver.",
            "Resolution": "A fix for this issue has been checked into the codebase and is included in version 5.12.0."
        }
    },
    {
        "filename": "AMQ-3725.json",
        "creation_time": "2012-02-17T18:57:21.000+0000",
        "bug_report": {
            "BugID": "AMQ-3725",
            "Title": "KahaDB Broker Termination During SAN Failover Due to IOException Handling",
            "Description": "When using kahaDB with a SAN, the broker terminates during the failback process after a seamless failover. This occurs due to a 2-3 second delay where writes are blocked, leading to a failure in storing to the journal. The JDBC datastore can handle similar situations using the IOExceptionHandler, but when applied to kahaDB, it prevents termination but results in an invalid index.",
            "StackTrace": [
                "ERROR | KahaDB failed to store to Journal",
                "java.io.SyncFailedException: sync failed",
                "\tat java.io.FileDescriptor.sync(Native Method)",
                "\tat org.apache.kahadb.journal.DataFileAppender.processQueue(DataFileAppender.java:382)",
                "\tat org.apache.kahadb.journal.DataFileAppender$2.run(DataFileAppender.java:203)",
                "ERROR | Checkpoint failed",
                "java.io.FileNotFoundException: /Volumes/NAS-01/data/kahadb/db-1.log (No such file or directory)",
                "\tat java.io.RandomAccessFile.open(Native Method)",
                "\tat java.io.RandomAccessFile.<init>(RandomAccessFile.java:216)",
                "\tat org.apache.kahadb.journal.DataFile.openRandomAccessFile(DataFile.java:70)",
                "\tat org.apache.kahadb.journal.DataFileAppender.processQueue(DataFileAppender.java:324)",
                "ERROR | Checkpoint failed",
                "java.io.IOException: Input/output error",
                "\tat java.io.RandomAccessFile.write(Native Method)",
                "\tat java.io.RandomAccessFile.writeLong(RandomAccessFile.java:1001)",
                "\tat org.apache.kahadb.page.PageFile.writeBatch(PageFile.java:1006)",
                "\tat org.apache.kahadb.page.PageFile.flush(PageFile.java:484)",
                "\tat org.apache.activemq.store.kahadb.MessageDatabase.checkpointUpdate(MessageDatabase.java:1290)"
            ],
            "StepsToReproduce": [
                "1. Configure ActiveMQ to use kahaDB as the message store.",
                "2. Set up a SAN and initiate a failover.",
                "3. Observe the broker's behavior during the failback process."
            ],
            "ExpectedBehavior": "The broker should handle the failback process without terminating, allowing for seamless recovery similar to the JDBC datastore.",
            "ObservedBehavior": "The broker terminates during the failback process due to blocked writes and failure to store to the journal, resulting in an invalid index.",
            "Resolution": "[Provide additional details on the resolution or workaround]"
        }
    },
    {
        "filename": "AMQ-3085.json",
        "creation_time": "2010-12-15T12:18:12.000+0000",
        "bug_report": {
            "BugID": "AMQ-3085",
            "Title": "IndexOutOfBoundsException in FailoverTransport.updateURIs due to UnknownHostException",
            "Description": "The FailoverTransport.updateURIs method throws an IndexOutOfBoundsException when the broker returns hosts that are not resolvable on the client. This issue disrupts the update logic in the failover transport. A workaround is to disable updates by setting updateURIsSupported=false on the failover URI. The bug occurs when the transport attempts to add a new URI that cannot be resolved, leading to an unexpected error.",
            "StackTrace": [
                "2010-12-10 07:48:16,574 [ActiveMQ Transport: tcp://xx:61616] DEBUG  failover.FailoverTransport:228 - Transport failed with the following exception:",
                "java.io.IOException: Unexpected error occurred",
                "\tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:208) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]",
                "\tat java.lang.Thread.run(Thread.java:619) [na:1.6.0_12]",
                "Caused by: java.lang.IndexOutOfBoundsException: Index: 12, Size: 11",
                "\tat java.util.concurrent.CopyOnWriteArrayList.add(CopyOnWriteArrayList.java:409) ~[na:1.6.0_12]",
                "\tat org.apache.activemq.transport.failover.FailoverTransport.add(FailoverTransport.java:613) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]",
                "\tat org.apache.activemq.transport.failover.FailoverTransport.updateURIs(FailoverTransport.java:1046) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]",
                "\tat org.apache.activemq.transport.failover.FailoverTransport.processNewTransports(FailoverTransport.java:285) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]",
                "\tat org.apache.activemq.transport.failover.FailoverTransport.handleConnectionControl(FailoverTransport.java:265) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]",
                "\tat org.apache.activemq.transport.failover.FailoverTransport$3.onCommand(FailoverTransport.java:177) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]",
                "\tat org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]",
                "\tat org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:228) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]",
                "\tat org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]",
                "\tat org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:219) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]",
                "\tat org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:201) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]"
            ],
            "StepsToReproduce": [
                "1. Configure the ActiveMQ client to connect to a broker with a host that is not resolvable.",
                "2. Attempt to perform an operation that triggers the updateURIs method in the FailoverTransport.",
                "3. Observe the logs for the IndexOutOfBoundsException."
            ],
            "ExpectedBehavior": "The FailoverTransport should handle the unknown host gracefully without throwing an IndexOutOfBoundsException.",
            "ObservedBehavior": "An IndexOutOfBoundsException is thrown when the updateURIs method attempts to add a new URI that cannot be resolved.",
            "Resolution": "[Provide additional details on the resolution or fix applied]"
        }
    },
    {
        "filename": "AMQ-3504.json",
        "creation_time": "2011-09-19T14:33:49.000+0000",
        "bug_report": {
            "BugID": "AMQ-3504",
            "Title": "NullPointerException in StompServlet during WebSocket Connection with Chrome and Firefox 6",
            "Description": "A NullPointerException occurs in the StompServlet when attempting to establish a WebSocket connection using Chrome 14.0.835.163 or Firefox 6. This issue does not occur with Firefox 5 or Safari, suggesting a potential incompatibility with the WebSocket implementation in these browsers.",
            "StackTrace": [
                "2011-09-19 09:18:33,931 | WARN  | /stomp | org.eclipse.jetty.util.log | qtp1545215993-39",
                "java.lang.NullPointerException",
                "    at org.apache.activemq.transport.ws.StompServlet.doGet(StompServlet.java:51)",
                "    at javax.servlet.http.HttpServlet.service(HttpServlet.java:693)",
                "    at org.eclipse.jetty.websocket.WebSocketServlet.service(WebSocketServlet.java:73)",
                "    at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)",
                "    at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:527)",
                "    at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:423)",
                "    at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:223)",
                "    at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:930)",
                "    at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:358)",
                "    at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:183)",
                "    at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:866)",
                "    at org.eclipse.jetty.server.ScopedHandler.handle(ScopedHandler.java:117)",
                "    at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:113)",
                "    at org.eclipse.jetty.server.Server.handle(Server.java:351)",
                "    at org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:594)",
                "    at org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:1042)",
                "    at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:549)",
                "    at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:211)",
                "    at org.eclipse.jetty.server.HttpConnection.handle(HttpConnection.java:424)",
                "    at org.eclipse.jetty.server.bio.SocketConnector$ConnectorEndPoint.run(SocketConnector.java:241)",
                "    at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:436)",
                "    at java.lang.Thread.run(Thread.java:680)"
            ],
            "StepsToReproduce": [
                "1. Use Chrome version 14.0.835.163 or Firefox version 6.",
                "2. Attempt to connect to the WebSocket endpoint at '/stomp'.",
                "3. Observe the server logs for any exceptions."
            ],
            "ExpectedBehavior": "The WebSocket connection should be established successfully without any exceptions.",
            "ObservedBehavior": "A NullPointerException is thrown in the StompServlet, preventing the WebSocket connection from being established.",
            "Resolution": "[Provide additional details about the resolution or fix applied]"
        }
    },
    {
        "filename": "AMQ-6707.json",
        "creation_time": "2017-06-19T11:29:47.000+0000",
        "bug_report": {
            "BugID": "AMQ-6707",
            "Title": "JDBC XA Transaction Commit Failure with ActiveMQ 5.14.5",
            "Description": "When ActiveMQ 5.14.5 is configured with JDBC persistence storage (Postgres), an error occurs intermittently during transaction commits. The error message indicates that the transaction was rolled back due to a failure in the commit process, specifically related to the removal of prepared transaction state from the message.",
            "StackTrace": [
                "2017-06-15 01:41:37,418 | ERROR | enerContainer-21 | CommitTask | 67 - org.apache.aries.transaction.manager - 1.3.1 | Unexpected exception committing org.apache.geronimo.transaction.manager.WrapperNamedXAResource@34ac9d62; continuing to commit other RMs",
                "javax.transaction.xa.XAException: STORE COMMIT FAILED: Transaction rolled back xaErrorCode:104",
                "at org.apache.activemq.TransactionContext.toXAException(TransactionContext.java:793)",
                "at org.apache.activemq.TransactionContext.commit(TransactionContext.java:622)",
                "at org.apache.geronimo.transaction.manager.WrapperNamedXAResource.commit(WrapperNamedXAResource.java:54)",
                "at org.apache.geronimo.transaction.manager.CommitTask.run(CommitTask.java:64)",
                "at org.apache.geronimo.transaction.manager.TransactionImpl.commitResources(TransactionImpl.java:688)",
                "at org.apache.geronimo.transaction.manager.TransactionImpl.commit(TransactionImpl.java:327)",
                "at org.apache.geronimo.transaction.manager.TransactionManagerImpl.commit(TransactionManagerImpl.java:252)",
                "at org.springframework.transaction.jta.JtaTransactionManager.doCommit(JtaTransactionManager.java:1020)",
                "at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:761)",
                "at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:730)",
                "at org.apache.aries.transaction.internal.AriesPlatformTransactionManager.commit(AriesPlatformTransactionManager.java:75)",
                "at sun.reflect.GeneratedMethodAccessor180.invoke(Unknown Source)",
                "at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                "at java.lang.reflect.Method.invoke(Method.java:498)",
                "at com.ectsp.spring.osgi.PlatformTransactionManagerFactoryBean$ProxyTxManagerHandler.invoke(PlatformTransactionManagerFactoryBean.java:115)",
                "at com.sun.proxy.$Proxy68.commit(Unknown Source)",
                "at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:245)",
                "at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1164)",
                "at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1156)",
                "at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1053)",
                "at java.lang.Thread.run(Thread.java:748)",
                "Caused by: javax.transaction.xa.XAException: STORE COMMIT FAILED: Transaction rolled back xaErrorCode:104",
                "at org.apache.activemq.transaction.Transaction.newXAException(Transaction.java:212)",
                "at org.apache.activemq.transaction.XATransaction.storeCommit(XATransaction.java:93)",
                "at org.apache.activemq.transaction.XATransaction.commit(XATransaction.java:76)",
                "at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:252)",
                "at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:118)",
                "at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:118)",
                "at org.apache.activemq.broker.TransportConnection.processCommitTransactionTwoPhase(TransportConnection.java:547)",
                "at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:102)",
                "at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:336)",
                "at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:200)",
                "at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)",
                "at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:125)",
                "at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:301)",
                "at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)",
                "at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:233)",
                "at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:215)",
                "at java.lang.Thread.run(Thread.java:745)",
                "Caused by: java.io.IOException: Could not remove prepared transaction state from message add for sequenceId: 4025171",
                "at org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doCommitAddOp(DefaultJDBCAdapter.java:1031)",
                "at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.commitAdd(JDBCPersistenceAdapter.java:780)",
                "at org.apache.activemq.store.jdbc.JdbcMemoryTransactionStore$CommitAddOutcome.run(JdbcMemoryTransactionStore.java:146)",
                "at org.apache.activemq.store.memory.MemoryTransactionStore$Tx.commit(MemoryTransactionStore.java:101)",
                "at org.apache.activemq.store.memory.MemoryTransactionStore.commit(MemoryTransactionStore.java:270)",
                "at org.apache.activemq.transaction.XATransaction.storeCommit(XATransaction.java:86)"
            ],
            "StepsToReproduce": [
                "1. Configure ActiveMQ 5.14.5 with JDBC persistence storage using Postgres.",
                "2. Initiate multiple transactions that involve adding and removing messages.",
                "3. Monitor the logs for any commit failures during transaction processing."
            ],
            "ExpectedBehavior": "Transactions should commit successfully without any errors, and the prepared transaction state should be removed from the message.",
            "ObservedBehavior": "Intermittent failures occur during transaction commits, resulting in XAException with the message 'STORE COMMIT FAILED: Transaction rolled back xaErrorCode:104'.",
            "Resolution": "A fix for this issue has been checked into the tree and tested."
        }
    },
    {
        "filename": "AMQ-5384.json",
        "creation_time": "2014-10-06T09:26:58.000+0000",
        "bug_report": {
            "BugID": "AMQ-5384",
            "Title": "Deadlock on Database Connections in JDBCMessageStore.removeMessage Method",
            "Description": "Under a load of 30-50 requests per second, ActiveMQ 5.9 experiences deadlocks due to improper handling of database connections when using JDBC persistence. This issue manifests during performance testing, causing the application to hang almost every night. The deadlock occurs when the JDBCMessageStore.removeMessage method attempts to acquire a new database connection while another connection is already in use, leading to a situation where all available connections are exhausted.",
            "StackTrace": [
                "2014-10-06 08:44:40,646 | INFO  | Logging the stack trace by which the overdue resource was checked-out. | com.mchange.v2.resourcepool.BasicResourcePool | C3P0PooledConnectionPoolManager[identityToken->2x1e6s941raztn6mju110",
                "java.lang.Exception: DEBUG STACK TRACE: Overdue resource check-out stack trace.",
                "at com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:555)",
                "at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutAndMarkConnectionInUse(C3P0PooledConnectionPool.java:756)",
                "at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:683)",
                "at com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:140)",
                "at org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:58)",
                "at org.apache.activemq.store.jdbc.TransactionContext.begin(TransactionContext.java:163)",
                "at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.beginTransaction(JDBCPersistenceAdapter.java:510)",
                "at org.apache.activemq.store.memory.MemoryTransactionStore$Tx.commit(MemoryTransactionStore.java:92)",
                "at org.apache.activemq.store.memory.MemoryTransactionStore.commit(MemoryTransactionStore.java:259)",
                "at org.apache.activemq.transaction.XATransaction.storeCommit(XATransaction.java:85)",
                "at org.apache.activemq.transaction.XATransaction.commit(XATransaction.java:75)",
                "at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:253)",
                "at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:112)",
                "at org.apache.activemq.broker.TransportConnection.processCommitTransactionTwoPhase(TransportConnection.java:433)",
                "at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:102)",
                "at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:292)",
                "at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:149)",
                "at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)",
                "at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)",
                "at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:270)",
                "at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)",
                "at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:214)",
                "at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:196)",
                "at java.lang.Thread.run(Thread.java:662)"
            ],
            "StepsToReproduce": [
                "1. Set up ActiveMQ 5.9 with Oracle 11.2 as the persistent store and C3P0 as the connection pool.",
                "2. Configure the system to handle 30-50 requests per second.",
                "3. Initiate performance testing on the system.",
                "4. Monitor the application for deadlocks or hangs during the testing period."
            ],
            "ExpectedBehavior": "The system should handle multiple requests without deadlocking, allowing for smooth performance during high load conditions.",
            "ObservedBehavior": "The system hangs and becomes unresponsive during performance testing due to deadlocks on database connections.",
            "Resolution": "A potential solution is to modify the JDBCMessageStore.removeMessage method to pass the existing ConnectionContext object to the persistenceAdapter.getStoreSequenceIdForMessageId method, allowing it to reuse the same database connection."
        }
    },
    {
        "filename": "AMQ-5783.json",
        "creation_time": "2015-05-20T08:47:56.000+0000",
        "bug_report": {
            "BugID": "AMQ-5783",
            "Title": "EOFException when browsing Topic due to free page in KahaDB",
            "Description": "When an offline durable subscriber times out (as configured by offlineDurableSubscriberTimeout), a WARNING message is logged indicating a failure to browse the topic. The error is caused by an EOFException stating that a chunk stream does not exist because the page is marked as free.",
            "StackTrace": [
                "2015-05-13 13:45:08,472 [sage] Scheduler] - WARN  Topic - Failed to browse Topic: XXXXX",
                "java.io.EOFException: Chunk stream does not exist, page: 39 is marked free",
                "at org.apache.activemq.store.kahadb.disk.page.Transaction$2.readPage(Transaction.java:470)",
                "at org.apache.activemq.store.kahadb.disk.page.Transaction$2.<init>(Transaction.java:447)",
                "at org.apache.activemq.store.kahadb.disk.page.Transaction.openInputStream(Transaction.java:444)",
                "at org.apache.activemq.store.kahadb.disk.page.Transaction.load(Transaction.java:420)",
                "at org.apache.activemq.store.kahadb.disk.page.Transaction.load(Transaction.java:377)",
                "at org.apache.activemq.store.kahadb.disk.index.BTreeIndex.loadNode(BTreeIndex.java:266)",
                "at org.apache.activemq.store.kahadb.disk.index.BTreeIndex.getRoot(BTreeIndex.java:174)",
                "at org.apache.activemq.store.kahadb.disk.index.BTreeIndex.iterator(BTreeIndex.java:236)",
                "at org.apache.activemq.store.kahadb.MessageDatabase$MessageOrderIndex$MessageOrderIterator.<init>(MessageDatabase.java:3033)",
                "at org.apache.activemq.store.kahadb.MessageDatabase$MessageOrderIndex.iterator(MessageDatabase.java:2985)",
                "at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$4.execute(KahaDBStore.java:564)",
                "at org.apache.activemq.store.kahadb.disk.page.Transaction.execute(Transaction.java:779)",
                "at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recover(KahaDBStore.java:558)",
                "at org.apache.activemq.store.ProxyTopicMessageStore.recover(ProxyTopicMessageStore.java:62)",
                "at org.apache.activemq.broker.region.Topic.doBrowse(Topic.java:589)",
                "at org.apache.activemq.broker.region.Topic.access$100(Topic.java:65)",
                "at org.apache.activemq.broker.region.Topic$6.run(Topic.java:722)",
                "at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)",
                "at java.util.TimerThread.mainLoop(Timer.java:555)",
                "at java.util.TimerThread.run(Timer.java:505)"
            ],
            "StepsToReproduce": [
                "1. Configure an offline durable subscriber with a timeout (offlineDurableSubscriberTimeout).",
                "2. Allow the subscriber to go offline.",
                "3. Wait for the timeout period to elapse.",
                "4. Attempt to browse the topic associated with the offline durable subscriber."
            ],
            "ExpectedBehavior": "The system should successfully browse the topic without any errors or warnings.",
            "ObservedBehavior": "A WARNING message is logged indicating a failure to browse the topic, followed by an EOFException stating that a chunk stream does not exist because the page is marked free.",
            "Resolution": "A fix for this issue has been checked into the tree and tested."
        }
    },
    {
        "filename": "AMQ-2965.json",
        "creation_time": "2010-10-07T20:18:59.000+0000",
        "bug_report": {
            "BugID": "AMQ-2965",
            "Title": "ActiveMQ Fails to Start Due to UnknownHostException When No DNS Resolution is Available",
            "Description": "ActiveMQ is installed on a physical server with two ethernet interfaces: one for external traffic (10.x.x.x) and another for internal communication (172.x.x.x). ActiveMQ is configured to listen only on the internal interface (172.x.x.x). However, when internal DNS resolution is not available, ActiveMQ fails to start, resulting in an UnknownHostException. This issue can be worked around by adding entries to the /etc/hosts file for each machine, which is not feasible in large environments.",
            "StackTrace": [
                "java.net.UnknownHostException: Q01M0003: Q01M0003",
                "at java.net.InetAddress.getLocalHost(Unknown Source)",
                "at org.apache.activemq.util.IdGenerator.<clinit>(IdGenerator.java:52)",
                "at org.apache.activemq.broker.region.RegionBroker.<clinit>(RegionBroker.java:75)",
                "at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1734)",
                "at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1728)",
                "at org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:1688)",
                "at org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:706)",
                "at org.apache.activemq.broker.BrokerService.start(BrokerService.java:469)",
                "at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:85)",
                "at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                "at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)",
                "at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)",
                "at java.lang.reflect.Method.invoke(Unknown Source)",
                "at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1414)",
                "at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1375)",
                "at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1335)",
                "at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)",
                "at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)",
                "at java.security.AccessController.doPrivileged(Native Method)",
                "at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)",
                "at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)",
                "at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)",
                "at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)",
                "at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)",
                "at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)",
                "at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)",
                "at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:728)",
                "at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:380)",
                "at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)",
                "at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)",
                "at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)",
                "at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)",
                "at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)",
                "at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)",
                "at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)",
                "at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)",
                "at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)",
                "at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:136)",
                "at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)",
                "at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:82)",
                "at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                "at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)",
                "at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)",
                "at java.lang.reflect.Method.invoke(Unknown Source)",
                "at org.apache.activemq.console.Main.runTaskClass(Main.java:251)",
                "at org.apache.activemq.console.Main.main(Main.java:107)",
                "at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                "at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)",
                "at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)",
                "at java.lang.reflect.Method.invoke(Unknown Source)",
                "at org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:240)",
                "at java.lang.Thread.run(Unknown Source)"
            ],
            "StepsToReproduce": [
                "Install ActiveMQ on a physical server with two ethernet interfaces.",
                "Configure ActiveMQ to listen only on the internal interface (172.x.x.x).",
                "Ensure that external DNS resolution is available but internal DNS resolution is not.",
                "Attempt to start ActiveMQ."
            ],
            "ExpectedBehavior": "ActiveMQ should start successfully without any exceptions.",
            "ObservedBehavior": "ActiveMQ fails to start and throws an UnknownHostException due to the inability to resolve the hostname.",
            "Resolution": "A fix for this issue is checked into the tree and tested."
        }
    }
]